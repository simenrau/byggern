
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007e  00800200  00000c80  00000d14  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c80  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  0080027e  0080027e  00000d92  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d92  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  00000dee  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000db5  00000000  00000000  00000f0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006ff  00000000  00000000  00001cc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000092b  00000000  00000000  000023c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002a8  00000000  00000000  00002cf0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000354  00000000  00000000  00002f98  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005bc  00000000  00000000  000032ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000100  00000000  00000000  000038a8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 e8       	ldi	r30, 0x80	; 128
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 37       	cpi	r26, 0x7E	; 126
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ae e7       	ldi	r26, 0x7E	; 126
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	aa 38       	cpi	r26, 0x8A	; 138
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	11 d1       	rcall	.+546    	; 0x342 <main>
 120:	ad c5       	rjmp	.+2906   	; 0xc7c <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <CAN_init>:
	for(int i = 0; i < can_tx.length; i++)
	{
		MCP_write(MCP_TXB0D0 + i, can_tx.data[i]);
	}
	MCP_rts(MCP_RTS_TX0);
}
 124:	5a d0       	rcall	.+180    	; 0x1da <MCP_init>
 126:	60 e8       	ldi	r22, 0x80	; 128
 128:	8f e0       	ldi	r24, 0x0F	; 15
 12a:	67 d0       	rcall	.+206    	; 0x1fa <MCP_write>
 12c:	63 e0       	ldi	r22, 0x03	; 3
 12e:	8b e2       	ldi	r24, 0x2B	; 43
 130:	64 d0       	rcall	.+200    	; 0x1fa <MCP_write>
 132:	60 e0       	ldi	r22, 0x00	; 0
 134:	8c e2       	ldi	r24, 0x2C	; 44
 136:	61 d0       	rcall	.+194    	; 0x1fa <MCP_write>
 138:	60 e0       	ldi	r22, 0x00	; 0
 13a:	8d e2       	ldi	r24, 0x2D	; 45
 13c:	5e d0       	rcall	.+188    	; 0x1fa <MCP_write>
 13e:	60 e0       	ldi	r22, 0x00	; 0
 140:	8c e0       	ldi	r24, 0x0C	; 12
 142:	5b d0       	rcall	.+182    	; 0x1fa <MCP_write>
 144:	60 e0       	ldi	r22, 0x00	; 0
 146:	8d e0       	ldi	r24, 0x0D	; 13
 148:	58 d0       	rcall	.+176    	; 0x1fa <MCP_write>
 14a:	60 e6       	ldi	r22, 0x60	; 96
 14c:	80 e6       	ldi	r24, 0x60	; 96
 14e:	55 d0       	rcall	.+170    	; 0x1fa <MCP_write>
 150:	60 e6       	ldi	r22, 0x60	; 96
 152:	80 e7       	ldi	r24, 0x70	; 112
 154:	52 d0       	rcall	.+164    	; 0x1fa <MCP_write>
 156:	40 e0       	ldi	r20, 0x00	; 0
 158:	60 ee       	ldi	r22, 0xE0	; 224
 15a:	8f e0       	ldi	r24, 0x0F	; 15
 15c:	63 c0       	rjmp	.+198    	; 0x224 <MCP_bit_mod>
 15e:	08 95       	ret

00000160 <CAN_data_receive>:

void CAN_data_receive(msg *message)
{
 160:	ef 92       	push	r14
 162:	ff 92       	push	r15
 164:	0f 93       	push	r16
 166:	1f 93       	push	r17
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	7c 01       	movw	r14, r24
	//msg message;

	message->id = (MCP_read(MCP_RXB0SIDH));
 16e:	81 e6       	ldi	r24, 0x61	; 97
 170:	39 d0       	rcall	.+114    	; 0x1e4 <MCP_read>
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	f7 01       	movw	r30, r14
 176:	91 83       	std	Z+1, r25	; 0x01
 178:	80 83       	st	Z, r24

	//message.id = MCP_read(MCP_RXB0SIDL);

	message->length = MCP_read(MCP_RXB0DLC);
 17a:	85 e6       	ldi	r24, 0x65	; 101
 17c:	33 d0       	rcall	.+102    	; 0x1e4 <MCP_read>
 17e:	f7 01       	movw	r30, r14
 180:	82 83       	std	Z+2, r24	; 0x02
	
	if (message->length > 8){
 182:	89 30       	cpi	r24, 0x09	; 9
 184:	40 f0       	brcs	.+16     	; 0x196 <CAN_data_receive+0x36>
		message->length = 8;
 186:	88 e0       	ldi	r24, 0x08	; 8
 188:	82 83       	std	Z+2, r24	; 0x02
 18a:	87 01       	movw	r16, r14
 18c:	0d 5f       	subi	r16, 0xFD	; 253
 18e:	1f 4f       	sbci	r17, 0xFF	; 255
	}
	MCP_rts(MCP_RTS_TX0);
}

void CAN_data_receive(msg *message)
{
 190:	c0 e0       	ldi	r28, 0x00	; 0
 192:	d0 e0       	ldi	r29, 0x00	; 0
 194:	03 c0       	rjmp	.+6      	; 0x19c <CAN_data_receive+0x3c>
	
	if (message->length > 8){
		message->length = 8;
	}
	
	for(int i = 0; i < message->length; i++) 
 196:	81 11       	cpse	r24, r1
 198:	f8 cf       	rjmp	.-16     	; 0x18a <CAN_data_receive+0x2a>
 19a:	0d c0       	rjmp	.+26     	; 0x1b6 <CAN_data_receive+0x56>
	{
		message->data[i] = MCP_read(MCP_RXB0DM + i);
 19c:	8c 2f       	mov	r24, r28
 19e:	8a 59       	subi	r24, 0x9A	; 154
 1a0:	21 d0       	rcall	.+66     	; 0x1e4 <MCP_read>
 1a2:	f8 01       	movw	r30, r16
 1a4:	81 93       	st	Z+, r24
 1a6:	8f 01       	movw	r16, r30
	
	if (message->length > 8){
		message->length = 8;
	}
	
	for(int i = 0; i < message->length; i++) 
 1a8:	21 96       	adiw	r28, 0x01	; 1
 1aa:	f7 01       	movw	r30, r14
 1ac:	22 81       	ldd	r18, Z+2	; 0x02
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	c2 17       	cp	r28, r18
 1b2:	d3 07       	cpc	r29, r19
 1b4:	9c f3       	brlt	.-26     	; 0x19c <CAN_data_receive+0x3c>
	{
		message->data[i] = MCP_read(MCP_RXB0DM + i);
	}
	
	MCP_bit_mod(MCP_CANINTF,0x01,0);
 1b6:	40 e0       	ldi	r20, 0x00	; 0
 1b8:	61 e0       	ldi	r22, 0x01	; 1
 1ba:	8c e2       	ldi	r24, 0x2C	; 44
 1bc:	33 d0       	rcall	.+102    	; 0x224 <MCP_bit_mod>

	//return message;
}
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	1f 91       	pop	r17
 1c4:	0f 91       	pop	r16
 1c6:	ff 90       	pop	r15
 1c8:	ef 90       	pop	r14
 1ca:	08 95       	ret

000001cc <MCP_reset>:
{
	PORTB &= ~(1 << SS);
	
	SPI_MasterTransmit(rts);
	
	PORTB |= (1 << SS);
 1cc:	2f 98       	cbi	0x05, 7	; 5
 1ce:	80 ec       	ldi	r24, 0xC0	; 192
 1d0:	c7 d0       	rcall	.+398    	; 0x360 <SPI_MasterTransmit>
 1d2:	2f 9a       	sbi	0x05, 7	; 5
 1d4:	80 e0       	ldi	r24, 0x00	; 0
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	08 95       	ret

000001da <MCP_init>:
 1da:	b9 d0       	rcall	.+370    	; 0x34e <SPI_MasterInit>
 1dc:	f7 df       	rcall	.-18     	; 0x1cc <MCP_reset>
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	08 95       	ret

000001e4 <MCP_read>:
 1e4:	cf 93       	push	r28
 1e6:	c8 2f       	mov	r28, r24
 1e8:	2f 98       	cbi	0x05, 7	; 5
 1ea:	83 e0       	ldi	r24, 0x03	; 3
 1ec:	b9 d0       	rcall	.+370    	; 0x360 <SPI_MasterTransmit>
 1ee:	8c 2f       	mov	r24, r28
 1f0:	b7 d0       	rcall	.+366    	; 0x360 <SPI_MasterTransmit>
 1f2:	bb d0       	rcall	.+374    	; 0x36a <SPI_SlaveReceive>
 1f4:	2f 9a       	sbi	0x05, 7	; 5
 1f6:	cf 91       	pop	r28
 1f8:	08 95       	ret

000001fa <MCP_write>:
 1fa:	cf 93       	push	r28
 1fc:	df 93       	push	r29
 1fe:	d8 2f       	mov	r29, r24
 200:	c6 2f       	mov	r28, r22
 202:	2f 98       	cbi	0x05, 7	; 5
 204:	82 e0       	ldi	r24, 0x02	; 2
 206:	ac d0       	rcall	.+344    	; 0x360 <SPI_MasterTransmit>
 208:	8d 2f       	mov	r24, r29
 20a:	aa d0       	rcall	.+340    	; 0x360 <SPI_MasterTransmit>
 20c:	8c 2f       	mov	r24, r28
 20e:	a8 d0       	rcall	.+336    	; 0x360 <SPI_MasterTransmit>
 210:	2f 9a       	sbi	0x05, 7	; 5
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	08 95       	ret

00000218 <MCP_read_status>:
	
}

char MCP_read_status(void)
{
	PORTB &= ~(1 << SS);
 218:	2f 98       	cbi	0x05, 7	; 5
	
	SPI_MasterTransmit(MCP_READ_STATUS);
 21a:	80 ea       	ldi	r24, 0xA0	; 160
 21c:	a1 d0       	rcall	.+322    	; 0x360 <SPI_MasterTransmit>
	char status = SPI_SlaveReceive();
 21e:	a5 d0       	rcall	.+330    	; 0x36a <SPI_SlaveReceive>
	
	PORTB |= (1 << SS);
 220:	2f 9a       	sbi	0x05, 7	; 5
	
	return status;
}
 222:	08 95       	ret

00000224 <MCP_bit_mod>:

void MCP_bit_mod(char address, char mask, char data)
{
 224:	1f 93       	push	r17
 226:	cf 93       	push	r28
 228:	df 93       	push	r29
 22a:	18 2f       	mov	r17, r24
 22c:	d6 2f       	mov	r29, r22
 22e:	c4 2f       	mov	r28, r20
	PORTB &= ~(1 << SS);
 230:	2f 98       	cbi	0x05, 7	; 5
	
	SPI_MasterTransmit(MCP_BITMOD);
 232:	85 e0       	ldi	r24, 0x05	; 5
 234:	95 d0       	rcall	.+298    	; 0x360 <SPI_MasterTransmit>
	SPI_MasterTransmit(address);
 236:	81 2f       	mov	r24, r17
 238:	93 d0       	rcall	.+294    	; 0x360 <SPI_MasterTransmit>
	SPI_MasterTransmit(mask);
 23a:	8d 2f       	mov	r24, r29
 23c:	91 d0       	rcall	.+290    	; 0x360 <SPI_MasterTransmit>
	SPI_MasterTransmit(data);
 23e:	8c 2f       	mov	r24, r28
 240:	8f d0       	rcall	.+286    	; 0x360 <SPI_MasterTransmit>
	
	PORTB |= ~(1 << SS);
 242:	85 b1       	in	r24, 0x05	; 5
 244:	8f 67       	ori	r24, 0x7F	; 127
 246:	85 b9       	out	0x05, r24	; 5
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	1f 91       	pop	r17
 24e:	08 95       	ret

00000250 <test_CAN_nodes>:
	printf("Length: %d \n",message->length);

	/*can_message.data[0] = x_volt;
	can_message.data[1] = y_volt;
	can_message.data[2] = joystick_pressed;*/
}
 250:	0f 2e       	mov	r0, r31
 252:	f6 e0       	ldi	r31, 0x06	; 6
 254:	cf 2e       	mov	r12, r31
 256:	f2 e0       	ldi	r31, 0x02	; 2
 258:	df 2e       	mov	r13, r31
 25a:	f0 2d       	mov	r31, r0
 25c:	0f 2e       	mov	r0, r31
 25e:	f6 e4       	ldi	r31, 0x46	; 70
 260:	af 2e       	mov	r10, r31
 262:	f2 e0       	ldi	r31, 0x02	; 2
 264:	bf 2e       	mov	r11, r31
 266:	f0 2d       	mov	r31, r0
 268:	0f 2e       	mov	r0, r31
 26a:	f3 e5       	ldi	r31, 0x53	; 83
 26c:	8f 2e       	mov	r8, r31
 26e:	f2 e0       	ldi	r31, 0x02	; 2
 270:	9f 2e       	mov	r9, r31
 272:	f0 2d       	mov	r31, r0
 274:	41 2c       	mov	r4, r1
 276:	51 2c       	mov	r5, r1
 278:	07 e3       	ldi	r16, 0x37	; 55
 27a:	12 e0       	ldi	r17, 0x02	; 2
 27c:	cd df       	rcall	.-102    	; 0x218 <MCP_read_status>
 27e:	c8 2f       	mov	r28, r24
 280:	c3 70       	andi	r28, 0x03	; 3
 282:	8d e2       	ldi	r24, 0x2D	; 45
 284:	af df       	rcall	.-162    	; 0x1e4 <MCP_read>
 286:	d8 2f       	mov	r29, r24
 288:	8c e2       	ldi	r24, 0x2C	; 44
 28a:	ac df       	rcall	.-168    	; 0x1e4 <MCP_read>
 28c:	1f 92       	push	r1
 28e:	df 93       	push	r29
 290:	1f 92       	push	r1
 292:	8f 93       	push	r24
 294:	df 92       	push	r13
 296:	cf 92       	push	r12
 298:	fe d1       	rcall	.+1020   	; 0x696 <printf>
 29a:	0f 90       	pop	r0
 29c:	0f 90       	pop	r0
 29e:	0f 90       	pop	r0
 2a0:	0f 90       	pop	r0
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	c3 30       	cpi	r28, 0x03	; 3
 2a8:	21 f4       	brne	.+8      	; 0x2b2 <test_CAN_nodes+0x62>
 2aa:	8a e2       	ldi	r24, 0x2A	; 42
 2ac:	92 e0       	ldi	r25, 0x02	; 2
 2ae:	04 d2       	rcall	.+1032   	; 0x6b8 <puts>
 2b0:	03 c0       	rjmp	.+6      	; 0x2b8 <test_CAN_nodes+0x68>
 2b2:	c1 50       	subi	r28, 0x01	; 1
 2b4:	c2 30       	cpi	r28, 0x02	; 2
 2b6:	10 f7       	brcc	.-60     	; 0x27c <test_CAN_nodes+0x2c>
 2b8:	8b e0       	ldi	r24, 0x0B	; 11
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	7b d0       	rcall	.+246    	; 0x3b4 <malloc>
 2be:	7c 01       	movw	r14, r24
 2c0:	4f df       	rcall	.-354    	; 0x160 <CAN_data_receive>
 2c2:	f7 01       	movw	r30, r14
 2c4:	82 81       	ldd	r24, Z+2	; 0x02
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	18 16       	cp	r1, r24
 2ca:	19 06       	cpc	r1, r25
 2cc:	dc f4       	brge	.+54     	; 0x304 <test_CAN_nodes+0xb4>
 2ce:	e7 01       	movw	r28, r14
 2d0:	23 96       	adiw	r28, 0x03	; 3
 2d2:	64 2c       	mov	r6, r4
 2d4:	75 2c       	mov	r7, r5
 2d6:	89 91       	ld	r24, Y+
 2d8:	1f 92       	push	r1
 2da:	8f 93       	push	r24
 2dc:	7f 92       	push	r7
 2de:	6f 92       	push	r6
 2e0:	1f 93       	push	r17
 2e2:	0f 93       	push	r16
 2e4:	d8 d1       	rcall	.+944    	; 0x696 <printf>
 2e6:	ff ef       	ldi	r31, 0xFF	; 255
 2e8:	6f 1a       	sub	r6, r31
 2ea:	7f 0a       	sbc	r7, r31
 2ec:	f7 01       	movw	r30, r14
 2ee:	82 81       	ldd	r24, Z+2	; 0x02
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	0f 90       	pop	r0
 2f4:	0f 90       	pop	r0
 2f6:	0f 90       	pop	r0
 2f8:	0f 90       	pop	r0
 2fa:	0f 90       	pop	r0
 2fc:	0f 90       	pop	r0
 2fe:	68 16       	cp	r6, r24
 300:	79 06       	cpc	r7, r25
 302:	4c f3       	brlt	.-46     	; 0x2d6 <test_CAN_nodes+0x86>
 304:	9f 93       	push	r25
 306:	8f 93       	push	r24
 308:	bf 92       	push	r11
 30a:	af 92       	push	r10
 30c:	c4 d1       	rcall	.+904    	; 0x696 <printf>
 30e:	f7 01       	movw	r30, r14
 310:	81 81       	ldd	r24, Z+1	; 0x01
 312:	8f 93       	push	r24
 314:	80 81       	ld	r24, Z
 316:	8f 93       	push	r24
 318:	9f 92       	push	r9
 31a:	8f 92       	push	r8
 31c:	bc d1       	rcall	.+888    	; 0x696 <printf>
 31e:	ff ef       	ldi	r31, 0xFF	; 255
 320:	21 ee       	ldi	r18, 0xE1	; 225
 322:	84 e0       	ldi	r24, 0x04	; 4
 324:	f1 50       	subi	r31, 0x01	; 1
 326:	20 40       	sbci	r18, 0x00	; 0
 328:	80 40       	sbci	r24, 0x00	; 0
 32a:	e1 f7       	brne	.-8      	; 0x324 <test_CAN_nodes+0xd4>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <test_CAN_nodes+0xde>
 32e:	00 00       	nop
 330:	ed b7       	in	r30, 0x3d	; 61
 332:	fe b7       	in	r31, 0x3e	; 62
 334:	38 96       	adiw	r30, 0x08	; 8
 336:	0f b6       	in	r0, 0x3f	; 63
 338:	f8 94       	cli
 33a:	fe bf       	out	0x3e, r31	; 62
 33c:	0f be       	out	0x3f, r0	; 63
 33e:	ed bf       	out	0x3d, r30	; 61
 340:	9d cf       	rjmp	.-198    	; 0x27c <test_CAN_nodes+0x2c>

00000342 <main>:

int main(void)
{
	MCP_init();
 342:	4b df       	rcall	.-362    	; 0x1da <MCP_init>
	CAN_init();
 344:	ef de       	rcall	.-546    	; 0x124 <CAN_init>
	USART_Init(MYUBRR);
 346:	87 e6       	ldi	r24, 0x67	; 103
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	23 d0       	rcall	.+70     	; 0x392 <USART_Init>
	test_CAN_nodes();	
 34c:	81 df       	rcall	.-254    	; 0x250 <test_CAN_nodes>

0000034e <SPI_MasterInit>:
{
	/* Set MISO output, all others input */
	DDRB = (1 << MISO);
	
	/* Enable SPI */
	SPCR = (1<<SPE);
 34e:	84 b1       	in	r24, 0x04	; 4
 350:	87 68       	ori	r24, 0x87	; 135
 352:	84 b9       	out	0x04, r24	; 4
 354:	23 98       	cbi	0x04, 3	; 4
 356:	28 9a       	sbi	0x05, 0	; 5
 358:	8c b5       	in	r24, 0x2c	; 44
 35a:	81 65       	ori	r24, 0x51	; 81
 35c:	8c bd       	out	0x2c, r24	; 44
 35e:	08 95       	ret

00000360 <SPI_MasterTransmit>:
 360:	8e bd       	out	0x2e, r24	; 46
 362:	0d b4       	in	r0, 0x2d	; 45
 364:	07 fe       	sbrs	r0, 7
 366:	fd cf       	rjmp	.-6      	; 0x362 <SPI_MasterTransmit+0x2>
 368:	08 95       	ret

0000036a <SPI_SlaveReceive>:
}


uint8_t SPI_SlaveReceive(void)
{
	SPI_MasterTransmit(0xff);
 36a:	8f ef       	ldi	r24, 0xFF	; 255
 36c:	f9 df       	rcall	.-14     	; 0x360 <SPI_MasterTransmit>
	return SPDR;
 36e:	8e b5       	in	r24, 0x2e	; 46
 370:	08 95       	ret

00000372 <USART_Transmit>:
}

void USART_Transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while ( !(UCSR0A & (1 << UDRE0)) );
 372:	e0 ec       	ldi	r30, 0xC0	; 192
 374:	f0 e0       	ldi	r31, 0x00	; 0
 376:	90 81       	ld	r25, Z
 378:	95 ff       	sbrs	r25, 5
 37a:	fd cf       	rjmp	.-6      	; 0x376 <USART_Transmit+0x4>
	
	/* Put data into buffer, sends the data */
	UDR0 = data;
 37c:	80 93 c6 00 	sts	0x00C6, r24
 380:	08 95       	ret

00000382 <USART_Receive>:
}

unsigned char USART_Receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1 << RXC0)) );
 382:	e0 ec       	ldi	r30, 0xC0	; 192
 384:	f0 e0       	ldi	r31, 0x00	; 0
 386:	80 81       	ld	r24, Z
 388:	88 23       	and	r24, r24
 38a:	ec f7       	brge	.-6      	; 0x386 <USART_Receive+0x4>
	
	/* Get and return received data from buffer */
	return UDR0;
 38c:	80 91 c6 00 	lds	r24, 0x00C6
}
 390:	08 95       	ret

00000392 <USART_Init>:

FILE *uart;

void USART_Init(unsigned int ubrr)
{
	UBRR0H = (unsigned char)(ubrr >> 8);
 392:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
 396:	80 93 c4 00 	sts	0x00C4, r24
	
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
 39a:	88 e1       	ldi	r24, 0x18	; 24
 39c:	80 93 c1 00 	sts	0x00C1, r24
	
	uart = fdevopen(&USART_Transmit, &USART_Receive);
 3a0:	61 ec       	ldi	r22, 0xC1	; 193
 3a2:	71 e0       	ldi	r23, 0x01	; 1
 3a4:	89 eb       	ldi	r24, 0xB9	; 185
 3a6:	91 e0       	ldi	r25, 0x01	; 1
 3a8:	2c d1       	rcall	.+600    	; 0x602 <fdevopen>
 3aa:	90 93 7f 02 	sts	0x027F, r25
 3ae:	80 93 7e 02 	sts	0x027E, r24
 3b2:	08 95       	ret

000003b4 <malloc>:
 3b4:	cf 93       	push	r28
 3b6:	df 93       	push	r29
 3b8:	82 30       	cpi	r24, 0x02	; 2
 3ba:	91 05       	cpc	r25, r1
 3bc:	10 f4       	brcc	.+4      	; 0x3c2 <malloc+0xe>
 3be:	82 e0       	ldi	r24, 0x02	; 2
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	e0 91 82 02 	lds	r30, 0x0282
 3c6:	f0 91 83 02 	lds	r31, 0x0283
 3ca:	20 e0       	ldi	r18, 0x00	; 0
 3cc:	30 e0       	ldi	r19, 0x00	; 0
 3ce:	a0 e0       	ldi	r26, 0x00	; 0
 3d0:	b0 e0       	ldi	r27, 0x00	; 0
 3d2:	30 97       	sbiw	r30, 0x00	; 0
 3d4:	39 f1       	breq	.+78     	; 0x424 <malloc+0x70>
 3d6:	40 81       	ld	r20, Z
 3d8:	51 81       	ldd	r21, Z+1	; 0x01
 3da:	48 17       	cp	r20, r24
 3dc:	59 07       	cpc	r21, r25
 3de:	b8 f0       	brcs	.+46     	; 0x40e <malloc+0x5a>
 3e0:	48 17       	cp	r20, r24
 3e2:	59 07       	cpc	r21, r25
 3e4:	71 f4       	brne	.+28     	; 0x402 <malloc+0x4e>
 3e6:	82 81       	ldd	r24, Z+2	; 0x02
 3e8:	93 81       	ldd	r25, Z+3	; 0x03
 3ea:	10 97       	sbiw	r26, 0x00	; 0
 3ec:	29 f0       	breq	.+10     	; 0x3f8 <malloc+0x44>
 3ee:	13 96       	adiw	r26, 0x03	; 3
 3f0:	9c 93       	st	X, r25
 3f2:	8e 93       	st	-X, r24
 3f4:	12 97       	sbiw	r26, 0x02	; 2
 3f6:	2c c0       	rjmp	.+88     	; 0x450 <malloc+0x9c>
 3f8:	90 93 83 02 	sts	0x0283, r25
 3fc:	80 93 82 02 	sts	0x0282, r24
 400:	27 c0       	rjmp	.+78     	; 0x450 <malloc+0x9c>
 402:	21 15       	cp	r18, r1
 404:	31 05       	cpc	r19, r1
 406:	31 f0       	breq	.+12     	; 0x414 <malloc+0x60>
 408:	42 17       	cp	r20, r18
 40a:	53 07       	cpc	r21, r19
 40c:	18 f0       	brcs	.+6      	; 0x414 <malloc+0x60>
 40e:	a9 01       	movw	r20, r18
 410:	db 01       	movw	r26, r22
 412:	01 c0       	rjmp	.+2      	; 0x416 <malloc+0x62>
 414:	ef 01       	movw	r28, r30
 416:	9a 01       	movw	r18, r20
 418:	bd 01       	movw	r22, r26
 41a:	df 01       	movw	r26, r30
 41c:	02 80       	ldd	r0, Z+2	; 0x02
 41e:	f3 81       	ldd	r31, Z+3	; 0x03
 420:	e0 2d       	mov	r30, r0
 422:	d7 cf       	rjmp	.-82     	; 0x3d2 <malloc+0x1e>
 424:	21 15       	cp	r18, r1
 426:	31 05       	cpc	r19, r1
 428:	f9 f0       	breq	.+62     	; 0x468 <malloc+0xb4>
 42a:	28 1b       	sub	r18, r24
 42c:	39 0b       	sbc	r19, r25
 42e:	24 30       	cpi	r18, 0x04	; 4
 430:	31 05       	cpc	r19, r1
 432:	80 f4       	brcc	.+32     	; 0x454 <malloc+0xa0>
 434:	8a 81       	ldd	r24, Y+2	; 0x02
 436:	9b 81       	ldd	r25, Y+3	; 0x03
 438:	61 15       	cp	r22, r1
 43a:	71 05       	cpc	r23, r1
 43c:	21 f0       	breq	.+8      	; 0x446 <malloc+0x92>
 43e:	fb 01       	movw	r30, r22
 440:	93 83       	std	Z+3, r25	; 0x03
 442:	82 83       	std	Z+2, r24	; 0x02
 444:	04 c0       	rjmp	.+8      	; 0x44e <malloc+0x9a>
 446:	90 93 83 02 	sts	0x0283, r25
 44a:	80 93 82 02 	sts	0x0282, r24
 44e:	fe 01       	movw	r30, r28
 450:	32 96       	adiw	r30, 0x02	; 2
 452:	44 c0       	rjmp	.+136    	; 0x4dc <malloc+0x128>
 454:	fe 01       	movw	r30, r28
 456:	e2 0f       	add	r30, r18
 458:	f3 1f       	adc	r31, r19
 45a:	81 93       	st	Z+, r24
 45c:	91 93       	st	Z+, r25
 45e:	22 50       	subi	r18, 0x02	; 2
 460:	31 09       	sbc	r19, r1
 462:	39 83       	std	Y+1, r19	; 0x01
 464:	28 83       	st	Y, r18
 466:	3a c0       	rjmp	.+116    	; 0x4dc <malloc+0x128>
 468:	20 91 80 02 	lds	r18, 0x0280
 46c:	30 91 81 02 	lds	r19, 0x0281
 470:	23 2b       	or	r18, r19
 472:	41 f4       	brne	.+16     	; 0x484 <malloc+0xd0>
 474:	20 91 02 02 	lds	r18, 0x0202
 478:	30 91 03 02 	lds	r19, 0x0203
 47c:	30 93 81 02 	sts	0x0281, r19
 480:	20 93 80 02 	sts	0x0280, r18
 484:	20 91 00 02 	lds	r18, 0x0200
 488:	30 91 01 02 	lds	r19, 0x0201
 48c:	21 15       	cp	r18, r1
 48e:	31 05       	cpc	r19, r1
 490:	41 f4       	brne	.+16     	; 0x4a2 <malloc+0xee>
 492:	2d b7       	in	r18, 0x3d	; 61
 494:	3e b7       	in	r19, 0x3e	; 62
 496:	40 91 04 02 	lds	r20, 0x0204
 49a:	50 91 05 02 	lds	r21, 0x0205
 49e:	24 1b       	sub	r18, r20
 4a0:	35 0b       	sbc	r19, r21
 4a2:	e0 91 80 02 	lds	r30, 0x0280
 4a6:	f0 91 81 02 	lds	r31, 0x0281
 4aa:	e2 17       	cp	r30, r18
 4ac:	f3 07       	cpc	r31, r19
 4ae:	a0 f4       	brcc	.+40     	; 0x4d8 <malloc+0x124>
 4b0:	2e 1b       	sub	r18, r30
 4b2:	3f 0b       	sbc	r19, r31
 4b4:	28 17       	cp	r18, r24
 4b6:	39 07       	cpc	r19, r25
 4b8:	78 f0       	brcs	.+30     	; 0x4d8 <malloc+0x124>
 4ba:	ac 01       	movw	r20, r24
 4bc:	4e 5f       	subi	r20, 0xFE	; 254
 4be:	5f 4f       	sbci	r21, 0xFF	; 255
 4c0:	24 17       	cp	r18, r20
 4c2:	35 07       	cpc	r19, r21
 4c4:	48 f0       	brcs	.+18     	; 0x4d8 <malloc+0x124>
 4c6:	4e 0f       	add	r20, r30
 4c8:	5f 1f       	adc	r21, r31
 4ca:	50 93 81 02 	sts	0x0281, r21
 4ce:	40 93 80 02 	sts	0x0280, r20
 4d2:	81 93       	st	Z+, r24
 4d4:	91 93       	st	Z+, r25
 4d6:	02 c0       	rjmp	.+4      	; 0x4dc <malloc+0x128>
 4d8:	e0 e0       	ldi	r30, 0x00	; 0
 4da:	f0 e0       	ldi	r31, 0x00	; 0
 4dc:	cf 01       	movw	r24, r30
 4de:	df 91       	pop	r29
 4e0:	cf 91       	pop	r28
 4e2:	08 95       	ret

000004e4 <free>:
 4e4:	cf 93       	push	r28
 4e6:	df 93       	push	r29
 4e8:	00 97       	sbiw	r24, 0x00	; 0
 4ea:	09 f4       	brne	.+2      	; 0x4ee <free+0xa>
 4ec:	87 c0       	rjmp	.+270    	; 0x5fc <free+0x118>
 4ee:	fc 01       	movw	r30, r24
 4f0:	32 97       	sbiw	r30, 0x02	; 2
 4f2:	13 82       	std	Z+3, r1	; 0x03
 4f4:	12 82       	std	Z+2, r1	; 0x02
 4f6:	c0 91 82 02 	lds	r28, 0x0282
 4fa:	d0 91 83 02 	lds	r29, 0x0283
 4fe:	20 97       	sbiw	r28, 0x00	; 0
 500:	81 f4       	brne	.+32     	; 0x522 <free+0x3e>
 502:	20 81       	ld	r18, Z
 504:	31 81       	ldd	r19, Z+1	; 0x01
 506:	28 0f       	add	r18, r24
 508:	39 1f       	adc	r19, r25
 50a:	80 91 80 02 	lds	r24, 0x0280
 50e:	90 91 81 02 	lds	r25, 0x0281
 512:	82 17       	cp	r24, r18
 514:	93 07       	cpc	r25, r19
 516:	79 f5       	brne	.+94     	; 0x576 <free+0x92>
 518:	f0 93 81 02 	sts	0x0281, r31
 51c:	e0 93 80 02 	sts	0x0280, r30
 520:	6d c0       	rjmp	.+218    	; 0x5fc <free+0x118>
 522:	de 01       	movw	r26, r28
 524:	20 e0       	ldi	r18, 0x00	; 0
 526:	30 e0       	ldi	r19, 0x00	; 0
 528:	ae 17       	cp	r26, r30
 52a:	bf 07       	cpc	r27, r31
 52c:	50 f4       	brcc	.+20     	; 0x542 <free+0x5e>
 52e:	12 96       	adiw	r26, 0x02	; 2
 530:	4d 91       	ld	r20, X+
 532:	5c 91       	ld	r21, X
 534:	13 97       	sbiw	r26, 0x03	; 3
 536:	9d 01       	movw	r18, r26
 538:	41 15       	cp	r20, r1
 53a:	51 05       	cpc	r21, r1
 53c:	09 f1       	breq	.+66     	; 0x580 <free+0x9c>
 53e:	da 01       	movw	r26, r20
 540:	f3 cf       	rjmp	.-26     	; 0x528 <free+0x44>
 542:	b3 83       	std	Z+3, r27	; 0x03
 544:	a2 83       	std	Z+2, r26	; 0x02
 546:	40 81       	ld	r20, Z
 548:	51 81       	ldd	r21, Z+1	; 0x01
 54a:	84 0f       	add	r24, r20
 54c:	95 1f       	adc	r25, r21
 54e:	8a 17       	cp	r24, r26
 550:	9b 07       	cpc	r25, r27
 552:	71 f4       	brne	.+28     	; 0x570 <free+0x8c>
 554:	8d 91       	ld	r24, X+
 556:	9c 91       	ld	r25, X
 558:	11 97       	sbiw	r26, 0x01	; 1
 55a:	84 0f       	add	r24, r20
 55c:	95 1f       	adc	r25, r21
 55e:	02 96       	adiw	r24, 0x02	; 2
 560:	91 83       	std	Z+1, r25	; 0x01
 562:	80 83       	st	Z, r24
 564:	12 96       	adiw	r26, 0x02	; 2
 566:	8d 91       	ld	r24, X+
 568:	9c 91       	ld	r25, X
 56a:	13 97       	sbiw	r26, 0x03	; 3
 56c:	93 83       	std	Z+3, r25	; 0x03
 56e:	82 83       	std	Z+2, r24	; 0x02
 570:	21 15       	cp	r18, r1
 572:	31 05       	cpc	r19, r1
 574:	29 f4       	brne	.+10     	; 0x580 <free+0x9c>
 576:	f0 93 83 02 	sts	0x0283, r31
 57a:	e0 93 82 02 	sts	0x0282, r30
 57e:	3e c0       	rjmp	.+124    	; 0x5fc <free+0x118>
 580:	d9 01       	movw	r26, r18
 582:	13 96       	adiw	r26, 0x03	; 3
 584:	fc 93       	st	X, r31
 586:	ee 93       	st	-X, r30
 588:	12 97       	sbiw	r26, 0x02	; 2
 58a:	4d 91       	ld	r20, X+
 58c:	5d 91       	ld	r21, X+
 58e:	a4 0f       	add	r26, r20
 590:	b5 1f       	adc	r27, r21
 592:	ea 17       	cp	r30, r26
 594:	fb 07       	cpc	r31, r27
 596:	79 f4       	brne	.+30     	; 0x5b6 <free+0xd2>
 598:	80 81       	ld	r24, Z
 59a:	91 81       	ldd	r25, Z+1	; 0x01
 59c:	84 0f       	add	r24, r20
 59e:	95 1f       	adc	r25, r21
 5a0:	02 96       	adiw	r24, 0x02	; 2
 5a2:	d9 01       	movw	r26, r18
 5a4:	11 96       	adiw	r26, 0x01	; 1
 5a6:	9c 93       	st	X, r25
 5a8:	8e 93       	st	-X, r24
 5aa:	82 81       	ldd	r24, Z+2	; 0x02
 5ac:	93 81       	ldd	r25, Z+3	; 0x03
 5ae:	13 96       	adiw	r26, 0x03	; 3
 5b0:	9c 93       	st	X, r25
 5b2:	8e 93       	st	-X, r24
 5b4:	12 97       	sbiw	r26, 0x02	; 2
 5b6:	e0 e0       	ldi	r30, 0x00	; 0
 5b8:	f0 e0       	ldi	r31, 0x00	; 0
 5ba:	8a 81       	ldd	r24, Y+2	; 0x02
 5bc:	9b 81       	ldd	r25, Y+3	; 0x03
 5be:	00 97       	sbiw	r24, 0x00	; 0
 5c0:	19 f0       	breq	.+6      	; 0x5c8 <free+0xe4>
 5c2:	fe 01       	movw	r30, r28
 5c4:	ec 01       	movw	r28, r24
 5c6:	f9 cf       	rjmp	.-14     	; 0x5ba <free+0xd6>
 5c8:	ce 01       	movw	r24, r28
 5ca:	02 96       	adiw	r24, 0x02	; 2
 5cc:	28 81       	ld	r18, Y
 5ce:	39 81       	ldd	r19, Y+1	; 0x01
 5d0:	82 0f       	add	r24, r18
 5d2:	93 1f       	adc	r25, r19
 5d4:	20 91 80 02 	lds	r18, 0x0280
 5d8:	30 91 81 02 	lds	r19, 0x0281
 5dc:	28 17       	cp	r18, r24
 5de:	39 07       	cpc	r19, r25
 5e0:	69 f4       	brne	.+26     	; 0x5fc <free+0x118>
 5e2:	30 97       	sbiw	r30, 0x00	; 0
 5e4:	29 f4       	brne	.+10     	; 0x5f0 <free+0x10c>
 5e6:	10 92 83 02 	sts	0x0283, r1
 5ea:	10 92 82 02 	sts	0x0282, r1
 5ee:	02 c0       	rjmp	.+4      	; 0x5f4 <free+0x110>
 5f0:	13 82       	std	Z+3, r1	; 0x03
 5f2:	12 82       	std	Z+2, r1	; 0x02
 5f4:	d0 93 81 02 	sts	0x0281, r29
 5f8:	c0 93 80 02 	sts	0x0280, r28
 5fc:	df 91       	pop	r29
 5fe:	cf 91       	pop	r28
 600:	08 95       	ret

00000602 <fdevopen>:
 602:	0f 93       	push	r16
 604:	1f 93       	push	r17
 606:	cf 93       	push	r28
 608:	df 93       	push	r29
 60a:	ec 01       	movw	r28, r24
 60c:	8b 01       	movw	r16, r22
 60e:	00 97       	sbiw	r24, 0x00	; 0
 610:	31 f4       	brne	.+12     	; 0x61e <fdevopen+0x1c>
 612:	61 15       	cp	r22, r1
 614:	71 05       	cpc	r23, r1
 616:	19 f4       	brne	.+6      	; 0x61e <fdevopen+0x1c>
 618:	80 e0       	ldi	r24, 0x00	; 0
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	37 c0       	rjmp	.+110    	; 0x68c <fdevopen+0x8a>
 61e:	6e e0       	ldi	r22, 0x0E	; 14
 620:	70 e0       	ldi	r23, 0x00	; 0
 622:	81 e0       	ldi	r24, 0x01	; 1
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	63 d2       	rcall	.+1222   	; 0xaee <calloc>
 628:	fc 01       	movw	r30, r24
 62a:	00 97       	sbiw	r24, 0x00	; 0
 62c:	a9 f3       	breq	.-22     	; 0x618 <fdevopen+0x16>
 62e:	80 e8       	ldi	r24, 0x80	; 128
 630:	83 83       	std	Z+3, r24	; 0x03
 632:	01 15       	cp	r16, r1
 634:	11 05       	cpc	r17, r1
 636:	71 f0       	breq	.+28     	; 0x654 <fdevopen+0x52>
 638:	13 87       	std	Z+11, r17	; 0x0b
 63a:	02 87       	std	Z+10, r16	; 0x0a
 63c:	81 e8       	ldi	r24, 0x81	; 129
 63e:	83 83       	std	Z+3, r24	; 0x03
 640:	80 91 84 02 	lds	r24, 0x0284
 644:	90 91 85 02 	lds	r25, 0x0285
 648:	89 2b       	or	r24, r25
 64a:	21 f4       	brne	.+8      	; 0x654 <fdevopen+0x52>
 64c:	f0 93 85 02 	sts	0x0285, r31
 650:	e0 93 84 02 	sts	0x0284, r30
 654:	20 97       	sbiw	r28, 0x00	; 0
 656:	c9 f0       	breq	.+50     	; 0x68a <fdevopen+0x88>
 658:	d1 87       	std	Z+9, r29	; 0x09
 65a:	c0 87       	std	Z+8, r28	; 0x08
 65c:	83 81       	ldd	r24, Z+3	; 0x03
 65e:	82 60       	ori	r24, 0x02	; 2
 660:	83 83       	std	Z+3, r24	; 0x03
 662:	80 91 86 02 	lds	r24, 0x0286
 666:	90 91 87 02 	lds	r25, 0x0287
 66a:	89 2b       	or	r24, r25
 66c:	71 f4       	brne	.+28     	; 0x68a <fdevopen+0x88>
 66e:	f0 93 87 02 	sts	0x0287, r31
 672:	e0 93 86 02 	sts	0x0286, r30
 676:	80 91 88 02 	lds	r24, 0x0288
 67a:	90 91 89 02 	lds	r25, 0x0289
 67e:	89 2b       	or	r24, r25
 680:	21 f4       	brne	.+8      	; 0x68a <fdevopen+0x88>
 682:	f0 93 89 02 	sts	0x0289, r31
 686:	e0 93 88 02 	sts	0x0288, r30
 68a:	cf 01       	movw	r24, r30
 68c:	df 91       	pop	r29
 68e:	cf 91       	pop	r28
 690:	1f 91       	pop	r17
 692:	0f 91       	pop	r16
 694:	08 95       	ret

00000696 <printf>:
 696:	cf 93       	push	r28
 698:	df 93       	push	r29
 69a:	cd b7       	in	r28, 0x3d	; 61
 69c:	de b7       	in	r29, 0x3e	; 62
 69e:	fe 01       	movw	r30, r28
 6a0:	36 96       	adiw	r30, 0x06	; 6
 6a2:	61 91       	ld	r22, Z+
 6a4:	71 91       	ld	r23, Z+
 6a6:	af 01       	movw	r20, r30
 6a8:	80 91 86 02 	lds	r24, 0x0286
 6ac:	90 91 87 02 	lds	r25, 0x0287
 6b0:	30 d0       	rcall	.+96     	; 0x712 <vfprintf>
 6b2:	df 91       	pop	r29
 6b4:	cf 91       	pop	r28
 6b6:	08 95       	ret

000006b8 <puts>:
 6b8:	0f 93       	push	r16
 6ba:	1f 93       	push	r17
 6bc:	cf 93       	push	r28
 6be:	df 93       	push	r29
 6c0:	e0 91 86 02 	lds	r30, 0x0286
 6c4:	f0 91 87 02 	lds	r31, 0x0287
 6c8:	23 81       	ldd	r18, Z+3	; 0x03
 6ca:	21 ff       	sbrs	r18, 1
 6cc:	1b c0       	rjmp	.+54     	; 0x704 <puts+0x4c>
 6ce:	ec 01       	movw	r28, r24
 6d0:	00 e0       	ldi	r16, 0x00	; 0
 6d2:	10 e0       	ldi	r17, 0x00	; 0
 6d4:	89 91       	ld	r24, Y+
 6d6:	60 91 86 02 	lds	r22, 0x0286
 6da:	70 91 87 02 	lds	r23, 0x0287
 6de:	db 01       	movw	r26, r22
 6e0:	18 96       	adiw	r26, 0x08	; 8
 6e2:	ed 91       	ld	r30, X+
 6e4:	fc 91       	ld	r31, X
 6e6:	19 97       	sbiw	r26, 0x09	; 9
 6e8:	88 23       	and	r24, r24
 6ea:	31 f0       	breq	.+12     	; 0x6f8 <puts+0x40>
 6ec:	19 95       	eicall
 6ee:	89 2b       	or	r24, r25
 6f0:	89 f3       	breq	.-30     	; 0x6d4 <puts+0x1c>
 6f2:	0f ef       	ldi	r16, 0xFF	; 255
 6f4:	1f ef       	ldi	r17, 0xFF	; 255
 6f6:	ee cf       	rjmp	.-36     	; 0x6d4 <puts+0x1c>
 6f8:	8a e0       	ldi	r24, 0x0A	; 10
 6fa:	19 95       	eicall
 6fc:	89 2b       	or	r24, r25
 6fe:	11 f4       	brne	.+4      	; 0x704 <puts+0x4c>
 700:	c8 01       	movw	r24, r16
 702:	02 c0       	rjmp	.+4      	; 0x708 <puts+0x50>
 704:	8f ef       	ldi	r24, 0xFF	; 255
 706:	9f ef       	ldi	r25, 0xFF	; 255
 708:	df 91       	pop	r29
 70a:	cf 91       	pop	r28
 70c:	1f 91       	pop	r17
 70e:	0f 91       	pop	r16
 710:	08 95       	ret

00000712 <vfprintf>:
 712:	2f 92       	push	r2
 714:	3f 92       	push	r3
 716:	4f 92       	push	r4
 718:	5f 92       	push	r5
 71a:	6f 92       	push	r6
 71c:	7f 92       	push	r7
 71e:	8f 92       	push	r8
 720:	9f 92       	push	r9
 722:	af 92       	push	r10
 724:	bf 92       	push	r11
 726:	cf 92       	push	r12
 728:	df 92       	push	r13
 72a:	ef 92       	push	r14
 72c:	ff 92       	push	r15
 72e:	0f 93       	push	r16
 730:	1f 93       	push	r17
 732:	cf 93       	push	r28
 734:	df 93       	push	r29
 736:	cd b7       	in	r28, 0x3d	; 61
 738:	de b7       	in	r29, 0x3e	; 62
 73a:	2c 97       	sbiw	r28, 0x0c	; 12
 73c:	0f b6       	in	r0, 0x3f	; 63
 73e:	f8 94       	cli
 740:	de bf       	out	0x3e, r29	; 62
 742:	0f be       	out	0x3f, r0	; 63
 744:	cd bf       	out	0x3d, r28	; 61
 746:	7c 01       	movw	r14, r24
 748:	6b 01       	movw	r12, r22
 74a:	8a 01       	movw	r16, r20
 74c:	fc 01       	movw	r30, r24
 74e:	17 82       	std	Z+7, r1	; 0x07
 750:	16 82       	std	Z+6, r1	; 0x06
 752:	83 81       	ldd	r24, Z+3	; 0x03
 754:	81 ff       	sbrs	r24, 1
 756:	b0 c1       	rjmp	.+864    	; 0xab8 <vfprintf+0x3a6>
 758:	ce 01       	movw	r24, r28
 75a:	01 96       	adiw	r24, 0x01	; 1
 75c:	4c 01       	movw	r8, r24
 75e:	f7 01       	movw	r30, r14
 760:	93 81       	ldd	r25, Z+3	; 0x03
 762:	f6 01       	movw	r30, r12
 764:	93 fd       	sbrc	r25, 3
 766:	85 91       	lpm	r24, Z+
 768:	93 ff       	sbrs	r25, 3
 76a:	81 91       	ld	r24, Z+
 76c:	6f 01       	movw	r12, r30
 76e:	88 23       	and	r24, r24
 770:	09 f4       	brne	.+2      	; 0x774 <vfprintf+0x62>
 772:	9e c1       	rjmp	.+828    	; 0xab0 <vfprintf+0x39e>
 774:	85 32       	cpi	r24, 0x25	; 37
 776:	39 f4       	brne	.+14     	; 0x786 <vfprintf+0x74>
 778:	93 fd       	sbrc	r25, 3
 77a:	85 91       	lpm	r24, Z+
 77c:	93 ff       	sbrs	r25, 3
 77e:	81 91       	ld	r24, Z+
 780:	6f 01       	movw	r12, r30
 782:	85 32       	cpi	r24, 0x25	; 37
 784:	21 f4       	brne	.+8      	; 0x78e <vfprintf+0x7c>
 786:	b7 01       	movw	r22, r14
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	e8 d1       	rcall	.+976    	; 0xb5c <fputc>
 78c:	e8 cf       	rjmp	.-48     	; 0x75e <vfprintf+0x4c>
 78e:	51 2c       	mov	r5, r1
 790:	31 2c       	mov	r3, r1
 792:	20 e0       	ldi	r18, 0x00	; 0
 794:	20 32       	cpi	r18, 0x20	; 32
 796:	a0 f4       	brcc	.+40     	; 0x7c0 <vfprintf+0xae>
 798:	8b 32       	cpi	r24, 0x2B	; 43
 79a:	69 f0       	breq	.+26     	; 0x7b6 <vfprintf+0xa4>
 79c:	30 f4       	brcc	.+12     	; 0x7aa <vfprintf+0x98>
 79e:	80 32       	cpi	r24, 0x20	; 32
 7a0:	59 f0       	breq	.+22     	; 0x7b8 <vfprintf+0xa6>
 7a2:	83 32       	cpi	r24, 0x23	; 35
 7a4:	69 f4       	brne	.+26     	; 0x7c0 <vfprintf+0xae>
 7a6:	20 61       	ori	r18, 0x10	; 16
 7a8:	2c c0       	rjmp	.+88     	; 0x802 <vfprintf+0xf0>
 7aa:	8d 32       	cpi	r24, 0x2D	; 45
 7ac:	39 f0       	breq	.+14     	; 0x7bc <vfprintf+0xaa>
 7ae:	80 33       	cpi	r24, 0x30	; 48
 7b0:	39 f4       	brne	.+14     	; 0x7c0 <vfprintf+0xae>
 7b2:	21 60       	ori	r18, 0x01	; 1
 7b4:	26 c0       	rjmp	.+76     	; 0x802 <vfprintf+0xf0>
 7b6:	22 60       	ori	r18, 0x02	; 2
 7b8:	24 60       	ori	r18, 0x04	; 4
 7ba:	23 c0       	rjmp	.+70     	; 0x802 <vfprintf+0xf0>
 7bc:	28 60       	ori	r18, 0x08	; 8
 7be:	21 c0       	rjmp	.+66     	; 0x802 <vfprintf+0xf0>
 7c0:	27 fd       	sbrc	r18, 7
 7c2:	27 c0       	rjmp	.+78     	; 0x812 <vfprintf+0x100>
 7c4:	30 ed       	ldi	r19, 0xD0	; 208
 7c6:	38 0f       	add	r19, r24
 7c8:	3a 30       	cpi	r19, 0x0A	; 10
 7ca:	78 f4       	brcc	.+30     	; 0x7ea <vfprintf+0xd8>
 7cc:	26 ff       	sbrs	r18, 6
 7ce:	06 c0       	rjmp	.+12     	; 0x7dc <vfprintf+0xca>
 7d0:	fa e0       	ldi	r31, 0x0A	; 10
 7d2:	5f 9e       	mul	r5, r31
 7d4:	30 0d       	add	r19, r0
 7d6:	11 24       	eor	r1, r1
 7d8:	53 2e       	mov	r5, r19
 7da:	13 c0       	rjmp	.+38     	; 0x802 <vfprintf+0xf0>
 7dc:	8a e0       	ldi	r24, 0x0A	; 10
 7de:	38 9e       	mul	r3, r24
 7e0:	30 0d       	add	r19, r0
 7e2:	11 24       	eor	r1, r1
 7e4:	33 2e       	mov	r3, r19
 7e6:	20 62       	ori	r18, 0x20	; 32
 7e8:	0c c0       	rjmp	.+24     	; 0x802 <vfprintf+0xf0>
 7ea:	8e 32       	cpi	r24, 0x2E	; 46
 7ec:	21 f4       	brne	.+8      	; 0x7f6 <vfprintf+0xe4>
 7ee:	26 fd       	sbrc	r18, 6
 7f0:	5f c1       	rjmp	.+702    	; 0xab0 <vfprintf+0x39e>
 7f2:	20 64       	ori	r18, 0x40	; 64
 7f4:	06 c0       	rjmp	.+12     	; 0x802 <vfprintf+0xf0>
 7f6:	8c 36       	cpi	r24, 0x6C	; 108
 7f8:	11 f4       	brne	.+4      	; 0x7fe <vfprintf+0xec>
 7fa:	20 68       	ori	r18, 0x80	; 128
 7fc:	02 c0       	rjmp	.+4      	; 0x802 <vfprintf+0xf0>
 7fe:	88 36       	cpi	r24, 0x68	; 104
 800:	41 f4       	brne	.+16     	; 0x812 <vfprintf+0x100>
 802:	f6 01       	movw	r30, r12
 804:	93 fd       	sbrc	r25, 3
 806:	85 91       	lpm	r24, Z+
 808:	93 ff       	sbrs	r25, 3
 80a:	81 91       	ld	r24, Z+
 80c:	6f 01       	movw	r12, r30
 80e:	81 11       	cpse	r24, r1
 810:	c1 cf       	rjmp	.-126    	; 0x794 <vfprintf+0x82>
 812:	98 2f       	mov	r25, r24
 814:	9f 7d       	andi	r25, 0xDF	; 223
 816:	95 54       	subi	r25, 0x45	; 69
 818:	93 30       	cpi	r25, 0x03	; 3
 81a:	28 f4       	brcc	.+10     	; 0x826 <vfprintf+0x114>
 81c:	0c 5f       	subi	r16, 0xFC	; 252
 81e:	1f 4f       	sbci	r17, 0xFF	; 255
 820:	ff e3       	ldi	r31, 0x3F	; 63
 822:	f9 83       	std	Y+1, r31	; 0x01
 824:	0d c0       	rjmp	.+26     	; 0x840 <vfprintf+0x12e>
 826:	83 36       	cpi	r24, 0x63	; 99
 828:	31 f0       	breq	.+12     	; 0x836 <vfprintf+0x124>
 82a:	83 37       	cpi	r24, 0x73	; 115
 82c:	71 f0       	breq	.+28     	; 0x84a <vfprintf+0x138>
 82e:	83 35       	cpi	r24, 0x53	; 83
 830:	09 f0       	breq	.+2      	; 0x834 <vfprintf+0x122>
 832:	57 c0       	rjmp	.+174    	; 0x8e2 <vfprintf+0x1d0>
 834:	21 c0       	rjmp	.+66     	; 0x878 <vfprintf+0x166>
 836:	f8 01       	movw	r30, r16
 838:	80 81       	ld	r24, Z
 83a:	89 83       	std	Y+1, r24	; 0x01
 83c:	0e 5f       	subi	r16, 0xFE	; 254
 83e:	1f 4f       	sbci	r17, 0xFF	; 255
 840:	44 24       	eor	r4, r4
 842:	43 94       	inc	r4
 844:	51 2c       	mov	r5, r1
 846:	54 01       	movw	r10, r8
 848:	14 c0       	rjmp	.+40     	; 0x872 <vfprintf+0x160>
 84a:	38 01       	movw	r6, r16
 84c:	f2 e0       	ldi	r31, 0x02	; 2
 84e:	6f 0e       	add	r6, r31
 850:	71 1c       	adc	r7, r1
 852:	f8 01       	movw	r30, r16
 854:	a0 80       	ld	r10, Z
 856:	b1 80       	ldd	r11, Z+1	; 0x01
 858:	26 ff       	sbrs	r18, 6
 85a:	03 c0       	rjmp	.+6      	; 0x862 <vfprintf+0x150>
 85c:	65 2d       	mov	r22, r5
 85e:	70 e0       	ldi	r23, 0x00	; 0
 860:	02 c0       	rjmp	.+4      	; 0x866 <vfprintf+0x154>
 862:	6f ef       	ldi	r22, 0xFF	; 255
 864:	7f ef       	ldi	r23, 0xFF	; 255
 866:	c5 01       	movw	r24, r10
 868:	2c 87       	std	Y+12, r18	; 0x0c
 86a:	6d d1       	rcall	.+730    	; 0xb46 <strnlen>
 86c:	2c 01       	movw	r4, r24
 86e:	83 01       	movw	r16, r6
 870:	2c 85       	ldd	r18, Y+12	; 0x0c
 872:	2f 77       	andi	r18, 0x7F	; 127
 874:	22 2e       	mov	r2, r18
 876:	16 c0       	rjmp	.+44     	; 0x8a4 <vfprintf+0x192>
 878:	38 01       	movw	r6, r16
 87a:	f2 e0       	ldi	r31, 0x02	; 2
 87c:	6f 0e       	add	r6, r31
 87e:	71 1c       	adc	r7, r1
 880:	f8 01       	movw	r30, r16
 882:	a0 80       	ld	r10, Z
 884:	b1 80       	ldd	r11, Z+1	; 0x01
 886:	26 ff       	sbrs	r18, 6
 888:	03 c0       	rjmp	.+6      	; 0x890 <vfprintf+0x17e>
 88a:	65 2d       	mov	r22, r5
 88c:	70 e0       	ldi	r23, 0x00	; 0
 88e:	02 c0       	rjmp	.+4      	; 0x894 <vfprintf+0x182>
 890:	6f ef       	ldi	r22, 0xFF	; 255
 892:	7f ef       	ldi	r23, 0xFF	; 255
 894:	c5 01       	movw	r24, r10
 896:	2c 87       	std	Y+12, r18	; 0x0c
 898:	44 d1       	rcall	.+648    	; 0xb22 <strnlen_P>
 89a:	2c 01       	movw	r4, r24
 89c:	2c 85       	ldd	r18, Y+12	; 0x0c
 89e:	20 68       	ori	r18, 0x80	; 128
 8a0:	22 2e       	mov	r2, r18
 8a2:	83 01       	movw	r16, r6
 8a4:	23 fc       	sbrc	r2, 3
 8a6:	19 c0       	rjmp	.+50     	; 0x8da <vfprintf+0x1c8>
 8a8:	83 2d       	mov	r24, r3
 8aa:	90 e0       	ldi	r25, 0x00	; 0
 8ac:	48 16       	cp	r4, r24
 8ae:	59 06       	cpc	r5, r25
 8b0:	a0 f4       	brcc	.+40     	; 0x8da <vfprintf+0x1c8>
 8b2:	b7 01       	movw	r22, r14
 8b4:	80 e2       	ldi	r24, 0x20	; 32
 8b6:	90 e0       	ldi	r25, 0x00	; 0
 8b8:	51 d1       	rcall	.+674    	; 0xb5c <fputc>
 8ba:	3a 94       	dec	r3
 8bc:	f5 cf       	rjmp	.-22     	; 0x8a8 <vfprintf+0x196>
 8be:	f5 01       	movw	r30, r10
 8c0:	27 fc       	sbrc	r2, 7
 8c2:	85 91       	lpm	r24, Z+
 8c4:	27 fe       	sbrs	r2, 7
 8c6:	81 91       	ld	r24, Z+
 8c8:	5f 01       	movw	r10, r30
 8ca:	b7 01       	movw	r22, r14
 8cc:	90 e0       	ldi	r25, 0x00	; 0
 8ce:	46 d1       	rcall	.+652    	; 0xb5c <fputc>
 8d0:	31 10       	cpse	r3, r1
 8d2:	3a 94       	dec	r3
 8d4:	f1 e0       	ldi	r31, 0x01	; 1
 8d6:	4f 1a       	sub	r4, r31
 8d8:	51 08       	sbc	r5, r1
 8da:	41 14       	cp	r4, r1
 8dc:	51 04       	cpc	r5, r1
 8de:	79 f7       	brne	.-34     	; 0x8be <vfprintf+0x1ac>
 8e0:	de c0       	rjmp	.+444    	; 0xa9e <vfprintf+0x38c>
 8e2:	84 36       	cpi	r24, 0x64	; 100
 8e4:	11 f0       	breq	.+4      	; 0x8ea <vfprintf+0x1d8>
 8e6:	89 36       	cpi	r24, 0x69	; 105
 8e8:	31 f5       	brne	.+76     	; 0x936 <vfprintf+0x224>
 8ea:	f8 01       	movw	r30, r16
 8ec:	27 ff       	sbrs	r18, 7
 8ee:	07 c0       	rjmp	.+14     	; 0x8fe <vfprintf+0x1ec>
 8f0:	60 81       	ld	r22, Z
 8f2:	71 81       	ldd	r23, Z+1	; 0x01
 8f4:	82 81       	ldd	r24, Z+2	; 0x02
 8f6:	93 81       	ldd	r25, Z+3	; 0x03
 8f8:	0c 5f       	subi	r16, 0xFC	; 252
 8fa:	1f 4f       	sbci	r17, 0xFF	; 255
 8fc:	08 c0       	rjmp	.+16     	; 0x90e <vfprintf+0x1fc>
 8fe:	60 81       	ld	r22, Z
 900:	71 81       	ldd	r23, Z+1	; 0x01
 902:	88 27       	eor	r24, r24
 904:	77 fd       	sbrc	r23, 7
 906:	80 95       	com	r24
 908:	98 2f       	mov	r25, r24
 90a:	0e 5f       	subi	r16, 0xFE	; 254
 90c:	1f 4f       	sbci	r17, 0xFF	; 255
 90e:	2f 76       	andi	r18, 0x6F	; 111
 910:	b2 2e       	mov	r11, r18
 912:	97 ff       	sbrs	r25, 7
 914:	09 c0       	rjmp	.+18     	; 0x928 <vfprintf+0x216>
 916:	90 95       	com	r25
 918:	80 95       	com	r24
 91a:	70 95       	com	r23
 91c:	61 95       	neg	r22
 91e:	7f 4f       	sbci	r23, 0xFF	; 255
 920:	8f 4f       	sbci	r24, 0xFF	; 255
 922:	9f 4f       	sbci	r25, 0xFF	; 255
 924:	20 68       	ori	r18, 0x80	; 128
 926:	b2 2e       	mov	r11, r18
 928:	2a e0       	ldi	r18, 0x0A	; 10
 92a:	30 e0       	ldi	r19, 0x00	; 0
 92c:	a4 01       	movw	r20, r8
 92e:	48 d1       	rcall	.+656    	; 0xbc0 <__ultoa_invert>
 930:	a8 2e       	mov	r10, r24
 932:	a8 18       	sub	r10, r8
 934:	43 c0       	rjmp	.+134    	; 0x9bc <vfprintf+0x2aa>
 936:	85 37       	cpi	r24, 0x75	; 117
 938:	29 f4       	brne	.+10     	; 0x944 <vfprintf+0x232>
 93a:	2f 7e       	andi	r18, 0xEF	; 239
 93c:	b2 2e       	mov	r11, r18
 93e:	2a e0       	ldi	r18, 0x0A	; 10
 940:	30 e0       	ldi	r19, 0x00	; 0
 942:	25 c0       	rjmp	.+74     	; 0x98e <vfprintf+0x27c>
 944:	f2 2f       	mov	r31, r18
 946:	f9 7f       	andi	r31, 0xF9	; 249
 948:	bf 2e       	mov	r11, r31
 94a:	8f 36       	cpi	r24, 0x6F	; 111
 94c:	c1 f0       	breq	.+48     	; 0x97e <vfprintf+0x26c>
 94e:	18 f4       	brcc	.+6      	; 0x956 <vfprintf+0x244>
 950:	88 35       	cpi	r24, 0x58	; 88
 952:	79 f0       	breq	.+30     	; 0x972 <vfprintf+0x260>
 954:	ad c0       	rjmp	.+346    	; 0xab0 <vfprintf+0x39e>
 956:	80 37       	cpi	r24, 0x70	; 112
 958:	19 f0       	breq	.+6      	; 0x960 <vfprintf+0x24e>
 95a:	88 37       	cpi	r24, 0x78	; 120
 95c:	21 f0       	breq	.+8      	; 0x966 <vfprintf+0x254>
 95e:	a8 c0       	rjmp	.+336    	; 0xab0 <vfprintf+0x39e>
 960:	2f 2f       	mov	r18, r31
 962:	20 61       	ori	r18, 0x10	; 16
 964:	b2 2e       	mov	r11, r18
 966:	b4 fe       	sbrs	r11, 4
 968:	0d c0       	rjmp	.+26     	; 0x984 <vfprintf+0x272>
 96a:	8b 2d       	mov	r24, r11
 96c:	84 60       	ori	r24, 0x04	; 4
 96e:	b8 2e       	mov	r11, r24
 970:	09 c0       	rjmp	.+18     	; 0x984 <vfprintf+0x272>
 972:	24 ff       	sbrs	r18, 4
 974:	0a c0       	rjmp	.+20     	; 0x98a <vfprintf+0x278>
 976:	9f 2f       	mov	r25, r31
 978:	96 60       	ori	r25, 0x06	; 6
 97a:	b9 2e       	mov	r11, r25
 97c:	06 c0       	rjmp	.+12     	; 0x98a <vfprintf+0x278>
 97e:	28 e0       	ldi	r18, 0x08	; 8
 980:	30 e0       	ldi	r19, 0x00	; 0
 982:	05 c0       	rjmp	.+10     	; 0x98e <vfprintf+0x27c>
 984:	20 e1       	ldi	r18, 0x10	; 16
 986:	30 e0       	ldi	r19, 0x00	; 0
 988:	02 c0       	rjmp	.+4      	; 0x98e <vfprintf+0x27c>
 98a:	20 e1       	ldi	r18, 0x10	; 16
 98c:	32 e0       	ldi	r19, 0x02	; 2
 98e:	f8 01       	movw	r30, r16
 990:	b7 fe       	sbrs	r11, 7
 992:	07 c0       	rjmp	.+14     	; 0x9a2 <vfprintf+0x290>
 994:	60 81       	ld	r22, Z
 996:	71 81       	ldd	r23, Z+1	; 0x01
 998:	82 81       	ldd	r24, Z+2	; 0x02
 99a:	93 81       	ldd	r25, Z+3	; 0x03
 99c:	0c 5f       	subi	r16, 0xFC	; 252
 99e:	1f 4f       	sbci	r17, 0xFF	; 255
 9a0:	06 c0       	rjmp	.+12     	; 0x9ae <vfprintf+0x29c>
 9a2:	60 81       	ld	r22, Z
 9a4:	71 81       	ldd	r23, Z+1	; 0x01
 9a6:	80 e0       	ldi	r24, 0x00	; 0
 9a8:	90 e0       	ldi	r25, 0x00	; 0
 9aa:	0e 5f       	subi	r16, 0xFE	; 254
 9ac:	1f 4f       	sbci	r17, 0xFF	; 255
 9ae:	a4 01       	movw	r20, r8
 9b0:	07 d1       	rcall	.+526    	; 0xbc0 <__ultoa_invert>
 9b2:	a8 2e       	mov	r10, r24
 9b4:	a8 18       	sub	r10, r8
 9b6:	fb 2d       	mov	r31, r11
 9b8:	ff 77       	andi	r31, 0x7F	; 127
 9ba:	bf 2e       	mov	r11, r31
 9bc:	b6 fe       	sbrs	r11, 6
 9be:	0b c0       	rjmp	.+22     	; 0x9d6 <vfprintf+0x2c4>
 9c0:	2b 2d       	mov	r18, r11
 9c2:	2e 7f       	andi	r18, 0xFE	; 254
 9c4:	a5 14       	cp	r10, r5
 9c6:	50 f4       	brcc	.+20     	; 0x9dc <vfprintf+0x2ca>
 9c8:	b4 fe       	sbrs	r11, 4
 9ca:	0a c0       	rjmp	.+20     	; 0x9e0 <vfprintf+0x2ce>
 9cc:	b2 fc       	sbrc	r11, 2
 9ce:	08 c0       	rjmp	.+16     	; 0x9e0 <vfprintf+0x2ce>
 9d0:	2b 2d       	mov	r18, r11
 9d2:	2e 7e       	andi	r18, 0xEE	; 238
 9d4:	05 c0       	rjmp	.+10     	; 0x9e0 <vfprintf+0x2ce>
 9d6:	7a 2c       	mov	r7, r10
 9d8:	2b 2d       	mov	r18, r11
 9da:	03 c0       	rjmp	.+6      	; 0x9e2 <vfprintf+0x2d0>
 9dc:	7a 2c       	mov	r7, r10
 9de:	01 c0       	rjmp	.+2      	; 0x9e2 <vfprintf+0x2d0>
 9e0:	75 2c       	mov	r7, r5
 9e2:	24 ff       	sbrs	r18, 4
 9e4:	0d c0       	rjmp	.+26     	; 0xa00 <vfprintf+0x2ee>
 9e6:	fe 01       	movw	r30, r28
 9e8:	ea 0d       	add	r30, r10
 9ea:	f1 1d       	adc	r31, r1
 9ec:	80 81       	ld	r24, Z
 9ee:	80 33       	cpi	r24, 0x30	; 48
 9f0:	11 f4       	brne	.+4      	; 0x9f6 <vfprintf+0x2e4>
 9f2:	29 7e       	andi	r18, 0xE9	; 233
 9f4:	09 c0       	rjmp	.+18     	; 0xa08 <vfprintf+0x2f6>
 9f6:	22 ff       	sbrs	r18, 2
 9f8:	06 c0       	rjmp	.+12     	; 0xa06 <vfprintf+0x2f4>
 9fa:	73 94       	inc	r7
 9fc:	73 94       	inc	r7
 9fe:	04 c0       	rjmp	.+8      	; 0xa08 <vfprintf+0x2f6>
 a00:	82 2f       	mov	r24, r18
 a02:	86 78       	andi	r24, 0x86	; 134
 a04:	09 f0       	breq	.+2      	; 0xa08 <vfprintf+0x2f6>
 a06:	73 94       	inc	r7
 a08:	23 fd       	sbrc	r18, 3
 a0a:	12 c0       	rjmp	.+36     	; 0xa30 <vfprintf+0x31e>
 a0c:	20 ff       	sbrs	r18, 0
 a0e:	06 c0       	rjmp	.+12     	; 0xa1c <vfprintf+0x30a>
 a10:	5a 2c       	mov	r5, r10
 a12:	73 14       	cp	r7, r3
 a14:	18 f4       	brcc	.+6      	; 0xa1c <vfprintf+0x30a>
 a16:	53 0c       	add	r5, r3
 a18:	57 18       	sub	r5, r7
 a1a:	73 2c       	mov	r7, r3
 a1c:	73 14       	cp	r7, r3
 a1e:	60 f4       	brcc	.+24     	; 0xa38 <vfprintf+0x326>
 a20:	b7 01       	movw	r22, r14
 a22:	80 e2       	ldi	r24, 0x20	; 32
 a24:	90 e0       	ldi	r25, 0x00	; 0
 a26:	2c 87       	std	Y+12, r18	; 0x0c
 a28:	99 d0       	rcall	.+306    	; 0xb5c <fputc>
 a2a:	73 94       	inc	r7
 a2c:	2c 85       	ldd	r18, Y+12	; 0x0c
 a2e:	f6 cf       	rjmp	.-20     	; 0xa1c <vfprintf+0x30a>
 a30:	73 14       	cp	r7, r3
 a32:	10 f4       	brcc	.+4      	; 0xa38 <vfprintf+0x326>
 a34:	37 18       	sub	r3, r7
 a36:	01 c0       	rjmp	.+2      	; 0xa3a <vfprintf+0x328>
 a38:	31 2c       	mov	r3, r1
 a3a:	24 ff       	sbrs	r18, 4
 a3c:	11 c0       	rjmp	.+34     	; 0xa60 <vfprintf+0x34e>
 a3e:	b7 01       	movw	r22, r14
 a40:	80 e3       	ldi	r24, 0x30	; 48
 a42:	90 e0       	ldi	r25, 0x00	; 0
 a44:	2c 87       	std	Y+12, r18	; 0x0c
 a46:	8a d0       	rcall	.+276    	; 0xb5c <fputc>
 a48:	2c 85       	ldd	r18, Y+12	; 0x0c
 a4a:	22 ff       	sbrs	r18, 2
 a4c:	16 c0       	rjmp	.+44     	; 0xa7a <vfprintf+0x368>
 a4e:	21 ff       	sbrs	r18, 1
 a50:	03 c0       	rjmp	.+6      	; 0xa58 <vfprintf+0x346>
 a52:	88 e5       	ldi	r24, 0x58	; 88
 a54:	90 e0       	ldi	r25, 0x00	; 0
 a56:	02 c0       	rjmp	.+4      	; 0xa5c <vfprintf+0x34a>
 a58:	88 e7       	ldi	r24, 0x78	; 120
 a5a:	90 e0       	ldi	r25, 0x00	; 0
 a5c:	b7 01       	movw	r22, r14
 a5e:	0c c0       	rjmp	.+24     	; 0xa78 <vfprintf+0x366>
 a60:	82 2f       	mov	r24, r18
 a62:	86 78       	andi	r24, 0x86	; 134
 a64:	51 f0       	breq	.+20     	; 0xa7a <vfprintf+0x368>
 a66:	21 fd       	sbrc	r18, 1
 a68:	02 c0       	rjmp	.+4      	; 0xa6e <vfprintf+0x35c>
 a6a:	80 e2       	ldi	r24, 0x20	; 32
 a6c:	01 c0       	rjmp	.+2      	; 0xa70 <vfprintf+0x35e>
 a6e:	8b e2       	ldi	r24, 0x2B	; 43
 a70:	27 fd       	sbrc	r18, 7
 a72:	8d e2       	ldi	r24, 0x2D	; 45
 a74:	b7 01       	movw	r22, r14
 a76:	90 e0       	ldi	r25, 0x00	; 0
 a78:	71 d0       	rcall	.+226    	; 0xb5c <fputc>
 a7a:	a5 14       	cp	r10, r5
 a7c:	30 f4       	brcc	.+12     	; 0xa8a <vfprintf+0x378>
 a7e:	b7 01       	movw	r22, r14
 a80:	80 e3       	ldi	r24, 0x30	; 48
 a82:	90 e0       	ldi	r25, 0x00	; 0
 a84:	6b d0       	rcall	.+214    	; 0xb5c <fputc>
 a86:	5a 94       	dec	r5
 a88:	f8 cf       	rjmp	.-16     	; 0xa7a <vfprintf+0x368>
 a8a:	aa 94       	dec	r10
 a8c:	f4 01       	movw	r30, r8
 a8e:	ea 0d       	add	r30, r10
 a90:	f1 1d       	adc	r31, r1
 a92:	80 81       	ld	r24, Z
 a94:	b7 01       	movw	r22, r14
 a96:	90 e0       	ldi	r25, 0x00	; 0
 a98:	61 d0       	rcall	.+194    	; 0xb5c <fputc>
 a9a:	a1 10       	cpse	r10, r1
 a9c:	f6 cf       	rjmp	.-20     	; 0xa8a <vfprintf+0x378>
 a9e:	33 20       	and	r3, r3
 aa0:	09 f4       	brne	.+2      	; 0xaa4 <vfprintf+0x392>
 aa2:	5d ce       	rjmp	.-838    	; 0x75e <vfprintf+0x4c>
 aa4:	b7 01       	movw	r22, r14
 aa6:	80 e2       	ldi	r24, 0x20	; 32
 aa8:	90 e0       	ldi	r25, 0x00	; 0
 aaa:	58 d0       	rcall	.+176    	; 0xb5c <fputc>
 aac:	3a 94       	dec	r3
 aae:	f7 cf       	rjmp	.-18     	; 0xa9e <vfprintf+0x38c>
 ab0:	f7 01       	movw	r30, r14
 ab2:	86 81       	ldd	r24, Z+6	; 0x06
 ab4:	97 81       	ldd	r25, Z+7	; 0x07
 ab6:	02 c0       	rjmp	.+4      	; 0xabc <vfprintf+0x3aa>
 ab8:	8f ef       	ldi	r24, 0xFF	; 255
 aba:	9f ef       	ldi	r25, 0xFF	; 255
 abc:	2c 96       	adiw	r28, 0x0c	; 12
 abe:	0f b6       	in	r0, 0x3f	; 63
 ac0:	f8 94       	cli
 ac2:	de bf       	out	0x3e, r29	; 62
 ac4:	0f be       	out	0x3f, r0	; 63
 ac6:	cd bf       	out	0x3d, r28	; 61
 ac8:	df 91       	pop	r29
 aca:	cf 91       	pop	r28
 acc:	1f 91       	pop	r17
 ace:	0f 91       	pop	r16
 ad0:	ff 90       	pop	r15
 ad2:	ef 90       	pop	r14
 ad4:	df 90       	pop	r13
 ad6:	cf 90       	pop	r12
 ad8:	bf 90       	pop	r11
 ada:	af 90       	pop	r10
 adc:	9f 90       	pop	r9
 ade:	8f 90       	pop	r8
 ae0:	7f 90       	pop	r7
 ae2:	6f 90       	pop	r6
 ae4:	5f 90       	pop	r5
 ae6:	4f 90       	pop	r4
 ae8:	3f 90       	pop	r3
 aea:	2f 90       	pop	r2
 aec:	08 95       	ret

00000aee <calloc>:
 aee:	0f 93       	push	r16
 af0:	1f 93       	push	r17
 af2:	cf 93       	push	r28
 af4:	df 93       	push	r29
 af6:	86 9f       	mul	r24, r22
 af8:	80 01       	movw	r16, r0
 afa:	87 9f       	mul	r24, r23
 afc:	10 0d       	add	r17, r0
 afe:	96 9f       	mul	r25, r22
 b00:	10 0d       	add	r17, r0
 b02:	11 24       	eor	r1, r1
 b04:	c8 01       	movw	r24, r16
 b06:	56 dc       	rcall	.-1876   	; 0x3b4 <malloc>
 b08:	ec 01       	movw	r28, r24
 b0a:	00 97       	sbiw	r24, 0x00	; 0
 b0c:	21 f0       	breq	.+8      	; 0xb16 <calloc+0x28>
 b0e:	a8 01       	movw	r20, r16
 b10:	60 e0       	ldi	r22, 0x00	; 0
 b12:	70 e0       	ldi	r23, 0x00	; 0
 b14:	11 d0       	rcall	.+34     	; 0xb38 <memset>
 b16:	ce 01       	movw	r24, r28
 b18:	df 91       	pop	r29
 b1a:	cf 91       	pop	r28
 b1c:	1f 91       	pop	r17
 b1e:	0f 91       	pop	r16
 b20:	08 95       	ret

00000b22 <strnlen_P>:
 b22:	fc 01       	movw	r30, r24
 b24:	05 90       	lpm	r0, Z+
 b26:	61 50       	subi	r22, 0x01	; 1
 b28:	70 40       	sbci	r23, 0x00	; 0
 b2a:	01 10       	cpse	r0, r1
 b2c:	d8 f7       	brcc	.-10     	; 0xb24 <strnlen_P+0x2>
 b2e:	80 95       	com	r24
 b30:	90 95       	com	r25
 b32:	8e 0f       	add	r24, r30
 b34:	9f 1f       	adc	r25, r31
 b36:	08 95       	ret

00000b38 <memset>:
 b38:	dc 01       	movw	r26, r24
 b3a:	01 c0       	rjmp	.+2      	; 0xb3e <memset+0x6>
 b3c:	6d 93       	st	X+, r22
 b3e:	41 50       	subi	r20, 0x01	; 1
 b40:	50 40       	sbci	r21, 0x00	; 0
 b42:	e0 f7       	brcc	.-8      	; 0xb3c <memset+0x4>
 b44:	08 95       	ret

00000b46 <strnlen>:
 b46:	fc 01       	movw	r30, r24
 b48:	61 50       	subi	r22, 0x01	; 1
 b4a:	70 40       	sbci	r23, 0x00	; 0
 b4c:	01 90       	ld	r0, Z+
 b4e:	01 10       	cpse	r0, r1
 b50:	d8 f7       	brcc	.-10     	; 0xb48 <strnlen+0x2>
 b52:	80 95       	com	r24
 b54:	90 95       	com	r25
 b56:	8e 0f       	add	r24, r30
 b58:	9f 1f       	adc	r25, r31
 b5a:	08 95       	ret

00000b5c <fputc>:
 b5c:	0f 93       	push	r16
 b5e:	1f 93       	push	r17
 b60:	cf 93       	push	r28
 b62:	df 93       	push	r29
 b64:	18 2f       	mov	r17, r24
 b66:	09 2f       	mov	r16, r25
 b68:	eb 01       	movw	r28, r22
 b6a:	8b 81       	ldd	r24, Y+3	; 0x03
 b6c:	81 fd       	sbrc	r24, 1
 b6e:	03 c0       	rjmp	.+6      	; 0xb76 <fputc+0x1a>
 b70:	8f ef       	ldi	r24, 0xFF	; 255
 b72:	9f ef       	ldi	r25, 0xFF	; 255
 b74:	20 c0       	rjmp	.+64     	; 0xbb6 <fputc+0x5a>
 b76:	82 ff       	sbrs	r24, 2
 b78:	10 c0       	rjmp	.+32     	; 0xb9a <fputc+0x3e>
 b7a:	4e 81       	ldd	r20, Y+6	; 0x06
 b7c:	5f 81       	ldd	r21, Y+7	; 0x07
 b7e:	2c 81       	ldd	r18, Y+4	; 0x04
 b80:	3d 81       	ldd	r19, Y+5	; 0x05
 b82:	42 17       	cp	r20, r18
 b84:	53 07       	cpc	r21, r19
 b86:	7c f4       	brge	.+30     	; 0xba6 <fputc+0x4a>
 b88:	e8 81       	ld	r30, Y
 b8a:	f9 81       	ldd	r31, Y+1	; 0x01
 b8c:	9f 01       	movw	r18, r30
 b8e:	2f 5f       	subi	r18, 0xFF	; 255
 b90:	3f 4f       	sbci	r19, 0xFF	; 255
 b92:	39 83       	std	Y+1, r19	; 0x01
 b94:	28 83       	st	Y, r18
 b96:	10 83       	st	Z, r17
 b98:	06 c0       	rjmp	.+12     	; 0xba6 <fputc+0x4a>
 b9a:	e8 85       	ldd	r30, Y+8	; 0x08
 b9c:	f9 85       	ldd	r31, Y+9	; 0x09
 b9e:	81 2f       	mov	r24, r17
 ba0:	19 95       	eicall
 ba2:	89 2b       	or	r24, r25
 ba4:	29 f7       	brne	.-54     	; 0xb70 <fputc+0x14>
 ba6:	2e 81       	ldd	r18, Y+6	; 0x06
 ba8:	3f 81       	ldd	r19, Y+7	; 0x07
 baa:	2f 5f       	subi	r18, 0xFF	; 255
 bac:	3f 4f       	sbci	r19, 0xFF	; 255
 bae:	3f 83       	std	Y+7, r19	; 0x07
 bb0:	2e 83       	std	Y+6, r18	; 0x06
 bb2:	81 2f       	mov	r24, r17
 bb4:	90 2f       	mov	r25, r16
 bb6:	df 91       	pop	r29
 bb8:	cf 91       	pop	r28
 bba:	1f 91       	pop	r17
 bbc:	0f 91       	pop	r16
 bbe:	08 95       	ret

00000bc0 <__ultoa_invert>:
 bc0:	fa 01       	movw	r30, r20
 bc2:	aa 27       	eor	r26, r26
 bc4:	28 30       	cpi	r18, 0x08	; 8
 bc6:	51 f1       	breq	.+84     	; 0xc1c <__ultoa_invert+0x5c>
 bc8:	20 31       	cpi	r18, 0x10	; 16
 bca:	81 f1       	breq	.+96     	; 0xc2c <__ultoa_invert+0x6c>
 bcc:	e8 94       	clt
 bce:	6f 93       	push	r22
 bd0:	6e 7f       	andi	r22, 0xFE	; 254
 bd2:	6e 5f       	subi	r22, 0xFE	; 254
 bd4:	7f 4f       	sbci	r23, 0xFF	; 255
 bd6:	8f 4f       	sbci	r24, 0xFF	; 255
 bd8:	9f 4f       	sbci	r25, 0xFF	; 255
 bda:	af 4f       	sbci	r26, 0xFF	; 255
 bdc:	b1 e0       	ldi	r27, 0x01	; 1
 bde:	3e d0       	rcall	.+124    	; 0xc5c <__ultoa_invert+0x9c>
 be0:	b4 e0       	ldi	r27, 0x04	; 4
 be2:	3c d0       	rcall	.+120    	; 0xc5c <__ultoa_invert+0x9c>
 be4:	67 0f       	add	r22, r23
 be6:	78 1f       	adc	r23, r24
 be8:	89 1f       	adc	r24, r25
 bea:	9a 1f       	adc	r25, r26
 bec:	a1 1d       	adc	r26, r1
 bee:	68 0f       	add	r22, r24
 bf0:	79 1f       	adc	r23, r25
 bf2:	8a 1f       	adc	r24, r26
 bf4:	91 1d       	adc	r25, r1
 bf6:	a1 1d       	adc	r26, r1
 bf8:	6a 0f       	add	r22, r26
 bfa:	71 1d       	adc	r23, r1
 bfc:	81 1d       	adc	r24, r1
 bfe:	91 1d       	adc	r25, r1
 c00:	a1 1d       	adc	r26, r1
 c02:	20 d0       	rcall	.+64     	; 0xc44 <__ultoa_invert+0x84>
 c04:	09 f4       	brne	.+2      	; 0xc08 <__ultoa_invert+0x48>
 c06:	68 94       	set
 c08:	3f 91       	pop	r19
 c0a:	2a e0       	ldi	r18, 0x0A	; 10
 c0c:	26 9f       	mul	r18, r22
 c0e:	11 24       	eor	r1, r1
 c10:	30 19       	sub	r19, r0
 c12:	30 5d       	subi	r19, 0xD0	; 208
 c14:	31 93       	st	Z+, r19
 c16:	de f6       	brtc	.-74     	; 0xbce <__ultoa_invert+0xe>
 c18:	cf 01       	movw	r24, r30
 c1a:	08 95       	ret
 c1c:	46 2f       	mov	r20, r22
 c1e:	47 70       	andi	r20, 0x07	; 7
 c20:	40 5d       	subi	r20, 0xD0	; 208
 c22:	41 93       	st	Z+, r20
 c24:	b3 e0       	ldi	r27, 0x03	; 3
 c26:	0f d0       	rcall	.+30     	; 0xc46 <__ultoa_invert+0x86>
 c28:	c9 f7       	brne	.-14     	; 0xc1c <__ultoa_invert+0x5c>
 c2a:	f6 cf       	rjmp	.-20     	; 0xc18 <__ultoa_invert+0x58>
 c2c:	46 2f       	mov	r20, r22
 c2e:	4f 70       	andi	r20, 0x0F	; 15
 c30:	40 5d       	subi	r20, 0xD0	; 208
 c32:	4a 33       	cpi	r20, 0x3A	; 58
 c34:	18 f0       	brcs	.+6      	; 0xc3c <__ultoa_invert+0x7c>
 c36:	49 5d       	subi	r20, 0xD9	; 217
 c38:	31 fd       	sbrc	r19, 1
 c3a:	40 52       	subi	r20, 0x20	; 32
 c3c:	41 93       	st	Z+, r20
 c3e:	02 d0       	rcall	.+4      	; 0xc44 <__ultoa_invert+0x84>
 c40:	a9 f7       	brne	.-22     	; 0xc2c <__ultoa_invert+0x6c>
 c42:	ea cf       	rjmp	.-44     	; 0xc18 <__ultoa_invert+0x58>
 c44:	b4 e0       	ldi	r27, 0x04	; 4
 c46:	a6 95       	lsr	r26
 c48:	97 95       	ror	r25
 c4a:	87 95       	ror	r24
 c4c:	77 95       	ror	r23
 c4e:	67 95       	ror	r22
 c50:	ba 95       	dec	r27
 c52:	c9 f7       	brne	.-14     	; 0xc46 <__ultoa_invert+0x86>
 c54:	00 97       	sbiw	r24, 0x00	; 0
 c56:	61 05       	cpc	r22, r1
 c58:	71 05       	cpc	r23, r1
 c5a:	08 95       	ret
 c5c:	9b 01       	movw	r18, r22
 c5e:	ac 01       	movw	r20, r24
 c60:	0a 2e       	mov	r0, r26
 c62:	06 94       	lsr	r0
 c64:	57 95       	ror	r21
 c66:	47 95       	ror	r20
 c68:	37 95       	ror	r19
 c6a:	27 95       	ror	r18
 c6c:	ba 95       	dec	r27
 c6e:	c9 f7       	brne	.-14     	; 0xc62 <__ultoa_invert+0xa2>
 c70:	62 0f       	add	r22, r18
 c72:	73 1f       	adc	r23, r19
 c74:	84 1f       	adc	r24, r20
 c76:	95 1f       	adc	r25, r21
 c78:	a0 1d       	adc	r26, r0
 c7a:	08 95       	ret

00000c7c <_exit>:
 c7c:	f8 94       	cli

00000c7e <__stop_program>:
 c7e:	ff cf       	rjmp	.-2      	; 0xc7e <__stop_program>
