
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000068  00800200  00000c6c  00000d00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c6c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800268  00800268  00000d68  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d68  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  00000dc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ded  00000000  00000000  00000ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000722  00000000  00000000  00001cd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000890  00000000  00000000  000023f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002a8  00000000  00000000  00002c84  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000358  00000000  00000000  00002f2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005bc  00000000  00000000  00003284  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000100  00000000  00000000  00003840  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec e6       	ldi	r30, 0x6C	; 108
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 36       	cpi	r26, 0x68	; 104
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a8 e6       	ldi	r26, 0x68	; 104
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a4 37       	cpi	r26, 0x74	; 116
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	08 d1       	rcall	.+528    	; 0x330 <main>
 120:	a3 c5       	rjmp	.+2886   	; 0xc68 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <CAN_init>:
	for(int i = 0; i < can_tx.length; i++)
	{
		MCP_write(MCP_TXB0D0 + i, can_tx.data[i]);
	}
	MCP_rts(MCP_RTS_TX0);
}
 124:	5a d0       	rcall	.+180    	; 0x1da <MCP_init>
 126:	60 e8       	ldi	r22, 0x80	; 128
 128:	8f e0       	ldi	r24, 0x0F	; 15
 12a:	67 d0       	rcall	.+206    	; 0x1fa <MCP_write>
 12c:	63 e0       	ldi	r22, 0x03	; 3
 12e:	8b e2       	ldi	r24, 0x2B	; 43
 130:	64 d0       	rcall	.+200    	; 0x1fa <MCP_write>
 132:	60 e0       	ldi	r22, 0x00	; 0
 134:	8c e2       	ldi	r24, 0x2C	; 44
 136:	61 d0       	rcall	.+194    	; 0x1fa <MCP_write>
 138:	60 e0       	ldi	r22, 0x00	; 0
 13a:	8d e2       	ldi	r24, 0x2D	; 45
 13c:	5e d0       	rcall	.+188    	; 0x1fa <MCP_write>
 13e:	60 e0       	ldi	r22, 0x00	; 0
 140:	8c e0       	ldi	r24, 0x0C	; 12
 142:	5b d0       	rcall	.+182    	; 0x1fa <MCP_write>
 144:	60 e0       	ldi	r22, 0x00	; 0
 146:	8d e0       	ldi	r24, 0x0D	; 13
 148:	58 d0       	rcall	.+176    	; 0x1fa <MCP_write>
 14a:	60 e6       	ldi	r22, 0x60	; 96
 14c:	80 e6       	ldi	r24, 0x60	; 96
 14e:	55 d0       	rcall	.+170    	; 0x1fa <MCP_write>
 150:	60 e6       	ldi	r22, 0x60	; 96
 152:	80 e7       	ldi	r24, 0x70	; 112
 154:	52 d0       	rcall	.+164    	; 0x1fa <MCP_write>
 156:	40 e0       	ldi	r20, 0x00	; 0
 158:	60 ee       	ldi	r22, 0xE0	; 224
 15a:	8f e0       	ldi	r24, 0x0F	; 15
 15c:	63 c0       	rjmp	.+198    	; 0x224 <MCP_bit_mod>
 15e:	08 95       	ret

00000160 <CAN_data_receive>:

void CAN_data_receive(msg *message)
{
 160:	ef 92       	push	r14
 162:	ff 92       	push	r15
 164:	0f 93       	push	r16
 166:	1f 93       	push	r17
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	7c 01       	movw	r14, r24
	//msg message;

	message->id = (MCP_read(MCP_RXB0SIDH));
 16e:	81 e6       	ldi	r24, 0x61	; 97
 170:	39 d0       	rcall	.+114    	; 0x1e4 <MCP_read>
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	f7 01       	movw	r30, r14
 176:	91 83       	std	Z+1, r25	; 0x01
 178:	80 83       	st	Z, r24

	//message.id = MCP_read(MCP_RXB0SIDL);

	message->length = MCP_read(MCP_RXB0DLC);
 17a:	85 e6       	ldi	r24, 0x65	; 101
 17c:	33 d0       	rcall	.+102    	; 0x1e4 <MCP_read>
 17e:	f7 01       	movw	r30, r14
 180:	82 83       	std	Z+2, r24	; 0x02
	
	if (message->length > 8){
 182:	89 30       	cpi	r24, 0x09	; 9
 184:	40 f0       	brcs	.+16     	; 0x196 <CAN_data_receive+0x36>
		message->length = 8;
 186:	88 e0       	ldi	r24, 0x08	; 8
 188:	82 83       	std	Z+2, r24	; 0x02
 18a:	87 01       	movw	r16, r14
 18c:	0d 5f       	subi	r16, 0xFD	; 253
 18e:	1f 4f       	sbci	r17, 0xFF	; 255
	}
	MCP_rts(MCP_RTS_TX0);
}

void CAN_data_receive(msg *message)
{
 190:	c0 e0       	ldi	r28, 0x00	; 0
 192:	d0 e0       	ldi	r29, 0x00	; 0
 194:	03 c0       	rjmp	.+6      	; 0x19c <CAN_data_receive+0x3c>
	
	if (message->length > 8){
		message->length = 8;
	}
	
	for(int i = 0; i < message->length; i++) 
 196:	81 11       	cpse	r24, r1
 198:	f8 cf       	rjmp	.-16     	; 0x18a <CAN_data_receive+0x2a>
 19a:	0d c0       	rjmp	.+26     	; 0x1b6 <CAN_data_receive+0x56>
	{
		message->data[i] = MCP_read(MCP_RXB0DM + i);
 19c:	8c 2f       	mov	r24, r28
 19e:	8a 59       	subi	r24, 0x9A	; 154
 1a0:	21 d0       	rcall	.+66     	; 0x1e4 <MCP_read>
 1a2:	f8 01       	movw	r30, r16
 1a4:	81 93       	st	Z+, r24
 1a6:	8f 01       	movw	r16, r30
	
	if (message->length > 8){
		message->length = 8;
	}
	
	for(int i = 0; i < message->length; i++) 
 1a8:	21 96       	adiw	r28, 0x01	; 1
 1aa:	f7 01       	movw	r30, r14
 1ac:	22 81       	ldd	r18, Z+2	; 0x02
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	c2 17       	cp	r28, r18
 1b2:	d3 07       	cpc	r29, r19
 1b4:	9c f3       	brlt	.-26     	; 0x19c <CAN_data_receive+0x3c>
	{
		message->data[i] = MCP_read(MCP_RXB0DM + i);
	}
	
	MCP_bit_mod(MCP_CANINTF,0x01,0);
 1b6:	40 e0       	ldi	r20, 0x00	; 0
 1b8:	61 e0       	ldi	r22, 0x01	; 1
 1ba:	8c e2       	ldi	r24, 0x2C	; 44
 1bc:	33 d0       	rcall	.+102    	; 0x224 <MCP_bit_mod>

	//return message;
}
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	1f 91       	pop	r17
 1c4:	0f 91       	pop	r16
 1c6:	ff 90       	pop	r15
 1c8:	ef 90       	pop	r14
 1ca:	08 95       	ret

000001cc <MCP_reset>:
{
	PORTB &= ~(1 << SS);
	
	SPI_MasterTransmit(rts);
	
	PORTB |= (1 << SS);
 1cc:	2f 98       	cbi	0x05, 7	; 5
 1ce:	80 ec       	ldi	r24, 0xC0	; 192
 1d0:	bd d0       	rcall	.+378    	; 0x34c <SPI_MasterTransmit>
 1d2:	2f 9a       	sbi	0x05, 7	; 5
 1d4:	80 e0       	ldi	r24, 0x00	; 0
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	08 95       	ret

000001da <MCP_init>:
 1da:	af d0       	rcall	.+350    	; 0x33a <SPI_MasterInit>
 1dc:	f7 df       	rcall	.-18     	; 0x1cc <MCP_reset>
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	08 95       	ret

000001e4 <MCP_read>:
 1e4:	cf 93       	push	r28
 1e6:	c8 2f       	mov	r28, r24
 1e8:	2f 98       	cbi	0x05, 7	; 5
 1ea:	83 e0       	ldi	r24, 0x03	; 3
 1ec:	af d0       	rcall	.+350    	; 0x34c <SPI_MasterTransmit>
 1ee:	8c 2f       	mov	r24, r28
 1f0:	ad d0       	rcall	.+346    	; 0x34c <SPI_MasterTransmit>
 1f2:	b1 d0       	rcall	.+354    	; 0x356 <SPI_SlaveReceive>
 1f4:	2f 9a       	sbi	0x05, 7	; 5
 1f6:	cf 91       	pop	r28
 1f8:	08 95       	ret

000001fa <MCP_write>:
 1fa:	cf 93       	push	r28
 1fc:	df 93       	push	r29
 1fe:	d8 2f       	mov	r29, r24
 200:	c6 2f       	mov	r28, r22
 202:	2f 98       	cbi	0x05, 7	; 5
 204:	82 e0       	ldi	r24, 0x02	; 2
 206:	a2 d0       	rcall	.+324    	; 0x34c <SPI_MasterTransmit>
 208:	8d 2f       	mov	r24, r29
 20a:	a0 d0       	rcall	.+320    	; 0x34c <SPI_MasterTransmit>
 20c:	8c 2f       	mov	r24, r28
 20e:	9e d0       	rcall	.+316    	; 0x34c <SPI_MasterTransmit>
 210:	2f 9a       	sbi	0x05, 7	; 5
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	08 95       	ret

00000218 <MCP_read_status>:
	
}

char MCP_read_status(void)
{
	PORTB &= ~(1 << SS);
 218:	2f 98       	cbi	0x05, 7	; 5
	
	SPI_MasterTransmit(MCP_READ_STATUS);
 21a:	80 ea       	ldi	r24, 0xA0	; 160
 21c:	97 d0       	rcall	.+302    	; 0x34c <SPI_MasterTransmit>
	char status = SPI_SlaveReceive();
 21e:	9b d0       	rcall	.+310    	; 0x356 <SPI_SlaveReceive>
	
	PORTB |= (1 << SS);
 220:	2f 9a       	sbi	0x05, 7	; 5
	
	return status;
}
 222:	08 95       	ret

00000224 <MCP_bit_mod>:

void MCP_bit_mod(char address, char mask, char data)
{
 224:	1f 93       	push	r17
 226:	cf 93       	push	r28
 228:	df 93       	push	r29
 22a:	18 2f       	mov	r17, r24
 22c:	d6 2f       	mov	r29, r22
 22e:	c4 2f       	mov	r28, r20
	PORTB &= ~(1 << SS);
 230:	2f 98       	cbi	0x05, 7	; 5
	
	SPI_MasterTransmit(MCP_BITMOD);
 232:	85 e0       	ldi	r24, 0x05	; 5
 234:	8b d0       	rcall	.+278    	; 0x34c <SPI_MasterTransmit>
	SPI_MasterTransmit(address);
 236:	81 2f       	mov	r24, r17
 238:	89 d0       	rcall	.+274    	; 0x34c <SPI_MasterTransmit>
	SPI_MasterTransmit(mask);
 23a:	8d 2f       	mov	r24, r29
 23c:	87 d0       	rcall	.+270    	; 0x34c <SPI_MasterTransmit>
	SPI_MasterTransmit(data);
 23e:	8c 2f       	mov	r24, r28
 240:	85 d0       	rcall	.+266    	; 0x34c <SPI_MasterTransmit>
	
	PORTB |= ~(1 << SS);
 242:	85 b1       	in	r24, 0x05	; 5
 244:	8f 67       	ori	r24, 0x7F	; 127
 246:	85 b9       	out	0x05, r24	; 5
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	1f 91       	pop	r17
 24e:	08 95       	ret

00000250 <test_CAN_nodes>:
	{
		printf("DATA[%d]: %d \n",i, message->data[i]);
	}
	printf("ID received: %02x \n",message->id);
	printf("Length: %d \n",message->length);
}
 250:	0f 2e       	mov	r0, r31
 252:	f6 e0       	ldi	r31, 0x06	; 6
 254:	cf 2e       	mov	r12, r31
 256:	f2 e0       	ldi	r31, 0x02	; 2
 258:	df 2e       	mov	r13, r31
 25a:	f0 2d       	mov	r31, r0
 25c:	41 2c       	mov	r4, r1
 25e:	51 2c       	mov	r5, r1
 260:	06 e3       	ldi	r16, 0x36	; 54
 262:	12 e0       	ldi	r17, 0x02	; 2
 264:	0f 2e       	mov	r0, r31
 266:	f5 e4       	ldi	r31, 0x45	; 69
 268:	af 2e       	mov	r10, r31
 26a:	f2 e0       	ldi	r31, 0x02	; 2
 26c:	bf 2e       	mov	r11, r31
 26e:	f0 2d       	mov	r31, r0
 270:	0f 2e       	mov	r0, r31
 272:	f9 e5       	ldi	r31, 0x59	; 89
 274:	8f 2e       	mov	r8, r31
 276:	f2 e0       	ldi	r31, 0x02	; 2
 278:	9f 2e       	mov	r9, r31
 27a:	f0 2d       	mov	r31, r0
 27c:	41 e0       	ldi	r20, 0x01	; 1
 27e:	61 e0       	ldi	r22, 0x01	; 1
 280:	8b e2       	ldi	r24, 0x2B	; 43
 282:	d0 df       	rcall	.-96     	; 0x224 <MCP_bit_mod>
 284:	c9 df       	rcall	.-110    	; 0x218 <MCP_read_status>
 286:	c8 2f       	mov	r28, r24
 288:	c3 70       	andi	r28, 0x03	; 3
 28a:	99 27       	eor	r25, r25
 28c:	9f 93       	push	r25
 28e:	8f 93       	push	r24
 290:	1f 92       	push	r1
 292:	cf 93       	push	r28
 294:	df 92       	push	r13
 296:	cf 92       	push	r12
 298:	f4 d1       	rcall	.+1000   	; 0x682 <printf>
 29a:	0f 90       	pop	r0
 29c:	0f 90       	pop	r0
 29e:	0f 90       	pop	r0
 2a0:	0f 90       	pop	r0
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	c3 30       	cpi	r28, 0x03	; 3
 2a8:	21 f4       	brne	.+8      	; 0x2b2 <test_CAN_nodes+0x62>
 2aa:	89 e2       	ldi	r24, 0x29	; 41
 2ac:	92 e0       	ldi	r25, 0x02	; 2
 2ae:	fa d1       	rcall	.+1012   	; 0x6a4 <puts>
 2b0:	03 c0       	rjmp	.+6      	; 0x2b8 <test_CAN_nodes+0x68>
 2b2:	c1 50       	subi	r28, 0x01	; 1
 2b4:	c2 30       	cpi	r28, 0x02	; 2
 2b6:	30 f7       	brcc	.-52     	; 0x284 <test_CAN_nodes+0x34>
 2b8:	8b e0       	ldi	r24, 0x0B	; 11
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	71 d0       	rcall	.+226    	; 0x3a0 <malloc>
 2be:	7c 01       	movw	r14, r24
 2c0:	4f df       	rcall	.-354    	; 0x160 <CAN_data_receive>
 2c2:	f7 01       	movw	r30, r14
 2c4:	82 81       	ldd	r24, Z+2	; 0x02
 2c6:	88 23       	and	r24, r24
 2c8:	d9 f0       	breq	.+54     	; 0x300 <test_CAN_nodes+0xb0>
 2ca:	e7 01       	movw	r28, r14
 2cc:	23 96       	adiw	r28, 0x03	; 3
 2ce:	64 2c       	mov	r6, r4
 2d0:	75 2c       	mov	r7, r5
 2d2:	89 91       	ld	r24, Y+
 2d4:	1f 92       	push	r1
 2d6:	8f 93       	push	r24
 2d8:	7f 92       	push	r7
 2da:	6f 92       	push	r6
 2dc:	1f 93       	push	r17
 2de:	0f 93       	push	r16
 2e0:	d0 d1       	rcall	.+928    	; 0x682 <printf>
 2e2:	ff ef       	ldi	r31, 0xFF	; 255
 2e4:	6f 1a       	sub	r6, r31
 2e6:	7f 0a       	sbc	r7, r31
 2e8:	f7 01       	movw	r30, r14
 2ea:	82 81       	ldd	r24, Z+2	; 0x02
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	0f 90       	pop	r0
 2f0:	0f 90       	pop	r0
 2f2:	0f 90       	pop	r0
 2f4:	0f 90       	pop	r0
 2f6:	0f 90       	pop	r0
 2f8:	0f 90       	pop	r0
 2fa:	68 16       	cp	r6, r24
 2fc:	79 06       	cpc	r7, r25
 2fe:	4c f3       	brlt	.-46     	; 0x2d2 <test_CAN_nodes+0x82>
 300:	f7 01       	movw	r30, r14
 302:	81 81       	ldd	r24, Z+1	; 0x01
 304:	8f 93       	push	r24
 306:	80 81       	ld	r24, Z
 308:	8f 93       	push	r24
 30a:	bf 92       	push	r11
 30c:	af 92       	push	r10
 30e:	b9 d1       	rcall	.+882    	; 0x682 <printf>
 310:	f7 01       	movw	r30, r14
 312:	82 81       	ldd	r24, Z+2	; 0x02
 314:	1f 92       	push	r1
 316:	8f 93       	push	r24
 318:	9f 92       	push	r9
 31a:	8f 92       	push	r8
 31c:	b2 d1       	rcall	.+868    	; 0x682 <printf>
 31e:	8d b7       	in	r24, 0x3d	; 61
 320:	9e b7       	in	r25, 0x3e	; 62
 322:	08 96       	adiw	r24, 0x08	; 8
 324:	0f b6       	in	r0, 0x3f	; 63
 326:	f8 94       	cli
 328:	9e bf       	out	0x3e, r25	; 62
 32a:	0f be       	out	0x3f, r0	; 63
 32c:	8d bf       	out	0x3d, r24	; 61
 32e:	a6 cf       	rjmp	.-180    	; 0x27c <test_CAN_nodes+0x2c>

00000330 <main>:

void main(void)
{
	CAN_init();
 330:	f9 de       	rcall	.-526    	; 0x124 <CAN_init>
	USART_Init(MYUBRR);	
 332:	87 e6       	ldi	r24, 0x67	; 103
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	23 d0       	rcall	.+70     	; 0x37e <USART_Init>
	test_CAN_nodes();
 338:	8b df       	rcall	.-234    	; 0x250 <test_CAN_nodes>

0000033a <SPI_MasterInit>:
{
	/* Set MISO output, all others input */
	DDRB = (1 << MISO);
	
	/* Enable SPI */
	SPCR = (1<<SPE);
 33a:	84 b1       	in	r24, 0x04	; 4
 33c:	87 68       	ori	r24, 0x87	; 135
 33e:	84 b9       	out	0x04, r24	; 4
 340:	23 98       	cbi	0x04, 3	; 4
 342:	28 9a       	sbi	0x05, 0	; 5
 344:	8c b5       	in	r24, 0x2c	; 44
 346:	81 65       	ori	r24, 0x51	; 81
 348:	8c bd       	out	0x2c, r24	; 44
 34a:	08 95       	ret

0000034c <SPI_MasterTransmit>:
 34c:	8e bd       	out	0x2e, r24	; 46
 34e:	0d b4       	in	r0, 0x2d	; 45
 350:	07 fe       	sbrs	r0, 7
 352:	fd cf       	rjmp	.-6      	; 0x34e <SPI_MasterTransmit+0x2>
 354:	08 95       	ret

00000356 <SPI_SlaveReceive>:
}


uint8_t SPI_SlaveReceive(void)
{
	SPI_MasterTransmit(0);
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	f9 df       	rcall	.-14     	; 0x34c <SPI_MasterTransmit>
	return SPDR;
 35a:	8e b5       	in	r24, 0x2e	; 46
 35c:	08 95       	ret

0000035e <USART_Transmit>:
}

void USART_Transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while ( !(UCSR0A & (1 << UDRE0)) );
 35e:	e0 ec       	ldi	r30, 0xC0	; 192
 360:	f0 e0       	ldi	r31, 0x00	; 0
 362:	90 81       	ld	r25, Z
 364:	95 ff       	sbrs	r25, 5
 366:	fd cf       	rjmp	.-6      	; 0x362 <USART_Transmit+0x4>
	
	/* Put data into buffer, sends the data */
	UDR0 = data;
 368:	80 93 c6 00 	sts	0x00C6, r24
 36c:	08 95       	ret

0000036e <USART_Receive>:
}

unsigned char USART_Receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1 << RXC0)) );
 36e:	e0 ec       	ldi	r30, 0xC0	; 192
 370:	f0 e0       	ldi	r31, 0x00	; 0
 372:	80 81       	ld	r24, Z
 374:	88 23       	and	r24, r24
 376:	ec f7       	brge	.-6      	; 0x372 <USART_Receive+0x4>
	
	/* Get and return received data from buffer */
	return UDR0;
 378:	80 91 c6 00 	lds	r24, 0x00C6
}
 37c:	08 95       	ret

0000037e <USART_Init>:

FILE *uart;

void USART_Init(unsigned int ubrr)
{
	UBRR0H = (unsigned char)(ubrr >> 8);
 37e:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
 382:	80 93 c4 00 	sts	0x00C4, r24
	
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
 386:	88 e1       	ldi	r24, 0x18	; 24
 388:	80 93 c1 00 	sts	0x00C1, r24
	
	uart = fdevopen(&USART_Transmit, &USART_Receive);
 38c:	67 eb       	ldi	r22, 0xB7	; 183
 38e:	71 e0       	ldi	r23, 0x01	; 1
 390:	8f ea       	ldi	r24, 0xAF	; 175
 392:	91 e0       	ldi	r25, 0x01	; 1
 394:	2c d1       	rcall	.+600    	; 0x5ee <fdevopen>
 396:	90 93 69 02 	sts	0x0269, r25
 39a:	80 93 68 02 	sts	0x0268, r24
 39e:	08 95       	ret

000003a0 <malloc>:
 3a0:	cf 93       	push	r28
 3a2:	df 93       	push	r29
 3a4:	82 30       	cpi	r24, 0x02	; 2
 3a6:	91 05       	cpc	r25, r1
 3a8:	10 f4       	brcc	.+4      	; 0x3ae <malloc+0xe>
 3aa:	82 e0       	ldi	r24, 0x02	; 2
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	e0 91 6c 02 	lds	r30, 0x026C
 3b2:	f0 91 6d 02 	lds	r31, 0x026D
 3b6:	20 e0       	ldi	r18, 0x00	; 0
 3b8:	30 e0       	ldi	r19, 0x00	; 0
 3ba:	a0 e0       	ldi	r26, 0x00	; 0
 3bc:	b0 e0       	ldi	r27, 0x00	; 0
 3be:	30 97       	sbiw	r30, 0x00	; 0
 3c0:	39 f1       	breq	.+78     	; 0x410 <malloc+0x70>
 3c2:	40 81       	ld	r20, Z
 3c4:	51 81       	ldd	r21, Z+1	; 0x01
 3c6:	48 17       	cp	r20, r24
 3c8:	59 07       	cpc	r21, r25
 3ca:	b8 f0       	brcs	.+46     	; 0x3fa <malloc+0x5a>
 3cc:	48 17       	cp	r20, r24
 3ce:	59 07       	cpc	r21, r25
 3d0:	71 f4       	brne	.+28     	; 0x3ee <malloc+0x4e>
 3d2:	82 81       	ldd	r24, Z+2	; 0x02
 3d4:	93 81       	ldd	r25, Z+3	; 0x03
 3d6:	10 97       	sbiw	r26, 0x00	; 0
 3d8:	29 f0       	breq	.+10     	; 0x3e4 <malloc+0x44>
 3da:	13 96       	adiw	r26, 0x03	; 3
 3dc:	9c 93       	st	X, r25
 3de:	8e 93       	st	-X, r24
 3e0:	12 97       	sbiw	r26, 0x02	; 2
 3e2:	2c c0       	rjmp	.+88     	; 0x43c <malloc+0x9c>
 3e4:	90 93 6d 02 	sts	0x026D, r25
 3e8:	80 93 6c 02 	sts	0x026C, r24
 3ec:	27 c0       	rjmp	.+78     	; 0x43c <malloc+0x9c>
 3ee:	21 15       	cp	r18, r1
 3f0:	31 05       	cpc	r19, r1
 3f2:	31 f0       	breq	.+12     	; 0x400 <malloc+0x60>
 3f4:	42 17       	cp	r20, r18
 3f6:	53 07       	cpc	r21, r19
 3f8:	18 f0       	brcs	.+6      	; 0x400 <malloc+0x60>
 3fa:	a9 01       	movw	r20, r18
 3fc:	db 01       	movw	r26, r22
 3fe:	01 c0       	rjmp	.+2      	; 0x402 <malloc+0x62>
 400:	ef 01       	movw	r28, r30
 402:	9a 01       	movw	r18, r20
 404:	bd 01       	movw	r22, r26
 406:	df 01       	movw	r26, r30
 408:	02 80       	ldd	r0, Z+2	; 0x02
 40a:	f3 81       	ldd	r31, Z+3	; 0x03
 40c:	e0 2d       	mov	r30, r0
 40e:	d7 cf       	rjmp	.-82     	; 0x3be <malloc+0x1e>
 410:	21 15       	cp	r18, r1
 412:	31 05       	cpc	r19, r1
 414:	f9 f0       	breq	.+62     	; 0x454 <malloc+0xb4>
 416:	28 1b       	sub	r18, r24
 418:	39 0b       	sbc	r19, r25
 41a:	24 30       	cpi	r18, 0x04	; 4
 41c:	31 05       	cpc	r19, r1
 41e:	80 f4       	brcc	.+32     	; 0x440 <malloc+0xa0>
 420:	8a 81       	ldd	r24, Y+2	; 0x02
 422:	9b 81       	ldd	r25, Y+3	; 0x03
 424:	61 15       	cp	r22, r1
 426:	71 05       	cpc	r23, r1
 428:	21 f0       	breq	.+8      	; 0x432 <malloc+0x92>
 42a:	fb 01       	movw	r30, r22
 42c:	93 83       	std	Z+3, r25	; 0x03
 42e:	82 83       	std	Z+2, r24	; 0x02
 430:	04 c0       	rjmp	.+8      	; 0x43a <malloc+0x9a>
 432:	90 93 6d 02 	sts	0x026D, r25
 436:	80 93 6c 02 	sts	0x026C, r24
 43a:	fe 01       	movw	r30, r28
 43c:	32 96       	adiw	r30, 0x02	; 2
 43e:	44 c0       	rjmp	.+136    	; 0x4c8 <malloc+0x128>
 440:	fe 01       	movw	r30, r28
 442:	e2 0f       	add	r30, r18
 444:	f3 1f       	adc	r31, r19
 446:	81 93       	st	Z+, r24
 448:	91 93       	st	Z+, r25
 44a:	22 50       	subi	r18, 0x02	; 2
 44c:	31 09       	sbc	r19, r1
 44e:	39 83       	std	Y+1, r19	; 0x01
 450:	28 83       	st	Y, r18
 452:	3a c0       	rjmp	.+116    	; 0x4c8 <malloc+0x128>
 454:	20 91 6a 02 	lds	r18, 0x026A
 458:	30 91 6b 02 	lds	r19, 0x026B
 45c:	23 2b       	or	r18, r19
 45e:	41 f4       	brne	.+16     	; 0x470 <malloc+0xd0>
 460:	20 91 02 02 	lds	r18, 0x0202
 464:	30 91 03 02 	lds	r19, 0x0203
 468:	30 93 6b 02 	sts	0x026B, r19
 46c:	20 93 6a 02 	sts	0x026A, r18
 470:	20 91 00 02 	lds	r18, 0x0200
 474:	30 91 01 02 	lds	r19, 0x0201
 478:	21 15       	cp	r18, r1
 47a:	31 05       	cpc	r19, r1
 47c:	41 f4       	brne	.+16     	; 0x48e <malloc+0xee>
 47e:	2d b7       	in	r18, 0x3d	; 61
 480:	3e b7       	in	r19, 0x3e	; 62
 482:	40 91 04 02 	lds	r20, 0x0204
 486:	50 91 05 02 	lds	r21, 0x0205
 48a:	24 1b       	sub	r18, r20
 48c:	35 0b       	sbc	r19, r21
 48e:	e0 91 6a 02 	lds	r30, 0x026A
 492:	f0 91 6b 02 	lds	r31, 0x026B
 496:	e2 17       	cp	r30, r18
 498:	f3 07       	cpc	r31, r19
 49a:	a0 f4       	brcc	.+40     	; 0x4c4 <malloc+0x124>
 49c:	2e 1b       	sub	r18, r30
 49e:	3f 0b       	sbc	r19, r31
 4a0:	28 17       	cp	r18, r24
 4a2:	39 07       	cpc	r19, r25
 4a4:	78 f0       	brcs	.+30     	; 0x4c4 <malloc+0x124>
 4a6:	ac 01       	movw	r20, r24
 4a8:	4e 5f       	subi	r20, 0xFE	; 254
 4aa:	5f 4f       	sbci	r21, 0xFF	; 255
 4ac:	24 17       	cp	r18, r20
 4ae:	35 07       	cpc	r19, r21
 4b0:	48 f0       	brcs	.+18     	; 0x4c4 <malloc+0x124>
 4b2:	4e 0f       	add	r20, r30
 4b4:	5f 1f       	adc	r21, r31
 4b6:	50 93 6b 02 	sts	0x026B, r21
 4ba:	40 93 6a 02 	sts	0x026A, r20
 4be:	81 93       	st	Z+, r24
 4c0:	91 93       	st	Z+, r25
 4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <malloc+0x128>
 4c4:	e0 e0       	ldi	r30, 0x00	; 0
 4c6:	f0 e0       	ldi	r31, 0x00	; 0
 4c8:	cf 01       	movw	r24, r30
 4ca:	df 91       	pop	r29
 4cc:	cf 91       	pop	r28
 4ce:	08 95       	ret

000004d0 <free>:
 4d0:	cf 93       	push	r28
 4d2:	df 93       	push	r29
 4d4:	00 97       	sbiw	r24, 0x00	; 0
 4d6:	09 f4       	brne	.+2      	; 0x4da <free+0xa>
 4d8:	87 c0       	rjmp	.+270    	; 0x5e8 <free+0x118>
 4da:	fc 01       	movw	r30, r24
 4dc:	32 97       	sbiw	r30, 0x02	; 2
 4de:	13 82       	std	Z+3, r1	; 0x03
 4e0:	12 82       	std	Z+2, r1	; 0x02
 4e2:	c0 91 6c 02 	lds	r28, 0x026C
 4e6:	d0 91 6d 02 	lds	r29, 0x026D
 4ea:	20 97       	sbiw	r28, 0x00	; 0
 4ec:	81 f4       	brne	.+32     	; 0x50e <free+0x3e>
 4ee:	20 81       	ld	r18, Z
 4f0:	31 81       	ldd	r19, Z+1	; 0x01
 4f2:	28 0f       	add	r18, r24
 4f4:	39 1f       	adc	r19, r25
 4f6:	80 91 6a 02 	lds	r24, 0x026A
 4fa:	90 91 6b 02 	lds	r25, 0x026B
 4fe:	82 17       	cp	r24, r18
 500:	93 07       	cpc	r25, r19
 502:	79 f5       	brne	.+94     	; 0x562 <free+0x92>
 504:	f0 93 6b 02 	sts	0x026B, r31
 508:	e0 93 6a 02 	sts	0x026A, r30
 50c:	6d c0       	rjmp	.+218    	; 0x5e8 <free+0x118>
 50e:	de 01       	movw	r26, r28
 510:	20 e0       	ldi	r18, 0x00	; 0
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	ae 17       	cp	r26, r30
 516:	bf 07       	cpc	r27, r31
 518:	50 f4       	brcc	.+20     	; 0x52e <free+0x5e>
 51a:	12 96       	adiw	r26, 0x02	; 2
 51c:	4d 91       	ld	r20, X+
 51e:	5c 91       	ld	r21, X
 520:	13 97       	sbiw	r26, 0x03	; 3
 522:	9d 01       	movw	r18, r26
 524:	41 15       	cp	r20, r1
 526:	51 05       	cpc	r21, r1
 528:	09 f1       	breq	.+66     	; 0x56c <free+0x9c>
 52a:	da 01       	movw	r26, r20
 52c:	f3 cf       	rjmp	.-26     	; 0x514 <free+0x44>
 52e:	b3 83       	std	Z+3, r27	; 0x03
 530:	a2 83       	std	Z+2, r26	; 0x02
 532:	40 81       	ld	r20, Z
 534:	51 81       	ldd	r21, Z+1	; 0x01
 536:	84 0f       	add	r24, r20
 538:	95 1f       	adc	r25, r21
 53a:	8a 17       	cp	r24, r26
 53c:	9b 07       	cpc	r25, r27
 53e:	71 f4       	brne	.+28     	; 0x55c <free+0x8c>
 540:	8d 91       	ld	r24, X+
 542:	9c 91       	ld	r25, X
 544:	11 97       	sbiw	r26, 0x01	; 1
 546:	84 0f       	add	r24, r20
 548:	95 1f       	adc	r25, r21
 54a:	02 96       	adiw	r24, 0x02	; 2
 54c:	91 83       	std	Z+1, r25	; 0x01
 54e:	80 83       	st	Z, r24
 550:	12 96       	adiw	r26, 0x02	; 2
 552:	8d 91       	ld	r24, X+
 554:	9c 91       	ld	r25, X
 556:	13 97       	sbiw	r26, 0x03	; 3
 558:	93 83       	std	Z+3, r25	; 0x03
 55a:	82 83       	std	Z+2, r24	; 0x02
 55c:	21 15       	cp	r18, r1
 55e:	31 05       	cpc	r19, r1
 560:	29 f4       	brne	.+10     	; 0x56c <free+0x9c>
 562:	f0 93 6d 02 	sts	0x026D, r31
 566:	e0 93 6c 02 	sts	0x026C, r30
 56a:	3e c0       	rjmp	.+124    	; 0x5e8 <free+0x118>
 56c:	d9 01       	movw	r26, r18
 56e:	13 96       	adiw	r26, 0x03	; 3
 570:	fc 93       	st	X, r31
 572:	ee 93       	st	-X, r30
 574:	12 97       	sbiw	r26, 0x02	; 2
 576:	4d 91       	ld	r20, X+
 578:	5d 91       	ld	r21, X+
 57a:	a4 0f       	add	r26, r20
 57c:	b5 1f       	adc	r27, r21
 57e:	ea 17       	cp	r30, r26
 580:	fb 07       	cpc	r31, r27
 582:	79 f4       	brne	.+30     	; 0x5a2 <free+0xd2>
 584:	80 81       	ld	r24, Z
 586:	91 81       	ldd	r25, Z+1	; 0x01
 588:	84 0f       	add	r24, r20
 58a:	95 1f       	adc	r25, r21
 58c:	02 96       	adiw	r24, 0x02	; 2
 58e:	d9 01       	movw	r26, r18
 590:	11 96       	adiw	r26, 0x01	; 1
 592:	9c 93       	st	X, r25
 594:	8e 93       	st	-X, r24
 596:	82 81       	ldd	r24, Z+2	; 0x02
 598:	93 81       	ldd	r25, Z+3	; 0x03
 59a:	13 96       	adiw	r26, 0x03	; 3
 59c:	9c 93       	st	X, r25
 59e:	8e 93       	st	-X, r24
 5a0:	12 97       	sbiw	r26, 0x02	; 2
 5a2:	e0 e0       	ldi	r30, 0x00	; 0
 5a4:	f0 e0       	ldi	r31, 0x00	; 0
 5a6:	8a 81       	ldd	r24, Y+2	; 0x02
 5a8:	9b 81       	ldd	r25, Y+3	; 0x03
 5aa:	00 97       	sbiw	r24, 0x00	; 0
 5ac:	19 f0       	breq	.+6      	; 0x5b4 <free+0xe4>
 5ae:	fe 01       	movw	r30, r28
 5b0:	ec 01       	movw	r28, r24
 5b2:	f9 cf       	rjmp	.-14     	; 0x5a6 <free+0xd6>
 5b4:	ce 01       	movw	r24, r28
 5b6:	02 96       	adiw	r24, 0x02	; 2
 5b8:	28 81       	ld	r18, Y
 5ba:	39 81       	ldd	r19, Y+1	; 0x01
 5bc:	82 0f       	add	r24, r18
 5be:	93 1f       	adc	r25, r19
 5c0:	20 91 6a 02 	lds	r18, 0x026A
 5c4:	30 91 6b 02 	lds	r19, 0x026B
 5c8:	28 17       	cp	r18, r24
 5ca:	39 07       	cpc	r19, r25
 5cc:	69 f4       	brne	.+26     	; 0x5e8 <free+0x118>
 5ce:	30 97       	sbiw	r30, 0x00	; 0
 5d0:	29 f4       	brne	.+10     	; 0x5dc <free+0x10c>
 5d2:	10 92 6d 02 	sts	0x026D, r1
 5d6:	10 92 6c 02 	sts	0x026C, r1
 5da:	02 c0       	rjmp	.+4      	; 0x5e0 <free+0x110>
 5dc:	13 82       	std	Z+3, r1	; 0x03
 5de:	12 82       	std	Z+2, r1	; 0x02
 5e0:	d0 93 6b 02 	sts	0x026B, r29
 5e4:	c0 93 6a 02 	sts	0x026A, r28
 5e8:	df 91       	pop	r29
 5ea:	cf 91       	pop	r28
 5ec:	08 95       	ret

000005ee <fdevopen>:
 5ee:	0f 93       	push	r16
 5f0:	1f 93       	push	r17
 5f2:	cf 93       	push	r28
 5f4:	df 93       	push	r29
 5f6:	ec 01       	movw	r28, r24
 5f8:	8b 01       	movw	r16, r22
 5fa:	00 97       	sbiw	r24, 0x00	; 0
 5fc:	31 f4       	brne	.+12     	; 0x60a <fdevopen+0x1c>
 5fe:	61 15       	cp	r22, r1
 600:	71 05       	cpc	r23, r1
 602:	19 f4       	brne	.+6      	; 0x60a <fdevopen+0x1c>
 604:	80 e0       	ldi	r24, 0x00	; 0
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	37 c0       	rjmp	.+110    	; 0x678 <fdevopen+0x8a>
 60a:	6e e0       	ldi	r22, 0x0E	; 14
 60c:	70 e0       	ldi	r23, 0x00	; 0
 60e:	81 e0       	ldi	r24, 0x01	; 1
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	63 d2       	rcall	.+1222   	; 0xada <calloc>
 614:	fc 01       	movw	r30, r24
 616:	00 97       	sbiw	r24, 0x00	; 0
 618:	a9 f3       	breq	.-22     	; 0x604 <fdevopen+0x16>
 61a:	80 e8       	ldi	r24, 0x80	; 128
 61c:	83 83       	std	Z+3, r24	; 0x03
 61e:	01 15       	cp	r16, r1
 620:	11 05       	cpc	r17, r1
 622:	71 f0       	breq	.+28     	; 0x640 <fdevopen+0x52>
 624:	13 87       	std	Z+11, r17	; 0x0b
 626:	02 87       	std	Z+10, r16	; 0x0a
 628:	81 e8       	ldi	r24, 0x81	; 129
 62a:	83 83       	std	Z+3, r24	; 0x03
 62c:	80 91 6e 02 	lds	r24, 0x026E
 630:	90 91 6f 02 	lds	r25, 0x026F
 634:	89 2b       	or	r24, r25
 636:	21 f4       	brne	.+8      	; 0x640 <fdevopen+0x52>
 638:	f0 93 6f 02 	sts	0x026F, r31
 63c:	e0 93 6e 02 	sts	0x026E, r30
 640:	20 97       	sbiw	r28, 0x00	; 0
 642:	c9 f0       	breq	.+50     	; 0x676 <fdevopen+0x88>
 644:	d1 87       	std	Z+9, r29	; 0x09
 646:	c0 87       	std	Z+8, r28	; 0x08
 648:	83 81       	ldd	r24, Z+3	; 0x03
 64a:	82 60       	ori	r24, 0x02	; 2
 64c:	83 83       	std	Z+3, r24	; 0x03
 64e:	80 91 70 02 	lds	r24, 0x0270
 652:	90 91 71 02 	lds	r25, 0x0271
 656:	89 2b       	or	r24, r25
 658:	71 f4       	brne	.+28     	; 0x676 <fdevopen+0x88>
 65a:	f0 93 71 02 	sts	0x0271, r31
 65e:	e0 93 70 02 	sts	0x0270, r30
 662:	80 91 72 02 	lds	r24, 0x0272
 666:	90 91 73 02 	lds	r25, 0x0273
 66a:	89 2b       	or	r24, r25
 66c:	21 f4       	brne	.+8      	; 0x676 <fdevopen+0x88>
 66e:	f0 93 73 02 	sts	0x0273, r31
 672:	e0 93 72 02 	sts	0x0272, r30
 676:	cf 01       	movw	r24, r30
 678:	df 91       	pop	r29
 67a:	cf 91       	pop	r28
 67c:	1f 91       	pop	r17
 67e:	0f 91       	pop	r16
 680:	08 95       	ret

00000682 <printf>:
 682:	cf 93       	push	r28
 684:	df 93       	push	r29
 686:	cd b7       	in	r28, 0x3d	; 61
 688:	de b7       	in	r29, 0x3e	; 62
 68a:	fe 01       	movw	r30, r28
 68c:	36 96       	adiw	r30, 0x06	; 6
 68e:	61 91       	ld	r22, Z+
 690:	71 91       	ld	r23, Z+
 692:	af 01       	movw	r20, r30
 694:	80 91 70 02 	lds	r24, 0x0270
 698:	90 91 71 02 	lds	r25, 0x0271
 69c:	30 d0       	rcall	.+96     	; 0x6fe <vfprintf>
 69e:	df 91       	pop	r29
 6a0:	cf 91       	pop	r28
 6a2:	08 95       	ret

000006a4 <puts>:
 6a4:	0f 93       	push	r16
 6a6:	1f 93       	push	r17
 6a8:	cf 93       	push	r28
 6aa:	df 93       	push	r29
 6ac:	e0 91 70 02 	lds	r30, 0x0270
 6b0:	f0 91 71 02 	lds	r31, 0x0271
 6b4:	23 81       	ldd	r18, Z+3	; 0x03
 6b6:	21 ff       	sbrs	r18, 1
 6b8:	1b c0       	rjmp	.+54     	; 0x6f0 <puts+0x4c>
 6ba:	ec 01       	movw	r28, r24
 6bc:	00 e0       	ldi	r16, 0x00	; 0
 6be:	10 e0       	ldi	r17, 0x00	; 0
 6c0:	89 91       	ld	r24, Y+
 6c2:	60 91 70 02 	lds	r22, 0x0270
 6c6:	70 91 71 02 	lds	r23, 0x0271
 6ca:	db 01       	movw	r26, r22
 6cc:	18 96       	adiw	r26, 0x08	; 8
 6ce:	ed 91       	ld	r30, X+
 6d0:	fc 91       	ld	r31, X
 6d2:	19 97       	sbiw	r26, 0x09	; 9
 6d4:	88 23       	and	r24, r24
 6d6:	31 f0       	breq	.+12     	; 0x6e4 <puts+0x40>
 6d8:	19 95       	eicall
 6da:	89 2b       	or	r24, r25
 6dc:	89 f3       	breq	.-30     	; 0x6c0 <puts+0x1c>
 6de:	0f ef       	ldi	r16, 0xFF	; 255
 6e0:	1f ef       	ldi	r17, 0xFF	; 255
 6e2:	ee cf       	rjmp	.-36     	; 0x6c0 <puts+0x1c>
 6e4:	8a e0       	ldi	r24, 0x0A	; 10
 6e6:	19 95       	eicall
 6e8:	89 2b       	or	r24, r25
 6ea:	11 f4       	brne	.+4      	; 0x6f0 <puts+0x4c>
 6ec:	c8 01       	movw	r24, r16
 6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <puts+0x50>
 6f0:	8f ef       	ldi	r24, 0xFF	; 255
 6f2:	9f ef       	ldi	r25, 0xFF	; 255
 6f4:	df 91       	pop	r29
 6f6:	cf 91       	pop	r28
 6f8:	1f 91       	pop	r17
 6fa:	0f 91       	pop	r16
 6fc:	08 95       	ret

000006fe <vfprintf>:
 6fe:	2f 92       	push	r2
 700:	3f 92       	push	r3
 702:	4f 92       	push	r4
 704:	5f 92       	push	r5
 706:	6f 92       	push	r6
 708:	7f 92       	push	r7
 70a:	8f 92       	push	r8
 70c:	9f 92       	push	r9
 70e:	af 92       	push	r10
 710:	bf 92       	push	r11
 712:	cf 92       	push	r12
 714:	df 92       	push	r13
 716:	ef 92       	push	r14
 718:	ff 92       	push	r15
 71a:	0f 93       	push	r16
 71c:	1f 93       	push	r17
 71e:	cf 93       	push	r28
 720:	df 93       	push	r29
 722:	cd b7       	in	r28, 0x3d	; 61
 724:	de b7       	in	r29, 0x3e	; 62
 726:	2c 97       	sbiw	r28, 0x0c	; 12
 728:	0f b6       	in	r0, 0x3f	; 63
 72a:	f8 94       	cli
 72c:	de bf       	out	0x3e, r29	; 62
 72e:	0f be       	out	0x3f, r0	; 63
 730:	cd bf       	out	0x3d, r28	; 61
 732:	7c 01       	movw	r14, r24
 734:	6b 01       	movw	r12, r22
 736:	8a 01       	movw	r16, r20
 738:	fc 01       	movw	r30, r24
 73a:	17 82       	std	Z+7, r1	; 0x07
 73c:	16 82       	std	Z+6, r1	; 0x06
 73e:	83 81       	ldd	r24, Z+3	; 0x03
 740:	81 ff       	sbrs	r24, 1
 742:	b0 c1       	rjmp	.+864    	; 0xaa4 <vfprintf+0x3a6>
 744:	ce 01       	movw	r24, r28
 746:	01 96       	adiw	r24, 0x01	; 1
 748:	4c 01       	movw	r8, r24
 74a:	f7 01       	movw	r30, r14
 74c:	93 81       	ldd	r25, Z+3	; 0x03
 74e:	f6 01       	movw	r30, r12
 750:	93 fd       	sbrc	r25, 3
 752:	85 91       	lpm	r24, Z+
 754:	93 ff       	sbrs	r25, 3
 756:	81 91       	ld	r24, Z+
 758:	6f 01       	movw	r12, r30
 75a:	88 23       	and	r24, r24
 75c:	09 f4       	brne	.+2      	; 0x760 <vfprintf+0x62>
 75e:	9e c1       	rjmp	.+828    	; 0xa9c <vfprintf+0x39e>
 760:	85 32       	cpi	r24, 0x25	; 37
 762:	39 f4       	brne	.+14     	; 0x772 <vfprintf+0x74>
 764:	93 fd       	sbrc	r25, 3
 766:	85 91       	lpm	r24, Z+
 768:	93 ff       	sbrs	r25, 3
 76a:	81 91       	ld	r24, Z+
 76c:	6f 01       	movw	r12, r30
 76e:	85 32       	cpi	r24, 0x25	; 37
 770:	21 f4       	brne	.+8      	; 0x77a <vfprintf+0x7c>
 772:	b7 01       	movw	r22, r14
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	e8 d1       	rcall	.+976    	; 0xb48 <fputc>
 778:	e8 cf       	rjmp	.-48     	; 0x74a <vfprintf+0x4c>
 77a:	51 2c       	mov	r5, r1
 77c:	31 2c       	mov	r3, r1
 77e:	20 e0       	ldi	r18, 0x00	; 0
 780:	20 32       	cpi	r18, 0x20	; 32
 782:	a0 f4       	brcc	.+40     	; 0x7ac <vfprintf+0xae>
 784:	8b 32       	cpi	r24, 0x2B	; 43
 786:	69 f0       	breq	.+26     	; 0x7a2 <vfprintf+0xa4>
 788:	30 f4       	brcc	.+12     	; 0x796 <vfprintf+0x98>
 78a:	80 32       	cpi	r24, 0x20	; 32
 78c:	59 f0       	breq	.+22     	; 0x7a4 <vfprintf+0xa6>
 78e:	83 32       	cpi	r24, 0x23	; 35
 790:	69 f4       	brne	.+26     	; 0x7ac <vfprintf+0xae>
 792:	20 61       	ori	r18, 0x10	; 16
 794:	2c c0       	rjmp	.+88     	; 0x7ee <vfprintf+0xf0>
 796:	8d 32       	cpi	r24, 0x2D	; 45
 798:	39 f0       	breq	.+14     	; 0x7a8 <vfprintf+0xaa>
 79a:	80 33       	cpi	r24, 0x30	; 48
 79c:	39 f4       	brne	.+14     	; 0x7ac <vfprintf+0xae>
 79e:	21 60       	ori	r18, 0x01	; 1
 7a0:	26 c0       	rjmp	.+76     	; 0x7ee <vfprintf+0xf0>
 7a2:	22 60       	ori	r18, 0x02	; 2
 7a4:	24 60       	ori	r18, 0x04	; 4
 7a6:	23 c0       	rjmp	.+70     	; 0x7ee <vfprintf+0xf0>
 7a8:	28 60       	ori	r18, 0x08	; 8
 7aa:	21 c0       	rjmp	.+66     	; 0x7ee <vfprintf+0xf0>
 7ac:	27 fd       	sbrc	r18, 7
 7ae:	27 c0       	rjmp	.+78     	; 0x7fe <vfprintf+0x100>
 7b0:	30 ed       	ldi	r19, 0xD0	; 208
 7b2:	38 0f       	add	r19, r24
 7b4:	3a 30       	cpi	r19, 0x0A	; 10
 7b6:	78 f4       	brcc	.+30     	; 0x7d6 <vfprintf+0xd8>
 7b8:	26 ff       	sbrs	r18, 6
 7ba:	06 c0       	rjmp	.+12     	; 0x7c8 <vfprintf+0xca>
 7bc:	fa e0       	ldi	r31, 0x0A	; 10
 7be:	5f 9e       	mul	r5, r31
 7c0:	30 0d       	add	r19, r0
 7c2:	11 24       	eor	r1, r1
 7c4:	53 2e       	mov	r5, r19
 7c6:	13 c0       	rjmp	.+38     	; 0x7ee <vfprintf+0xf0>
 7c8:	8a e0       	ldi	r24, 0x0A	; 10
 7ca:	38 9e       	mul	r3, r24
 7cc:	30 0d       	add	r19, r0
 7ce:	11 24       	eor	r1, r1
 7d0:	33 2e       	mov	r3, r19
 7d2:	20 62       	ori	r18, 0x20	; 32
 7d4:	0c c0       	rjmp	.+24     	; 0x7ee <vfprintf+0xf0>
 7d6:	8e 32       	cpi	r24, 0x2E	; 46
 7d8:	21 f4       	brne	.+8      	; 0x7e2 <vfprintf+0xe4>
 7da:	26 fd       	sbrc	r18, 6
 7dc:	5f c1       	rjmp	.+702    	; 0xa9c <vfprintf+0x39e>
 7de:	20 64       	ori	r18, 0x40	; 64
 7e0:	06 c0       	rjmp	.+12     	; 0x7ee <vfprintf+0xf0>
 7e2:	8c 36       	cpi	r24, 0x6C	; 108
 7e4:	11 f4       	brne	.+4      	; 0x7ea <vfprintf+0xec>
 7e6:	20 68       	ori	r18, 0x80	; 128
 7e8:	02 c0       	rjmp	.+4      	; 0x7ee <vfprintf+0xf0>
 7ea:	88 36       	cpi	r24, 0x68	; 104
 7ec:	41 f4       	brne	.+16     	; 0x7fe <vfprintf+0x100>
 7ee:	f6 01       	movw	r30, r12
 7f0:	93 fd       	sbrc	r25, 3
 7f2:	85 91       	lpm	r24, Z+
 7f4:	93 ff       	sbrs	r25, 3
 7f6:	81 91       	ld	r24, Z+
 7f8:	6f 01       	movw	r12, r30
 7fa:	81 11       	cpse	r24, r1
 7fc:	c1 cf       	rjmp	.-126    	; 0x780 <vfprintf+0x82>
 7fe:	98 2f       	mov	r25, r24
 800:	9f 7d       	andi	r25, 0xDF	; 223
 802:	95 54       	subi	r25, 0x45	; 69
 804:	93 30       	cpi	r25, 0x03	; 3
 806:	28 f4       	brcc	.+10     	; 0x812 <vfprintf+0x114>
 808:	0c 5f       	subi	r16, 0xFC	; 252
 80a:	1f 4f       	sbci	r17, 0xFF	; 255
 80c:	ff e3       	ldi	r31, 0x3F	; 63
 80e:	f9 83       	std	Y+1, r31	; 0x01
 810:	0d c0       	rjmp	.+26     	; 0x82c <vfprintf+0x12e>
 812:	83 36       	cpi	r24, 0x63	; 99
 814:	31 f0       	breq	.+12     	; 0x822 <vfprintf+0x124>
 816:	83 37       	cpi	r24, 0x73	; 115
 818:	71 f0       	breq	.+28     	; 0x836 <vfprintf+0x138>
 81a:	83 35       	cpi	r24, 0x53	; 83
 81c:	09 f0       	breq	.+2      	; 0x820 <vfprintf+0x122>
 81e:	57 c0       	rjmp	.+174    	; 0x8ce <vfprintf+0x1d0>
 820:	21 c0       	rjmp	.+66     	; 0x864 <vfprintf+0x166>
 822:	f8 01       	movw	r30, r16
 824:	80 81       	ld	r24, Z
 826:	89 83       	std	Y+1, r24	; 0x01
 828:	0e 5f       	subi	r16, 0xFE	; 254
 82a:	1f 4f       	sbci	r17, 0xFF	; 255
 82c:	44 24       	eor	r4, r4
 82e:	43 94       	inc	r4
 830:	51 2c       	mov	r5, r1
 832:	54 01       	movw	r10, r8
 834:	14 c0       	rjmp	.+40     	; 0x85e <vfprintf+0x160>
 836:	38 01       	movw	r6, r16
 838:	f2 e0       	ldi	r31, 0x02	; 2
 83a:	6f 0e       	add	r6, r31
 83c:	71 1c       	adc	r7, r1
 83e:	f8 01       	movw	r30, r16
 840:	a0 80       	ld	r10, Z
 842:	b1 80       	ldd	r11, Z+1	; 0x01
 844:	26 ff       	sbrs	r18, 6
 846:	03 c0       	rjmp	.+6      	; 0x84e <vfprintf+0x150>
 848:	65 2d       	mov	r22, r5
 84a:	70 e0       	ldi	r23, 0x00	; 0
 84c:	02 c0       	rjmp	.+4      	; 0x852 <vfprintf+0x154>
 84e:	6f ef       	ldi	r22, 0xFF	; 255
 850:	7f ef       	ldi	r23, 0xFF	; 255
 852:	c5 01       	movw	r24, r10
 854:	2c 87       	std	Y+12, r18	; 0x0c
 856:	6d d1       	rcall	.+730    	; 0xb32 <strnlen>
 858:	2c 01       	movw	r4, r24
 85a:	83 01       	movw	r16, r6
 85c:	2c 85       	ldd	r18, Y+12	; 0x0c
 85e:	2f 77       	andi	r18, 0x7F	; 127
 860:	22 2e       	mov	r2, r18
 862:	16 c0       	rjmp	.+44     	; 0x890 <vfprintf+0x192>
 864:	38 01       	movw	r6, r16
 866:	f2 e0       	ldi	r31, 0x02	; 2
 868:	6f 0e       	add	r6, r31
 86a:	71 1c       	adc	r7, r1
 86c:	f8 01       	movw	r30, r16
 86e:	a0 80       	ld	r10, Z
 870:	b1 80       	ldd	r11, Z+1	; 0x01
 872:	26 ff       	sbrs	r18, 6
 874:	03 c0       	rjmp	.+6      	; 0x87c <vfprintf+0x17e>
 876:	65 2d       	mov	r22, r5
 878:	70 e0       	ldi	r23, 0x00	; 0
 87a:	02 c0       	rjmp	.+4      	; 0x880 <vfprintf+0x182>
 87c:	6f ef       	ldi	r22, 0xFF	; 255
 87e:	7f ef       	ldi	r23, 0xFF	; 255
 880:	c5 01       	movw	r24, r10
 882:	2c 87       	std	Y+12, r18	; 0x0c
 884:	44 d1       	rcall	.+648    	; 0xb0e <strnlen_P>
 886:	2c 01       	movw	r4, r24
 888:	2c 85       	ldd	r18, Y+12	; 0x0c
 88a:	20 68       	ori	r18, 0x80	; 128
 88c:	22 2e       	mov	r2, r18
 88e:	83 01       	movw	r16, r6
 890:	23 fc       	sbrc	r2, 3
 892:	19 c0       	rjmp	.+50     	; 0x8c6 <vfprintf+0x1c8>
 894:	83 2d       	mov	r24, r3
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	48 16       	cp	r4, r24
 89a:	59 06       	cpc	r5, r25
 89c:	a0 f4       	brcc	.+40     	; 0x8c6 <vfprintf+0x1c8>
 89e:	b7 01       	movw	r22, r14
 8a0:	80 e2       	ldi	r24, 0x20	; 32
 8a2:	90 e0       	ldi	r25, 0x00	; 0
 8a4:	51 d1       	rcall	.+674    	; 0xb48 <fputc>
 8a6:	3a 94       	dec	r3
 8a8:	f5 cf       	rjmp	.-22     	; 0x894 <vfprintf+0x196>
 8aa:	f5 01       	movw	r30, r10
 8ac:	27 fc       	sbrc	r2, 7
 8ae:	85 91       	lpm	r24, Z+
 8b0:	27 fe       	sbrs	r2, 7
 8b2:	81 91       	ld	r24, Z+
 8b4:	5f 01       	movw	r10, r30
 8b6:	b7 01       	movw	r22, r14
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	46 d1       	rcall	.+652    	; 0xb48 <fputc>
 8bc:	31 10       	cpse	r3, r1
 8be:	3a 94       	dec	r3
 8c0:	f1 e0       	ldi	r31, 0x01	; 1
 8c2:	4f 1a       	sub	r4, r31
 8c4:	51 08       	sbc	r5, r1
 8c6:	41 14       	cp	r4, r1
 8c8:	51 04       	cpc	r5, r1
 8ca:	79 f7       	brne	.-34     	; 0x8aa <vfprintf+0x1ac>
 8cc:	de c0       	rjmp	.+444    	; 0xa8a <vfprintf+0x38c>
 8ce:	84 36       	cpi	r24, 0x64	; 100
 8d0:	11 f0       	breq	.+4      	; 0x8d6 <vfprintf+0x1d8>
 8d2:	89 36       	cpi	r24, 0x69	; 105
 8d4:	31 f5       	brne	.+76     	; 0x922 <vfprintf+0x224>
 8d6:	f8 01       	movw	r30, r16
 8d8:	27 ff       	sbrs	r18, 7
 8da:	07 c0       	rjmp	.+14     	; 0x8ea <vfprintf+0x1ec>
 8dc:	60 81       	ld	r22, Z
 8de:	71 81       	ldd	r23, Z+1	; 0x01
 8e0:	82 81       	ldd	r24, Z+2	; 0x02
 8e2:	93 81       	ldd	r25, Z+3	; 0x03
 8e4:	0c 5f       	subi	r16, 0xFC	; 252
 8e6:	1f 4f       	sbci	r17, 0xFF	; 255
 8e8:	08 c0       	rjmp	.+16     	; 0x8fa <vfprintf+0x1fc>
 8ea:	60 81       	ld	r22, Z
 8ec:	71 81       	ldd	r23, Z+1	; 0x01
 8ee:	88 27       	eor	r24, r24
 8f0:	77 fd       	sbrc	r23, 7
 8f2:	80 95       	com	r24
 8f4:	98 2f       	mov	r25, r24
 8f6:	0e 5f       	subi	r16, 0xFE	; 254
 8f8:	1f 4f       	sbci	r17, 0xFF	; 255
 8fa:	2f 76       	andi	r18, 0x6F	; 111
 8fc:	b2 2e       	mov	r11, r18
 8fe:	97 ff       	sbrs	r25, 7
 900:	09 c0       	rjmp	.+18     	; 0x914 <vfprintf+0x216>
 902:	90 95       	com	r25
 904:	80 95       	com	r24
 906:	70 95       	com	r23
 908:	61 95       	neg	r22
 90a:	7f 4f       	sbci	r23, 0xFF	; 255
 90c:	8f 4f       	sbci	r24, 0xFF	; 255
 90e:	9f 4f       	sbci	r25, 0xFF	; 255
 910:	20 68       	ori	r18, 0x80	; 128
 912:	b2 2e       	mov	r11, r18
 914:	2a e0       	ldi	r18, 0x0A	; 10
 916:	30 e0       	ldi	r19, 0x00	; 0
 918:	a4 01       	movw	r20, r8
 91a:	48 d1       	rcall	.+656    	; 0xbac <__ultoa_invert>
 91c:	a8 2e       	mov	r10, r24
 91e:	a8 18       	sub	r10, r8
 920:	43 c0       	rjmp	.+134    	; 0x9a8 <vfprintf+0x2aa>
 922:	85 37       	cpi	r24, 0x75	; 117
 924:	29 f4       	brne	.+10     	; 0x930 <vfprintf+0x232>
 926:	2f 7e       	andi	r18, 0xEF	; 239
 928:	b2 2e       	mov	r11, r18
 92a:	2a e0       	ldi	r18, 0x0A	; 10
 92c:	30 e0       	ldi	r19, 0x00	; 0
 92e:	25 c0       	rjmp	.+74     	; 0x97a <vfprintf+0x27c>
 930:	f2 2f       	mov	r31, r18
 932:	f9 7f       	andi	r31, 0xF9	; 249
 934:	bf 2e       	mov	r11, r31
 936:	8f 36       	cpi	r24, 0x6F	; 111
 938:	c1 f0       	breq	.+48     	; 0x96a <vfprintf+0x26c>
 93a:	18 f4       	brcc	.+6      	; 0x942 <vfprintf+0x244>
 93c:	88 35       	cpi	r24, 0x58	; 88
 93e:	79 f0       	breq	.+30     	; 0x95e <vfprintf+0x260>
 940:	ad c0       	rjmp	.+346    	; 0xa9c <vfprintf+0x39e>
 942:	80 37       	cpi	r24, 0x70	; 112
 944:	19 f0       	breq	.+6      	; 0x94c <vfprintf+0x24e>
 946:	88 37       	cpi	r24, 0x78	; 120
 948:	21 f0       	breq	.+8      	; 0x952 <vfprintf+0x254>
 94a:	a8 c0       	rjmp	.+336    	; 0xa9c <vfprintf+0x39e>
 94c:	2f 2f       	mov	r18, r31
 94e:	20 61       	ori	r18, 0x10	; 16
 950:	b2 2e       	mov	r11, r18
 952:	b4 fe       	sbrs	r11, 4
 954:	0d c0       	rjmp	.+26     	; 0x970 <vfprintf+0x272>
 956:	8b 2d       	mov	r24, r11
 958:	84 60       	ori	r24, 0x04	; 4
 95a:	b8 2e       	mov	r11, r24
 95c:	09 c0       	rjmp	.+18     	; 0x970 <vfprintf+0x272>
 95e:	24 ff       	sbrs	r18, 4
 960:	0a c0       	rjmp	.+20     	; 0x976 <vfprintf+0x278>
 962:	9f 2f       	mov	r25, r31
 964:	96 60       	ori	r25, 0x06	; 6
 966:	b9 2e       	mov	r11, r25
 968:	06 c0       	rjmp	.+12     	; 0x976 <vfprintf+0x278>
 96a:	28 e0       	ldi	r18, 0x08	; 8
 96c:	30 e0       	ldi	r19, 0x00	; 0
 96e:	05 c0       	rjmp	.+10     	; 0x97a <vfprintf+0x27c>
 970:	20 e1       	ldi	r18, 0x10	; 16
 972:	30 e0       	ldi	r19, 0x00	; 0
 974:	02 c0       	rjmp	.+4      	; 0x97a <vfprintf+0x27c>
 976:	20 e1       	ldi	r18, 0x10	; 16
 978:	32 e0       	ldi	r19, 0x02	; 2
 97a:	f8 01       	movw	r30, r16
 97c:	b7 fe       	sbrs	r11, 7
 97e:	07 c0       	rjmp	.+14     	; 0x98e <vfprintf+0x290>
 980:	60 81       	ld	r22, Z
 982:	71 81       	ldd	r23, Z+1	; 0x01
 984:	82 81       	ldd	r24, Z+2	; 0x02
 986:	93 81       	ldd	r25, Z+3	; 0x03
 988:	0c 5f       	subi	r16, 0xFC	; 252
 98a:	1f 4f       	sbci	r17, 0xFF	; 255
 98c:	06 c0       	rjmp	.+12     	; 0x99a <vfprintf+0x29c>
 98e:	60 81       	ld	r22, Z
 990:	71 81       	ldd	r23, Z+1	; 0x01
 992:	80 e0       	ldi	r24, 0x00	; 0
 994:	90 e0       	ldi	r25, 0x00	; 0
 996:	0e 5f       	subi	r16, 0xFE	; 254
 998:	1f 4f       	sbci	r17, 0xFF	; 255
 99a:	a4 01       	movw	r20, r8
 99c:	07 d1       	rcall	.+526    	; 0xbac <__ultoa_invert>
 99e:	a8 2e       	mov	r10, r24
 9a0:	a8 18       	sub	r10, r8
 9a2:	fb 2d       	mov	r31, r11
 9a4:	ff 77       	andi	r31, 0x7F	; 127
 9a6:	bf 2e       	mov	r11, r31
 9a8:	b6 fe       	sbrs	r11, 6
 9aa:	0b c0       	rjmp	.+22     	; 0x9c2 <vfprintf+0x2c4>
 9ac:	2b 2d       	mov	r18, r11
 9ae:	2e 7f       	andi	r18, 0xFE	; 254
 9b0:	a5 14       	cp	r10, r5
 9b2:	50 f4       	brcc	.+20     	; 0x9c8 <vfprintf+0x2ca>
 9b4:	b4 fe       	sbrs	r11, 4
 9b6:	0a c0       	rjmp	.+20     	; 0x9cc <vfprintf+0x2ce>
 9b8:	b2 fc       	sbrc	r11, 2
 9ba:	08 c0       	rjmp	.+16     	; 0x9cc <vfprintf+0x2ce>
 9bc:	2b 2d       	mov	r18, r11
 9be:	2e 7e       	andi	r18, 0xEE	; 238
 9c0:	05 c0       	rjmp	.+10     	; 0x9cc <vfprintf+0x2ce>
 9c2:	7a 2c       	mov	r7, r10
 9c4:	2b 2d       	mov	r18, r11
 9c6:	03 c0       	rjmp	.+6      	; 0x9ce <vfprintf+0x2d0>
 9c8:	7a 2c       	mov	r7, r10
 9ca:	01 c0       	rjmp	.+2      	; 0x9ce <vfprintf+0x2d0>
 9cc:	75 2c       	mov	r7, r5
 9ce:	24 ff       	sbrs	r18, 4
 9d0:	0d c0       	rjmp	.+26     	; 0x9ec <vfprintf+0x2ee>
 9d2:	fe 01       	movw	r30, r28
 9d4:	ea 0d       	add	r30, r10
 9d6:	f1 1d       	adc	r31, r1
 9d8:	80 81       	ld	r24, Z
 9da:	80 33       	cpi	r24, 0x30	; 48
 9dc:	11 f4       	brne	.+4      	; 0x9e2 <vfprintf+0x2e4>
 9de:	29 7e       	andi	r18, 0xE9	; 233
 9e0:	09 c0       	rjmp	.+18     	; 0x9f4 <vfprintf+0x2f6>
 9e2:	22 ff       	sbrs	r18, 2
 9e4:	06 c0       	rjmp	.+12     	; 0x9f2 <vfprintf+0x2f4>
 9e6:	73 94       	inc	r7
 9e8:	73 94       	inc	r7
 9ea:	04 c0       	rjmp	.+8      	; 0x9f4 <vfprintf+0x2f6>
 9ec:	82 2f       	mov	r24, r18
 9ee:	86 78       	andi	r24, 0x86	; 134
 9f0:	09 f0       	breq	.+2      	; 0x9f4 <vfprintf+0x2f6>
 9f2:	73 94       	inc	r7
 9f4:	23 fd       	sbrc	r18, 3
 9f6:	12 c0       	rjmp	.+36     	; 0xa1c <vfprintf+0x31e>
 9f8:	20 ff       	sbrs	r18, 0
 9fa:	06 c0       	rjmp	.+12     	; 0xa08 <vfprintf+0x30a>
 9fc:	5a 2c       	mov	r5, r10
 9fe:	73 14       	cp	r7, r3
 a00:	18 f4       	brcc	.+6      	; 0xa08 <vfprintf+0x30a>
 a02:	53 0c       	add	r5, r3
 a04:	57 18       	sub	r5, r7
 a06:	73 2c       	mov	r7, r3
 a08:	73 14       	cp	r7, r3
 a0a:	60 f4       	brcc	.+24     	; 0xa24 <vfprintf+0x326>
 a0c:	b7 01       	movw	r22, r14
 a0e:	80 e2       	ldi	r24, 0x20	; 32
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	2c 87       	std	Y+12, r18	; 0x0c
 a14:	99 d0       	rcall	.+306    	; 0xb48 <fputc>
 a16:	73 94       	inc	r7
 a18:	2c 85       	ldd	r18, Y+12	; 0x0c
 a1a:	f6 cf       	rjmp	.-20     	; 0xa08 <vfprintf+0x30a>
 a1c:	73 14       	cp	r7, r3
 a1e:	10 f4       	brcc	.+4      	; 0xa24 <vfprintf+0x326>
 a20:	37 18       	sub	r3, r7
 a22:	01 c0       	rjmp	.+2      	; 0xa26 <vfprintf+0x328>
 a24:	31 2c       	mov	r3, r1
 a26:	24 ff       	sbrs	r18, 4
 a28:	11 c0       	rjmp	.+34     	; 0xa4c <vfprintf+0x34e>
 a2a:	b7 01       	movw	r22, r14
 a2c:	80 e3       	ldi	r24, 0x30	; 48
 a2e:	90 e0       	ldi	r25, 0x00	; 0
 a30:	2c 87       	std	Y+12, r18	; 0x0c
 a32:	8a d0       	rcall	.+276    	; 0xb48 <fputc>
 a34:	2c 85       	ldd	r18, Y+12	; 0x0c
 a36:	22 ff       	sbrs	r18, 2
 a38:	16 c0       	rjmp	.+44     	; 0xa66 <vfprintf+0x368>
 a3a:	21 ff       	sbrs	r18, 1
 a3c:	03 c0       	rjmp	.+6      	; 0xa44 <vfprintf+0x346>
 a3e:	88 e5       	ldi	r24, 0x58	; 88
 a40:	90 e0       	ldi	r25, 0x00	; 0
 a42:	02 c0       	rjmp	.+4      	; 0xa48 <vfprintf+0x34a>
 a44:	88 e7       	ldi	r24, 0x78	; 120
 a46:	90 e0       	ldi	r25, 0x00	; 0
 a48:	b7 01       	movw	r22, r14
 a4a:	0c c0       	rjmp	.+24     	; 0xa64 <vfprintf+0x366>
 a4c:	82 2f       	mov	r24, r18
 a4e:	86 78       	andi	r24, 0x86	; 134
 a50:	51 f0       	breq	.+20     	; 0xa66 <vfprintf+0x368>
 a52:	21 fd       	sbrc	r18, 1
 a54:	02 c0       	rjmp	.+4      	; 0xa5a <vfprintf+0x35c>
 a56:	80 e2       	ldi	r24, 0x20	; 32
 a58:	01 c0       	rjmp	.+2      	; 0xa5c <vfprintf+0x35e>
 a5a:	8b e2       	ldi	r24, 0x2B	; 43
 a5c:	27 fd       	sbrc	r18, 7
 a5e:	8d e2       	ldi	r24, 0x2D	; 45
 a60:	b7 01       	movw	r22, r14
 a62:	90 e0       	ldi	r25, 0x00	; 0
 a64:	71 d0       	rcall	.+226    	; 0xb48 <fputc>
 a66:	a5 14       	cp	r10, r5
 a68:	30 f4       	brcc	.+12     	; 0xa76 <vfprintf+0x378>
 a6a:	b7 01       	movw	r22, r14
 a6c:	80 e3       	ldi	r24, 0x30	; 48
 a6e:	90 e0       	ldi	r25, 0x00	; 0
 a70:	6b d0       	rcall	.+214    	; 0xb48 <fputc>
 a72:	5a 94       	dec	r5
 a74:	f8 cf       	rjmp	.-16     	; 0xa66 <vfprintf+0x368>
 a76:	aa 94       	dec	r10
 a78:	f4 01       	movw	r30, r8
 a7a:	ea 0d       	add	r30, r10
 a7c:	f1 1d       	adc	r31, r1
 a7e:	80 81       	ld	r24, Z
 a80:	b7 01       	movw	r22, r14
 a82:	90 e0       	ldi	r25, 0x00	; 0
 a84:	61 d0       	rcall	.+194    	; 0xb48 <fputc>
 a86:	a1 10       	cpse	r10, r1
 a88:	f6 cf       	rjmp	.-20     	; 0xa76 <vfprintf+0x378>
 a8a:	33 20       	and	r3, r3
 a8c:	09 f4       	brne	.+2      	; 0xa90 <vfprintf+0x392>
 a8e:	5d ce       	rjmp	.-838    	; 0x74a <vfprintf+0x4c>
 a90:	b7 01       	movw	r22, r14
 a92:	80 e2       	ldi	r24, 0x20	; 32
 a94:	90 e0       	ldi	r25, 0x00	; 0
 a96:	58 d0       	rcall	.+176    	; 0xb48 <fputc>
 a98:	3a 94       	dec	r3
 a9a:	f7 cf       	rjmp	.-18     	; 0xa8a <vfprintf+0x38c>
 a9c:	f7 01       	movw	r30, r14
 a9e:	86 81       	ldd	r24, Z+6	; 0x06
 aa0:	97 81       	ldd	r25, Z+7	; 0x07
 aa2:	02 c0       	rjmp	.+4      	; 0xaa8 <vfprintf+0x3aa>
 aa4:	8f ef       	ldi	r24, 0xFF	; 255
 aa6:	9f ef       	ldi	r25, 0xFF	; 255
 aa8:	2c 96       	adiw	r28, 0x0c	; 12
 aaa:	0f b6       	in	r0, 0x3f	; 63
 aac:	f8 94       	cli
 aae:	de bf       	out	0x3e, r29	; 62
 ab0:	0f be       	out	0x3f, r0	; 63
 ab2:	cd bf       	out	0x3d, r28	; 61
 ab4:	df 91       	pop	r29
 ab6:	cf 91       	pop	r28
 ab8:	1f 91       	pop	r17
 aba:	0f 91       	pop	r16
 abc:	ff 90       	pop	r15
 abe:	ef 90       	pop	r14
 ac0:	df 90       	pop	r13
 ac2:	cf 90       	pop	r12
 ac4:	bf 90       	pop	r11
 ac6:	af 90       	pop	r10
 ac8:	9f 90       	pop	r9
 aca:	8f 90       	pop	r8
 acc:	7f 90       	pop	r7
 ace:	6f 90       	pop	r6
 ad0:	5f 90       	pop	r5
 ad2:	4f 90       	pop	r4
 ad4:	3f 90       	pop	r3
 ad6:	2f 90       	pop	r2
 ad8:	08 95       	ret

00000ada <calloc>:
 ada:	0f 93       	push	r16
 adc:	1f 93       	push	r17
 ade:	cf 93       	push	r28
 ae0:	df 93       	push	r29
 ae2:	86 9f       	mul	r24, r22
 ae4:	80 01       	movw	r16, r0
 ae6:	87 9f       	mul	r24, r23
 ae8:	10 0d       	add	r17, r0
 aea:	96 9f       	mul	r25, r22
 aec:	10 0d       	add	r17, r0
 aee:	11 24       	eor	r1, r1
 af0:	c8 01       	movw	r24, r16
 af2:	56 dc       	rcall	.-1876   	; 0x3a0 <malloc>
 af4:	ec 01       	movw	r28, r24
 af6:	00 97       	sbiw	r24, 0x00	; 0
 af8:	21 f0       	breq	.+8      	; 0xb02 <calloc+0x28>
 afa:	a8 01       	movw	r20, r16
 afc:	60 e0       	ldi	r22, 0x00	; 0
 afe:	70 e0       	ldi	r23, 0x00	; 0
 b00:	11 d0       	rcall	.+34     	; 0xb24 <memset>
 b02:	ce 01       	movw	r24, r28
 b04:	df 91       	pop	r29
 b06:	cf 91       	pop	r28
 b08:	1f 91       	pop	r17
 b0a:	0f 91       	pop	r16
 b0c:	08 95       	ret

00000b0e <strnlen_P>:
 b0e:	fc 01       	movw	r30, r24
 b10:	05 90       	lpm	r0, Z+
 b12:	61 50       	subi	r22, 0x01	; 1
 b14:	70 40       	sbci	r23, 0x00	; 0
 b16:	01 10       	cpse	r0, r1
 b18:	d8 f7       	brcc	.-10     	; 0xb10 <strnlen_P+0x2>
 b1a:	80 95       	com	r24
 b1c:	90 95       	com	r25
 b1e:	8e 0f       	add	r24, r30
 b20:	9f 1f       	adc	r25, r31
 b22:	08 95       	ret

00000b24 <memset>:
 b24:	dc 01       	movw	r26, r24
 b26:	01 c0       	rjmp	.+2      	; 0xb2a <memset+0x6>
 b28:	6d 93       	st	X+, r22
 b2a:	41 50       	subi	r20, 0x01	; 1
 b2c:	50 40       	sbci	r21, 0x00	; 0
 b2e:	e0 f7       	brcc	.-8      	; 0xb28 <memset+0x4>
 b30:	08 95       	ret

00000b32 <strnlen>:
 b32:	fc 01       	movw	r30, r24
 b34:	61 50       	subi	r22, 0x01	; 1
 b36:	70 40       	sbci	r23, 0x00	; 0
 b38:	01 90       	ld	r0, Z+
 b3a:	01 10       	cpse	r0, r1
 b3c:	d8 f7       	brcc	.-10     	; 0xb34 <strnlen+0x2>
 b3e:	80 95       	com	r24
 b40:	90 95       	com	r25
 b42:	8e 0f       	add	r24, r30
 b44:	9f 1f       	adc	r25, r31
 b46:	08 95       	ret

00000b48 <fputc>:
 b48:	0f 93       	push	r16
 b4a:	1f 93       	push	r17
 b4c:	cf 93       	push	r28
 b4e:	df 93       	push	r29
 b50:	18 2f       	mov	r17, r24
 b52:	09 2f       	mov	r16, r25
 b54:	eb 01       	movw	r28, r22
 b56:	8b 81       	ldd	r24, Y+3	; 0x03
 b58:	81 fd       	sbrc	r24, 1
 b5a:	03 c0       	rjmp	.+6      	; 0xb62 <fputc+0x1a>
 b5c:	8f ef       	ldi	r24, 0xFF	; 255
 b5e:	9f ef       	ldi	r25, 0xFF	; 255
 b60:	20 c0       	rjmp	.+64     	; 0xba2 <fputc+0x5a>
 b62:	82 ff       	sbrs	r24, 2
 b64:	10 c0       	rjmp	.+32     	; 0xb86 <fputc+0x3e>
 b66:	4e 81       	ldd	r20, Y+6	; 0x06
 b68:	5f 81       	ldd	r21, Y+7	; 0x07
 b6a:	2c 81       	ldd	r18, Y+4	; 0x04
 b6c:	3d 81       	ldd	r19, Y+5	; 0x05
 b6e:	42 17       	cp	r20, r18
 b70:	53 07       	cpc	r21, r19
 b72:	7c f4       	brge	.+30     	; 0xb92 <fputc+0x4a>
 b74:	e8 81       	ld	r30, Y
 b76:	f9 81       	ldd	r31, Y+1	; 0x01
 b78:	9f 01       	movw	r18, r30
 b7a:	2f 5f       	subi	r18, 0xFF	; 255
 b7c:	3f 4f       	sbci	r19, 0xFF	; 255
 b7e:	39 83       	std	Y+1, r19	; 0x01
 b80:	28 83       	st	Y, r18
 b82:	10 83       	st	Z, r17
 b84:	06 c0       	rjmp	.+12     	; 0xb92 <fputc+0x4a>
 b86:	e8 85       	ldd	r30, Y+8	; 0x08
 b88:	f9 85       	ldd	r31, Y+9	; 0x09
 b8a:	81 2f       	mov	r24, r17
 b8c:	19 95       	eicall
 b8e:	89 2b       	or	r24, r25
 b90:	29 f7       	brne	.-54     	; 0xb5c <fputc+0x14>
 b92:	2e 81       	ldd	r18, Y+6	; 0x06
 b94:	3f 81       	ldd	r19, Y+7	; 0x07
 b96:	2f 5f       	subi	r18, 0xFF	; 255
 b98:	3f 4f       	sbci	r19, 0xFF	; 255
 b9a:	3f 83       	std	Y+7, r19	; 0x07
 b9c:	2e 83       	std	Y+6, r18	; 0x06
 b9e:	81 2f       	mov	r24, r17
 ba0:	90 2f       	mov	r25, r16
 ba2:	df 91       	pop	r29
 ba4:	cf 91       	pop	r28
 ba6:	1f 91       	pop	r17
 ba8:	0f 91       	pop	r16
 baa:	08 95       	ret

00000bac <__ultoa_invert>:
 bac:	fa 01       	movw	r30, r20
 bae:	aa 27       	eor	r26, r26
 bb0:	28 30       	cpi	r18, 0x08	; 8
 bb2:	51 f1       	breq	.+84     	; 0xc08 <__ultoa_invert+0x5c>
 bb4:	20 31       	cpi	r18, 0x10	; 16
 bb6:	81 f1       	breq	.+96     	; 0xc18 <__ultoa_invert+0x6c>
 bb8:	e8 94       	clt
 bba:	6f 93       	push	r22
 bbc:	6e 7f       	andi	r22, 0xFE	; 254
 bbe:	6e 5f       	subi	r22, 0xFE	; 254
 bc0:	7f 4f       	sbci	r23, 0xFF	; 255
 bc2:	8f 4f       	sbci	r24, 0xFF	; 255
 bc4:	9f 4f       	sbci	r25, 0xFF	; 255
 bc6:	af 4f       	sbci	r26, 0xFF	; 255
 bc8:	b1 e0       	ldi	r27, 0x01	; 1
 bca:	3e d0       	rcall	.+124    	; 0xc48 <__ultoa_invert+0x9c>
 bcc:	b4 e0       	ldi	r27, 0x04	; 4
 bce:	3c d0       	rcall	.+120    	; 0xc48 <__ultoa_invert+0x9c>
 bd0:	67 0f       	add	r22, r23
 bd2:	78 1f       	adc	r23, r24
 bd4:	89 1f       	adc	r24, r25
 bd6:	9a 1f       	adc	r25, r26
 bd8:	a1 1d       	adc	r26, r1
 bda:	68 0f       	add	r22, r24
 bdc:	79 1f       	adc	r23, r25
 bde:	8a 1f       	adc	r24, r26
 be0:	91 1d       	adc	r25, r1
 be2:	a1 1d       	adc	r26, r1
 be4:	6a 0f       	add	r22, r26
 be6:	71 1d       	adc	r23, r1
 be8:	81 1d       	adc	r24, r1
 bea:	91 1d       	adc	r25, r1
 bec:	a1 1d       	adc	r26, r1
 bee:	20 d0       	rcall	.+64     	; 0xc30 <__ultoa_invert+0x84>
 bf0:	09 f4       	brne	.+2      	; 0xbf4 <__ultoa_invert+0x48>
 bf2:	68 94       	set
 bf4:	3f 91       	pop	r19
 bf6:	2a e0       	ldi	r18, 0x0A	; 10
 bf8:	26 9f       	mul	r18, r22
 bfa:	11 24       	eor	r1, r1
 bfc:	30 19       	sub	r19, r0
 bfe:	30 5d       	subi	r19, 0xD0	; 208
 c00:	31 93       	st	Z+, r19
 c02:	de f6       	brtc	.-74     	; 0xbba <__ultoa_invert+0xe>
 c04:	cf 01       	movw	r24, r30
 c06:	08 95       	ret
 c08:	46 2f       	mov	r20, r22
 c0a:	47 70       	andi	r20, 0x07	; 7
 c0c:	40 5d       	subi	r20, 0xD0	; 208
 c0e:	41 93       	st	Z+, r20
 c10:	b3 e0       	ldi	r27, 0x03	; 3
 c12:	0f d0       	rcall	.+30     	; 0xc32 <__ultoa_invert+0x86>
 c14:	c9 f7       	brne	.-14     	; 0xc08 <__ultoa_invert+0x5c>
 c16:	f6 cf       	rjmp	.-20     	; 0xc04 <__ultoa_invert+0x58>
 c18:	46 2f       	mov	r20, r22
 c1a:	4f 70       	andi	r20, 0x0F	; 15
 c1c:	40 5d       	subi	r20, 0xD0	; 208
 c1e:	4a 33       	cpi	r20, 0x3A	; 58
 c20:	18 f0       	brcs	.+6      	; 0xc28 <__ultoa_invert+0x7c>
 c22:	49 5d       	subi	r20, 0xD9	; 217
 c24:	31 fd       	sbrc	r19, 1
 c26:	40 52       	subi	r20, 0x20	; 32
 c28:	41 93       	st	Z+, r20
 c2a:	02 d0       	rcall	.+4      	; 0xc30 <__ultoa_invert+0x84>
 c2c:	a9 f7       	brne	.-22     	; 0xc18 <__ultoa_invert+0x6c>
 c2e:	ea cf       	rjmp	.-44     	; 0xc04 <__ultoa_invert+0x58>
 c30:	b4 e0       	ldi	r27, 0x04	; 4
 c32:	a6 95       	lsr	r26
 c34:	97 95       	ror	r25
 c36:	87 95       	ror	r24
 c38:	77 95       	ror	r23
 c3a:	67 95       	ror	r22
 c3c:	ba 95       	dec	r27
 c3e:	c9 f7       	brne	.-14     	; 0xc32 <__ultoa_invert+0x86>
 c40:	00 97       	sbiw	r24, 0x00	; 0
 c42:	61 05       	cpc	r22, r1
 c44:	71 05       	cpc	r23, r1
 c46:	08 95       	ret
 c48:	9b 01       	movw	r18, r22
 c4a:	ac 01       	movw	r20, r24
 c4c:	0a 2e       	mov	r0, r26
 c4e:	06 94       	lsr	r0
 c50:	57 95       	ror	r21
 c52:	47 95       	ror	r20
 c54:	37 95       	ror	r19
 c56:	27 95       	ror	r18
 c58:	ba 95       	dec	r27
 c5a:	c9 f7       	brne	.-14     	; 0xc4e <__ultoa_invert+0xa2>
 c5c:	62 0f       	add	r22, r18
 c5e:	73 1f       	adc	r23, r19
 c60:	84 1f       	adc	r24, r20
 c62:	95 1f       	adc	r25, r21
 c64:	a0 1d       	adc	r26, r0
 c66:	08 95       	ret

00000c68 <_exit>:
 c68:	f8 94       	cli

00000c6a <__stop_program>:
 c6a:	ff cf       	rjmp	.-2      	; 0xc6a <__stop_program>
