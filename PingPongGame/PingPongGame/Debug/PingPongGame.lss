
PingPongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000c14  00000ca8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c14  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800114  00800114  00000cbc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cbc  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001a8  00000000  00000000  00000d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001d0a  00000000  00000000  00000ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a29  00000000  00000000  00002bca  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b76  00000000  00000000  000035f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000045c  00000000  00000000  0000416c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000547  00000000  00000000  000045c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000115a  00000000  00000000  00004b0f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000138  00000000  00000000  00005c69  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e4 e1       	ldi	r30, 0x14	; 20
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a4 31       	cpi	r26, 0x14	; 20
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a4 e1       	ldi	r26, 0x14	; 20
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 32       	cpi	r26, 0x20	; 32
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 35 01 	call	0x26a	; 0x26a <main>
  a6:	0c 94 08 06 	jmp	0xc10	; 0xc10 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <read_adc>:

uint8_t read_adc(int channel)
{
	volatile uint8_t *ADC = (uint8_t*)0x1400;
	uint8_t mux_adress = channel;
	ADC[0] = mux_adress;
  ae:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b2:	86 e6       	ldi	r24, 0x66	; 102
  b4:	92 e0       	ldi	r25, 0x02	; 2
  b6:	01 97       	sbiw	r24, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <read_adc+0x8>
  ba:	00 00       	nop
	_delay_us(500);
	uint8_t val = ADC[0];
  bc:	80 91 00 14 	lds	r24, 0x1400
	return val;
  c0:	08 95       	ret

000000c2 <CAN_init>:

void CAN_init(void)
{
		/*SPI_MasterInit();
		SPI_SlaveInit();*/
		MCP_reset();
  c2:	0e 94 41 01 	call	0x282	; 0x282 <MCP_reset>
  c6:	82 e5       	ldi	r24, 0x52	; 82
  c8:	8a 95       	dec	r24
  ca:	f1 f7       	brne	.-4      	; 0xc8 <CAN_init+0x6>
		_delay_us(50);

		MCP_write(MCP_CANCTRL, MODE_CONFIG);		
  cc:	60 e8       	ldi	r22, 0x80	; 128
  ce:	8f e0       	ldi	r24, 0x0F	; 15
  d0:	0e 94 5e 01 	call	0x2bc	; 0x2bc <MCP_write>

		/*MCP_write(MCP_CNF1, 0x20); // Write config 1
		MCP_write(MCP_CNF2, 0x92); // Write config 2
		MCP_write(MCP_CNF3, 0xC2); // Write config 3*/
		
		MCP_write(MCP_CANINTE, 0x03);	//
  d4:	63 e0       	ldi	r22, 0x03	; 3
  d6:	8b e2       	ldi	r24, 0x2B	; 43
  d8:	0e 94 5e 01 	call	0x2bc	; 0x2bc <MCP_write>
		MCP_write(MCP_CANINTF, 0x00);	//
  dc:	60 e0       	ldi	r22, 0x00	; 0
  de:	8c e2       	ldi	r24, 0x2C	; 44
  e0:	0e 94 5e 01 	call	0x2bc	; 0x2bc <MCP_write>
		MCP_write(MCP_EFLG, 0x00);		//
  e4:	60 e0       	ldi	r22, 0x00	; 0
  e6:	8d e2       	ldi	r24, 0x2D	; 45
  e8:	0e 94 5e 01 	call	0x2bc	; 0x2bc <MCP_write>
		
		MCP_write(0x0C, 0x00);			 // Disable all interrupts
  ec:	60 e0       	ldi	r22, 0x00	; 0
  ee:	8c e0       	ldi	r24, 0x0C	; 12
  f0:	0e 94 5e 01 	call	0x2bc	; 0x2bc <MCP_write>
		MCP_write(0x0D, 0x00);			// Clear TXRTSCTRL
  f4:	60 e0       	ldi	r22, 0x00	; 0
  f6:	8d e0       	ldi	r24, 0x0D	; 13
  f8:	0e 94 5e 01 	call	0x2bc	; 0x2bc <MCP_write>
		
		
		MCP_write(MCP_RXB0CTRL, 0x60);		// Receive buffer 0 control (turn mask/filters off, receive any message) 
  fc:	60 e6       	ldi	r22, 0x60	; 96
  fe:	80 e6       	ldi	r24, 0x60	; 96
 100:	0e 94 5e 01 	call	0x2bc	; 0x2bc <MCP_write>
		MCP_write(MCP_RXB1CTRL, 0x60);		// Receive buffer 1 control (turn mask/filters off, receive any message)
 104:	60 e6       	ldi	r22, 0x60	; 96
 106:	80 e7       	ldi	r24, 0x70	; 112
 108:	0e 94 5e 01 	call	0x2bc	; 0x2bc <MCP_write>

		//MCP_write(MCP_CANCTRL, 0x44);		// Enable can controller
		//MCP_bit_mod(MCP_CANCTRL,MODE_MASK,MODE_NORMAL);
		MCP_write(MCP_CANCTRL,MODE_NORMAL);
 10c:	60 e0       	ldi	r22, 0x00	; 0
 10e:	8f e0       	ldi	r24, 0x0F	; 15
 110:	0e 94 5e 01 	call	0x2bc	; 0x2bc <MCP_write>
 114:	08 95       	ret

00000116 <CAN_message_send>:
		
	
}

void CAN_message_send(msg can_tx)
{
 116:	cf 92       	push	r12
 118:	df 92       	push	r13
 11a:	ef 92       	push	r14
 11c:	ff 92       	push	r15
 11e:	0f 93       	push	r16
 120:	1f 93       	push	r17
 122:	cf 93       	push	r28
 124:	df 93       	push	r29
 126:	cd b7       	in	r28, 0x3d	; 61
 128:	de b7       	in	r29, 0x3e	; 62
 12a:	2b 97       	sbiw	r28, 0x0b	; 11
 12c:	0f b6       	in	r0, 0x3f	; 63
 12e:	f8 94       	cli
 130:	de bf       	out	0x3e, r29	; 62
 132:	0f be       	out	0x3f, r0	; 63
 134:	cd bf       	out	0x3d, r28	; 61
 136:	e9 82       	std	Y+1, r14	; 0x01
 138:	fa 82       	std	Y+2, r15	; 0x02
 13a:	0b 83       	std	Y+3, r16	; 0x03
 13c:	1c 83       	std	Y+4, r17	; 0x04
 13e:	2d 83       	std	Y+5, r18	; 0x05
 140:	3e 83       	std	Y+6, r19	; 0x06
 142:	4f 83       	std	Y+7, r20	; 0x07
 144:	58 87       	std	Y+8, r21	; 0x08
 146:	69 87       	std	Y+9, r22	; 0x09
 148:	7a 87       	std	Y+10, r23	; 0x0a
 14a:	8b 87       	std	Y+11, r24	; 0x0b
	//MCP_write(MCP_TXB0CTRL, 0x03);				
	
	MCP_write(MCP_TXB0SIDH, can_tx.id);
 14c:	6e 2d       	mov	r22, r14
 14e:	81 e3       	ldi	r24, 0x31	; 49
 150:	0e 94 5e 01 	call	0x2bc	; 0x2bc <MCP_write>
	MCP_write(MCP_TXB0SIDH, can_tx.id);
 154:	6e 2d       	mov	r22, r14
 156:	81 e3       	ldi	r24, 0x31	; 49
 158:	0e 94 5e 01 	call	0x2bc	; 0x2bc <MCP_write>

	//MCP_write(MCP_TXB0SIDL, can_tx.id);

	MCP_write(MCP_TXB0DLC, (can_tx.length));
 15c:	60 2f       	mov	r22, r16
 15e:	85 e3       	ldi	r24, 0x35	; 53
 160:	0e 94 5e 01 	call	0x2bc	; 0x2bc <MCP_write>
	for(int i = 0; i < can_tx.length; i++)
 164:	c0 2e       	mov	r12, r16
 166:	d1 2c       	mov	r13, r1
 168:	1c 14       	cp	r1, r12
 16a:	1d 04       	cpc	r1, r13
 16c:	94 f4       	brge	.+36     	; 0x192 <CAN_message_send+0x7c>
 16e:	7e 01       	movw	r14, r28
 170:	84 e0       	ldi	r24, 0x04	; 4
 172:	e8 0e       	add	r14, r24
 174:	f1 1c       	adc	r15, r1
 176:	00 e0       	ldi	r16, 0x00	; 0
 178:	10 e0       	ldi	r17, 0x00	; 0
	{
		MCP_write(MCP_TXB0D0 + i, can_tx.data[i]);
 17a:	f7 01       	movw	r30, r14
 17c:	61 91       	ld	r22, Z+
 17e:	7f 01       	movw	r14, r30
 180:	86 e3       	ldi	r24, 0x36	; 54
 182:	80 0f       	add	r24, r16
 184:	0e 94 5e 01 	call	0x2bc	; 0x2bc <MCP_write>
	MCP_write(MCP_TXB0SIDH, can_tx.id);

	//MCP_write(MCP_TXB0SIDL, can_tx.id);

	MCP_write(MCP_TXB0DLC, (can_tx.length));
	for(int i = 0; i < can_tx.length; i++)
 188:	0f 5f       	subi	r16, 0xFF	; 255
 18a:	1f 4f       	sbci	r17, 0xFF	; 255
 18c:	0c 15       	cp	r16, r12
 18e:	1d 05       	cpc	r17, r13
 190:	a4 f3       	brlt	.-24     	; 0x17a <CAN_message_send+0x64>
	{
		MCP_write(MCP_TXB0D0 + i, can_tx.data[i]);
	}
	MCP_rts(MCP_RTS_TX0);
 192:	81 e8       	ldi	r24, 0x81	; 129
 194:	0e 94 70 01 	call	0x2e0	; 0x2e0 <MCP_rts>
	
	printf("canstst: %x\n",MCP_read(MCP_CANSTAT));
 198:	8e e0       	ldi	r24, 0x0E	; 14
 19a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <MCP_read>
 19e:	1f 92       	push	r1
 1a0:	8f 93       	push	r24
 1a2:	86 e0       	ldi	r24, 0x06	; 6
 1a4:	91 e0       	ldi	r25, 0x01	; 1
 1a6:	9f 93       	push	r25
 1a8:	8f 93       	push	r24
 1aa:	0e 94 22 03 	call	0x644	; 0x644 <printf>
 1ae:	0f 90       	pop	r0
 1b0:	0f 90       	pop	r0
 1b2:	0f 90       	pop	r0
 1b4:	0f 90       	pop	r0
}
 1b6:	2b 96       	adiw	r28, 0x0b	; 11
 1b8:	0f b6       	in	r0, 0x3f	; 63
 1ba:	f8 94       	cli
 1bc:	de bf       	out	0x3e, r29	; 62
 1be:	0f be       	out	0x3f, r0	; 63
 1c0:	cd bf       	out	0x3d, r28	; 61
 1c2:	df 91       	pop	r29
 1c4:	cf 91       	pop	r28
 1c6:	1f 91       	pop	r17
 1c8:	0f 91       	pop	r16
 1ca:	ff 90       	pop	r15
 1cc:	ef 90       	pop	r14
 1ce:	df 90       	pop	r13
 1d0:	cf 90       	pop	r12
 1d2:	08 95       	ret

000001d4 <test_CAN_joystick>:
	}

}

void print_menu(int sub_menu,int select_menu,int team_chosen)
{
 1d4:	cf 93       	push	r28
 1d6:	df 93       	push	r29
 1d8:	cd b7       	in	r28, 0x3d	; 61
			{
				for (j = 0; j < 13; j++)
				{
					for (i = 0; i < 5; i++)
					{
						if(select_menu==k)
 1da:	de b7       	in	r29, 0x3e	; 62
 1dc:	2b 97       	sbiw	r28, 0x0b	; 11
 1de:	0f b6       	in	r0, 0x3f	; 63
						{
							oled_set_column(i+(j*5));
 1e0:	f8 94       	cli
 1e2:	de bf       	out	0x3e, r29	; 62
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	cd bf       	out	0x3d, r28	; 61
 1e8:	87 b3       	in	r24, 0x17	; 23
							write_d(~pgm_read_byte(&font5[menu[k][j] - ' '][i]));
 1ea:	88 7f       	andi	r24, 0xF8	; 248
 1ec:	87 bb       	out	0x17, r24	; 23
 1ee:	0f 2e       	mov	r0, r31
 1f0:	f0 e7       	ldi	r31, 0x70	; 112
 1f2:	af 2e       	mov	r10, r31
 1f4:	f0 2d       	mov	r31, r0
 1f6:	71 2c       	mov	r7, r1
 1f8:	0f 2e       	mov	r0, r31
 1fa:	f7 e0       	ldi	r31, 0x07	; 7
 1fc:	bf 2e       	mov	r11, r31
 1fe:	f0 2d       	mov	r31, r0
 200:	88 24       	eor	r8, r8
 202:	83 94       	inc	r8
 204:	85 e0       	ldi	r24, 0x05	; 5
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 57 00 	call	0xae	; 0xae <read_adc>
 20c:	18 2f       	mov	r17, r24
 20e:	84 e0       	ldi	r24, 0x04	; 4
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	0e 94 57 00 	call	0xae	; 0xae <read_adc>
						}
						else
						{
							oled_set_column(i+(j*5));
 216:	c8 2e       	mov	r12, r24
 218:	87 e0       	ldi	r24, 0x07	; 7
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	0e 94 57 00 	call	0xae	; 0xae <read_adc>
							write_d(pgm_read_byte(&font5[menu[k][j] - ' '][i]));
 220:	d8 2e       	mov	r13, r24
 222:	86 e0       	ldi	r24, 0x06	; 6
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 57 00 	call	0xae	; 0xae <read_adc>
 22a:	46 b3       	in	r20, 0x16	; 22
 22c:	56 b3       	in	r21, 0x16	; 22
 22e:	96 b2       	in	r9, 0x16	; 22
 230:	92 fa       	bst	r9, 2
 232:	99 24       	eor	r9, r9
 234:	90 f8       	bld	r9, 0
 236:	ea 2c       	mov	r14, r10
 238:	a9 82       	std	Y+1, r10	; 0x01
 23a:	7a 82       	std	Y+2, r7	; 0x02
 23c:	bb 82       	std	Y+3, r11	; 0x03
 23e:	1c 83       	std	Y+4, r17	; 0x04
 240:	cd 82       	std	Y+5, r12	; 0x05
			
			for (k = 0; k < 5; k++)
			{
				for (j = 0; j < 13; j++)
				{
					for (i = 0; i < 5; i++)
 242:	30 2f       	mov	r19, r16
 244:	38 25       	eor	r19, r8
 246:	3e 83       	std	Y+6, r19	; 0x06
 248:	41 70       	andi	r20, 0x01	; 1
 24a:	4f 83       	std	Y+7, r20	; 0x07
 24c:	56 95       	lsr	r21
 24e:	51 70       	andi	r21, 0x01	; 1
 250:	58 87       	std	Y+8, r21	; 0x08
 252:	89 87       	std	Y+9, r24	; 0x09
 254:	da 86       	std	Y+10, r13	; 0x0a
 256:	f7 2c       	mov	r15, r7
	switch(sub_menu){
		case 1: //print Main menu
			
			for (k = 0; k < 5; k++)
			{
				for (j = 0; j < 13; j++)
 258:	0b 2d       	mov	r16, r11
 25a:	2c 2d       	mov	r18, r12
 25c:	68 2f       	mov	r22, r24
 25e:	7d 2d       	mov	r23, r13
 260:	8b 85       	ldd	r24, Y+11	; 0x0b
 262:	0e 94 8b 00 	call	0x116	; 0x116 <CAN_message_send>
 266:	09 2d       	mov	r16, r9
 268:	cd cf       	rjmp	.-102    	; 0x204 <test_CAN_joystick+0x30>

0000026a <main>:
	}

}

void print_menu(int sub_menu,int select_menu,int team_chosen)
{
 26a:	8f e1       	ldi	r24, 0x1F	; 31
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	0e 94 a1 01 	call	0x342	; 0x342 <USART_Init>
 272:	0e 94 75 01 	call	0x2ea	; 0x2ea <ram_init>
 276:	0e 94 49 01 	call	0x292	; 0x292 <MCP_init>
 27a:	0e 94 61 00 	call	0xc2	; 0xc2 <CAN_init>
 27e:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <test_CAN_joystick>

00000282 <MCP_reset>:
	return 0;
}

int MCP_reset(void)
{
	PORTB &= ~(1 << SS);
 282:	c4 98       	cbi	0x18, 4	; 24
	
	SPI_MasterTransmit(MCP_RESET);
 284:	80 ec       	ldi	r24, 0xC0	; 192
 286:	0e 94 90 01 	call	0x320	; 0x320 <SPI_MasterTransmit>
	
	PORTB |= (1 << SS);
 28a:	c4 9a       	sbi	0x18, 4	; 24
	
	return 0;
}
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	08 95       	ret

00000292 <MCP_init>:
#include "SPI.h"
#include "MCP2515.h"

int MCP_init(void)
{
	SPI_MasterInit();
 292:	0e 94 88 01 	call	0x310	; 0x310 <SPI_MasterInit>
	MCP_reset();
 296:	0e 94 41 01 	call	0x282	; 0x282 <MCP_reset>
	
	return 0;
}
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	08 95       	ret

000002a0 <MCP_read>:
	
	return 0;
}

char MCP_read(char address)
{
 2a0:	cf 93       	push	r28
 2a2:	c8 2f       	mov	r28, r24
	PORTB &= ~(1 << SS); 
 2a4:	c4 98       	cbi	0x18, 4	; 24
		
	SPI_MasterTransmit(MCP_READ);
 2a6:	83 e0       	ldi	r24, 0x03	; 3
 2a8:	0e 94 90 01 	call	0x320	; 0x320 <SPI_MasterTransmit>
	SPI_MasterTransmit(address);
 2ac:	8c 2f       	mov	r24, r28
 2ae:	0e 94 90 01 	call	0x320	; 0x320 <SPI_MasterTransmit>
	
	char data = SPI_SlaveReceive();
 2b2:	0e 94 94 01 	call	0x328	; 0x328 <SPI_SlaveReceive>
	
	PORTB |= (1 << SS);
 2b6:	c4 9a       	sbi	0x18, 4	; 24
	
	return data;

}
 2b8:	cf 91       	pop	r28
 2ba:	08 95       	ret

000002bc <MCP_write>:

void MCP_write(char address, char data)
{
 2bc:	cf 93       	push	r28
 2be:	df 93       	push	r29
 2c0:	d8 2f       	mov	r29, r24
 2c2:	c6 2f       	mov	r28, r22
	PORTB &= ~(1 << SS); 
 2c4:	c4 98       	cbi	0x18, 4	; 24
	
	SPI_MasterTransmit(MCP_WRITE);
 2c6:	82 e0       	ldi	r24, 0x02	; 2
 2c8:	0e 94 90 01 	call	0x320	; 0x320 <SPI_MasterTransmit>
	SPI_MasterTransmit(address);
 2cc:	8d 2f       	mov	r24, r29
 2ce:	0e 94 90 01 	call	0x320	; 0x320 <SPI_MasterTransmit>
	SPI_MasterTransmit(data);
 2d2:	8c 2f       	mov	r24, r28
 2d4:	0e 94 90 01 	call	0x320	; 0x320 <SPI_MasterTransmit>
	
	PORTB |= (1 << SS);
 2d8:	c4 9a       	sbi	0x18, 4	; 24
}
 2da:	df 91       	pop	r29
 2dc:	cf 91       	pop	r28
 2de:	08 95       	ret

000002e0 <MCP_rts>:

void MCP_rts(char rts)
{
	PORTB &= ~(1 << SS);
 2e0:	c4 98       	cbi	0x18, 4	; 24
	
	SPI_MasterTransmit(rts);
 2e2:	0e 94 90 01 	call	0x320	; 0x320 <SPI_MasterTransmit>
	
	PORTB |= (1 << SS);
 2e6:	c4 9a       	sbi	0x18, 4	; 24
 2e8:	08 95       	ret

000002ea <ram_init>:
#include "define.h"

void ram_init(void)
{
	bit_set(MCUCR, SRE);
 2ea:	85 b7       	in	r24, 0x35	; 53
 2ec:	80 68       	ori	r24, 0x80	; 128
 2ee:	85 bf       	out	0x35, r24	; 53
	
	bit_set(SFIOR, XMM2);
 2f0:	80 b7       	in	r24, 0x30	; 48
 2f2:	80 62       	ori	r24, 0x20	; 32
 2f4:	80 bf       	out	0x30, r24	; 48
	bit_clear(SFIOR, XMM1);
 2f6:	80 b7       	in	r24, 0x30	; 48
 2f8:	8f 7e       	andi	r24, 0xEF	; 239
 2fa:	80 bf       	out	0x30, r24	; 48
	bit_clear(SFIOR, XMM0);
 2fc:	80 b7       	in	r24, 0x30	; 48
 2fe:	87 7f       	andi	r24, 0xF7	; 247
 300:	80 bf       	out	0x30, r24	; 48

	bit_set(MCUCR, SRW11);
 302:	85 b7       	in	r24, 0x35	; 53
 304:	82 60       	ori	r24, 0x02	; 2
 306:	85 bf       	out	0x35, r24	; 53
	bit_clear(EMCUCR, SRW10);	
 308:	86 b7       	in	r24, 0x36	; 54
 30a:	8f 7b       	andi	r24, 0xBF	; 191
 30c:	86 bf       	out	0x36, r24	; 54
 30e:	08 95       	ret

00000310 <SPI_MasterInit>:
#define SCK PB7


void SPI_MasterInit(void)
{
	DDRB |= (1 << MOSI) | (1 << SS) | (1 << SCK);
 310:	87 b3       	in	r24, 0x17	; 23
 312:	80 6b       	ori	r24, 0xB0	; 176
 314:	87 bb       	out	0x17, r24	; 23
	DDRB &= ~(1 << MISO);
 316:	be 98       	cbi	0x17, 6	; 23
	SPCR |= (1 << SPE) | (1 << MSTR) | (1 << SPR0);
 318:	8d b1       	in	r24, 0x0d	; 13
 31a:	81 65       	ori	r24, 0x51	; 81
 31c:	8d b9       	out	0x0d, r24	; 13
 31e:	08 95       	ret

00000320 <SPI_MasterTransmit>:
}


void SPI_MasterTransmit(char cdata)
{
	SPDR = cdata;
 320:	8f b9       	out	0x0f, r24	; 15
	
	while(!(SPSR & (1 << SPIF)));
 322:	77 9b       	sbis	0x0e, 7	; 14
 324:	fe cf       	rjmp	.-4      	; 0x322 <SPI_MasterTransmit+0x2>
}
 326:	08 95       	ret

00000328 <SPI_SlaveReceive>:
}


uint8_t SPI_SlaveReceive(void)
{
	SPI_MasterTransmit(0);
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	0e 94 90 01 	call	0x320	; 0x320 <SPI_MasterTransmit>
	return SPDR;
 32e:	8f b1       	in	r24, 0x0f	; 15
 330:	08 95       	ret

00000332 <USART_Transmit>:
}

void USART_Transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while ( !(UCSR0A & (1 << UDRE0)) );
 332:	5d 9b       	sbis	0x0b, 5	; 11
 334:	fe cf       	rjmp	.-4      	; 0x332 <USART_Transmit>
	
	/* Put data into buffer, sends the data */
	UDR0 = data;
 336:	8c b9       	out	0x0c, r24	; 12
 338:	08 95       	ret

0000033a <USART_Receive>:
}

unsigned char USART_Receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1 << RXC0)) );
 33a:	5f 9b       	sbis	0x0b, 7	; 11
 33c:	fe cf       	rjmp	.-4      	; 0x33a <USART_Receive>
	
	/* Get and return received data from buffer */
	return UDR0;
 33e:	8c b1       	in	r24, 0x0c	; 12
}
 340:	08 95       	ret

00000342 <USART_Init>:

FILE *uart;

void USART_Init(unsigned int ubrr)
{
	UBRR0H = (unsigned char)(ubrr >> 8);
 342:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 344:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
 346:	88 e1       	ldi	r24, 0x18	; 24
 348:	8a b9       	out	0x0a, r24	; 10
	
	uart = fdevopen(&USART_Transmit, &USART_Receive);
 34a:	6d e9       	ldi	r22, 0x9D	; 157
 34c:	71 e0       	ldi	r23, 0x01	; 1
 34e:	89 e9       	ldi	r24, 0x99	; 153
 350:	91 e0       	ldi	r25, 0x01	; 1
 352:	0e 94 d7 02 	call	0x5ae	; 0x5ae <fdevopen>
 356:	90 93 15 01 	sts	0x0115, r25
 35a:	80 93 14 01 	sts	0x0114, r24
 35e:	08 95       	ret

00000360 <malloc>:
							oled_set_column(i+(j*5));
							write_d(pgm_read_byte(&font5[team[k][j] - ' '][i]));
						}
					}
				}
				oled_set_page(k+1);
 360:	cf 93       	push	r28
 362:	df 93       	push	r29
 364:	82 30       	cpi	r24, 0x02	; 2
			}
			break;
		
		case 2: //print team

			for (k = 0; k < 5; k++)
 366:	91 05       	cpc	r25, r1
 368:	10 f4       	brcc	.+4      	; 0x36e <malloc+0xe>
 36a:	82 e0       	ldi	r24, 0x02	; 2
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	e0 91 18 01 	lds	r30, 0x0118
 372:	f0 91 19 01 	lds	r31, 0x0119
 376:	20 e0       	ldi	r18, 0x00	; 0
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	a0 e0       	ldi	r26, 0x00	; 0
	};

	clear_oled();
	oled_set_page(0);
	oled_set_column(0);
	switch(sub_menu){
 37c:	b0 e0       	ldi	r27, 0x00	; 0
 37e:	30 97       	sbiw	r30, 0x00	; 0
 380:	39 f1       	breq	.+78     	; 0x3d0 <malloc+0x70>
			{
				for (j = 0; j < 13; j++)
				{
					for (i = 0; i < 5; i++)
					{
						if(select_menu==k)
 382:	40 81       	ld	r20, Z
 384:	51 81       	ldd	r21, Z+1	; 0x01
 386:	48 17       	cp	r20, r24
						{
							oled_set_column(i+(j*5));
 388:	59 07       	cpc	r21, r25
 38a:	b8 f0       	brcs	.+46     	; 0x3ba <malloc+0x5a>
 38c:	48 17       	cp	r20, r24
 38e:	59 07       	cpc	r21, r25
 390:	71 f4       	brne	.+28     	; 0x3ae <malloc+0x4e>
							write_d(~pgm_read_byte(&font5[games[k][j] - ' '][i]));
 392:	82 81       	ldd	r24, Z+2	; 0x02
 394:	93 81       	ldd	r25, Z+3	; 0x03
 396:	10 97       	sbiw	r26, 0x00	; 0
 398:	29 f0       	breq	.+10     	; 0x3a4 <malloc+0x44>
 39a:	13 96       	adiw	r26, 0x03	; 3
 39c:	9c 93       	st	X, r25
 39e:	8e 93       	st	-X, r24
 3a0:	12 97       	sbiw	r26, 0x02	; 2
 3a2:	2c c0       	rjmp	.+88     	; 0x3fc <malloc+0x9c>
 3a4:	90 93 19 01 	sts	0x0119, r25
 3a8:	80 93 18 01 	sts	0x0118, r24
 3ac:	27 c0       	rjmp	.+78     	; 0x3fc <malloc+0x9c>
 3ae:	21 15       	cp	r18, r1
 3b0:	31 05       	cpc	r19, r1
 3b2:	31 f0       	breq	.+12     	; 0x3c0 <malloc+0x60>
 3b4:	42 17       	cp	r20, r18
 3b6:	53 07       	cpc	r21, r19
 3b8:	18 f0       	brcs	.+6      	; 0x3c0 <malloc+0x60>
 3ba:	a9 01       	movw	r20, r18
						}
						else
						{
							oled_set_column(i+(j*5));
 3bc:	db 01       	movw	r26, r22
 3be:	01 c0       	rjmp	.+2      	; 0x3c2 <malloc+0x62>
 3c0:	ef 01       	movw	r28, r30
 3c2:	9a 01       	movw	r18, r20
 3c4:	bd 01       	movw	r22, r26
							write_d(pgm_read_byte(&font5[games[k][j] - ' '][i]));
 3c6:	df 01       	movw	r26, r30
 3c8:	02 80       	ldd	r0, Z+2	; 0x02
 3ca:	f3 81       	ldd	r31, Z+3	; 0x03
 3cc:	e0 2d       	mov	r30, r0
 3ce:	d7 cf       	rjmp	.-82     	; 0x37e <malloc+0x1e>
 3d0:	21 15       	cp	r18, r1
 3d2:	31 05       	cpc	r19, r1
 3d4:	f9 f0       	breq	.+62     	; 0x414 <malloc+0xb4>
 3d6:	28 1b       	sub	r18, r24
 3d8:	39 0b       	sbc	r19, r25
 3da:	24 30       	cpi	r18, 0x04	; 4
 3dc:	31 05       	cpc	r19, r1
 3de:	80 f4       	brcc	.+32     	; 0x400 <malloc+0xa0>
 3e0:	8a 81       	ldd	r24, Y+2	; 0x02
 3e2:	9b 81       	ldd	r25, Y+3	; 0x03
 3e4:	61 15       	cp	r22, r1
 3e6:	71 05       	cpc	r23, r1
 3e8:	21 f0       	breq	.+8      	; 0x3f2 <malloc+0x92>

			for (k = 0; k < 4; k++)
			{
				for (j = 0; j < 13; j++)
				{
					for (i = 0; i < 5; i++)
 3ea:	fb 01       	movw	r30, r22
 3ec:	93 83       	std	Z+3, r25	; 0x03
 3ee:	82 83       	std	Z+2, r24	; 0x02
 3f0:	04 c0       	rjmp	.+8      	; 0x3fa <malloc+0x9a>
 3f2:	90 93 19 01 	sts	0x0119, r25
 3f6:	80 93 18 01 	sts	0x0118, r24
 3fa:	fe 01       	movw	r30, r28
 3fc:	32 96       	adiw	r30, 0x02	; 2
 3fe:	44 c0       	rjmp	.+136    	; 0x488 <malloc+0x128>
			break;
		case 3: // GAMEMODES

			for (k = 0; k < 4; k++)
			{
				for (j = 0; j < 13; j++)
 400:	fe 01       	movw	r30, r28
 402:	e2 0f       	add	r30, r18
 404:	f3 1f       	adc	r31, r19
 406:	81 93       	st	Z+, r24
 408:	91 93       	st	Z+, r25
 40a:	22 50       	subi	r18, 0x02	; 2
 40c:	31 09       	sbc	r19, r1
 40e:	39 83       	std	Y+1, r19	; 0x01
 410:	28 83       	st	Y, r18
	};

	clear_oled();
	oled_set_page(0);
	oled_set_column(0);
	switch(sub_menu){
 412:	3a c0       	rjmp	.+116    	; 0x488 <malloc+0x128>
 414:	20 91 16 01 	lds	r18, 0x0116
 418:	30 91 17 01 	lds	r19, 0x0117
 41c:	23 2b       	or	r18, r19
 41e:	41 f4       	brne	.+16     	; 0x430 <malloc+0xd0>
 420:	20 91 02 01 	lds	r18, 0x0102
 424:	30 91 03 01 	lds	r19, 0x0103
							oled_set_column(i+(j*5));
							write_d(pgm_read_byte(&font5[games[k][j] - ' '][i]));
						}
					}
				}
				oled_set_page(k+1);
 428:	30 93 17 01 	sts	0x0117, r19
 42c:	20 93 16 01 	sts	0x0116, r18
 430:	20 91 00 01 	lds	r18, 0x0100
 434:	30 91 01 01 	lds	r19, 0x0101
 438:	21 15       	cp	r18, r1
				oled_set_page(k+1);
			}
			break;
		case 3: // GAMEMODES

			for (k = 0; k < 4; k++)
 43a:	31 05       	cpc	r19, r1
 43c:	41 f4       	brne	.+16     	; 0x44e <malloc+0xee>
 43e:	2d b7       	in	r18, 0x3d	; 61
 440:	3e b7       	in	r19, 0x3e	; 62
 442:	40 91 04 01 	lds	r20, 0x0104
 446:	50 91 05 01 	lds	r21, 0x0105
 44a:	24 1b       	sub	r18, r20
 44c:	35 0b       	sbc	r19, r21
 44e:	e0 91 16 01 	lds	r30, 0x0116
	};

	clear_oled();
	oled_set_page(0);
	oled_set_column(0);
	switch(sub_menu){
 452:	f0 91 17 01 	lds	r31, 0x0117

			for (j = 0; j < 20; j++)
			{
				for (i = 0; i < 5; i++)
				{
					oled_set_column(i+(j*5));
 456:	e2 17       	cp	r30, r18
 458:	f3 07       	cpc	r31, r19
 45a:	a0 f4       	brcc	.+40     	; 0x484 <malloc+0x124>
 45c:	2e 1b       	sub	r18, r30
 45e:	3f 0b       	sbc	r19, r31
					write_d(~pgm_read_byte(&font5[team_print[team_chosen][j] - ' '][i]));
 460:	28 17       	cp	r18, r24
 462:	39 07       	cpc	r19, r25
 464:	78 f0       	brcs	.+30     	; 0x484 <malloc+0x124>
 466:	ac 01       	movw	r20, r24
 468:	4e 5f       	subi	r20, 0xFE	; 254
 46a:	5f 4f       	sbci	r21, 0xFF	; 255
 46c:	24 17       	cp	r18, r20
 46e:	35 07       	cpc	r19, r21
 470:	48 f0       	brcs	.+18     	; 0x484 <malloc+0x124>
 472:	4e 0f       	add	r20, r30
 474:	5f 1f       	adc	r21, r31
 476:	50 93 17 01 	sts	0x0117, r21
 47a:	40 93 16 01 	sts	0x0116, r20
 47e:	81 93       	st	Z+, r24
 480:	91 93       	st	Z+, r25
 482:	02 c0       	rjmp	.+4      	; 0x488 <malloc+0x128>
 484:	e0 e0       	ldi	r30, 0x00	; 0
		
		case 4: // team chosen print

			for (j = 0; j < 20; j++)
			{
				for (i = 0; i < 5; i++)
 486:	f0 e0       	ldi	r31, 0x00	; 0
 488:	cf 01       	movw	r24, r30
 48a:	df 91       	pop	r29
 48c:	cf 91       	pop	r28
 48e:	08 95       	ret

00000490 <free>:
 490:	cf 93       	push	r28
 492:	df 93       	push	r29
 494:	00 97       	sbiw	r24, 0x00	; 0
 496:	09 f4       	brne	.+2      	; 0x49a <free+0xa>
 498:	87 c0       	rjmp	.+270    	; 0x5a8 <__stack+0xa9>
 49a:	fc 01       	movw	r30, r24
			}
			break;
		
		case 4: // team chosen print

			for (j = 0; j < 20; j++)
 49c:	32 97       	sbiw	r30, 0x02	; 2
 49e:	13 82       	std	Z+3, r1	; 0x03
 4a0:	12 82       	std	Z+2, r1	; 0x02
 4a2:	c0 91 18 01 	lds	r28, 0x0118
	};

	clear_oled();
	oled_set_page(0);
	oled_set_column(0);
	switch(sub_menu){
 4a6:	d0 91 19 01 	lds	r29, 0x0119
 4aa:	20 97       	sbiw	r28, 0x00	; 0
						if(k=0){
							oled_set_column(i+(j*5));
							write_d(pgm_read_byte(&font5[gameOn[k][j] - ' '][i]));
						}
						if(k=1){
							oled_set_column(i+(j*5));
 4ac:	81 f4       	brne	.+32     	; 0x4ce <free+0x3e>
 4ae:	20 81       	ld	r18, Z
 4b0:	31 81       	ldd	r19, Z+1	; 0x01
 4b2:	28 0f       	add	r18, r24
 4b4:	39 1f       	adc	r19, r25
							write_d(pgm_read_byte(&font5[team[team_chosen][j] - ' '][i]));
 4b6:	80 91 16 01 	lds	r24, 0x0116
 4ba:	90 91 17 01 	lds	r25, 0x0117
 4be:	82 17       	cp	r24, r18
 4c0:	93 07       	cpc	r25, r19
 4c2:	79 f5       	brne	.+94     	; 0x522 <__stack+0x23>
 4c4:	f0 93 17 01 	sts	0x0117, r31
 4c8:	e0 93 16 01 	sts	0x0116, r30
 4cc:	6d c0       	rjmp	.+218    	; 0x5a8 <__stack+0xa9>
 4ce:	de 01       	movw	r26, r28
 4d0:	20 e0       	ldi	r18, 0x00	; 0
 4d2:	30 e0       	ldi	r19, 0x00	; 0
 4d4:	ae 17       	cp	r26, r30
 4d6:	bf 07       	cpc	r27, r31
 4d8:	50 f4       	brcc	.+20     	; 0x4ee <free+0x5e>

			for (k = 0; k < 3; k++)
			{
				for (j = 0; j < 18; j++)
				{
					for (i = 0; i < 5; i++)
 4da:	12 96       	adiw	r26, 0x02	; 2
 4dc:	4d 91       	ld	r20, X+
 4de:	5c 91       	ld	r21, X
 4e0:	13 97       	sbiw	r26, 0x03	; 3
 4e2:	9d 01       	movw	r18, r26
 4e4:	41 15       	cp	r20, r1
 4e6:	51 05       	cpc	r21, r1
 4e8:	09 f1       	breq	.+66     	; 0x52c <__stack+0x2d>
 4ea:	da 01       	movw	r26, r20
 4ec:	f3 cf       	rjmp	.-26     	; 0x4d4 <free+0x44>
 4ee:	b3 83       	std	Z+3, r27	; 0x03
		
		case 5:

			for (k = 0; k < 3; k++)
			{
				for (j = 0; j < 18; j++)
 4f0:	a2 83       	std	Z+2, r26	; 0x02
 4f2:	40 81       	ld	r20, Z
 4f4:	51 81       	ldd	r21, Z+1	; 0x01
 4f6:	84 0f       	add	r24, r20
	};

	clear_oled();
	oled_set_page(0);
	oled_set_column(0);
	switch(sub_menu){
 4f8:	95 1f       	adc	r25, r21
 4fa:	8a 17       	cp	r24, r26
 4fc:	9b 07       	cpc	r25, r27
							oled_set_column(i+(j*5));
							write_d(pgm_read_byte(&font5[team[team_chosen][j] - ' '][i]));
						}
					}
				}
				oled_set_page(k+1);
 4fe:	71 f4       	brne	.+28     	; 0x51c <__stack+0x1d>
 500:	8d 91       	ld	r24, X+
 502:	9c 91       	ld	r25, X
 504:	11 97       	sbiw	r26, 0x01	; 1
 506:	84 0f       	add	r24, r20
 508:	95 1f       	adc	r25, r21
 50a:	02 96       	adiw	r24, 0x02	; 2
 50c:	91 83       	std	Z+1, r25	; 0x01
 50e:	80 83       	st	Z, r24
 510:	12 96       	adiw	r26, 0x02	; 2
 512:	8d 91       	ld	r24, X+
 514:	9c 91       	ld	r25, X
 516:	13 97       	sbiw	r26, 0x03	; 3
 518:	93 83       	std	Z+3, r25	; 0x03
 51a:	82 83       	std	Z+2, r24	; 0x02
 51c:	21 15       	cp	r18, r1
 51e:	31 05       	cpc	r19, r1
	};

	clear_oled();
	oled_set_page(0);
	oled_set_column(0);
	switch(sub_menu){
 520:	29 f4       	brne	.+10     	; 0x52c <__stack+0x2d>
 522:	f0 93 19 01 	sts	0x0119, r31
 526:	e0 93 18 01 	sts	0x0118, r30
 52a:	3e c0       	rjmp	.+124    	; 0x5a8 <__stack+0xa9>
 52c:	d9 01       	movw	r26, r18
 52e:	13 96       	adiw	r26, 0x03	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 530:	fc 93       	st	X, r31
 532:	ee 93       	st	-X, r30
 534:	12 97       	sbiw	r26, 0x02	; 2
 536:	4d 91       	ld	r20, X+
 538:	5d 91       	ld	r21, X+
 53a:	a4 0f       	add	r26, r20
 53c:	b5 1f       	adc	r27, r21
 53e:	ea 17       	cp	r30, r26
 540:	fb 07       	cpc	r31, r27
		break;

	}
	_delay_ms(delay);
	
}
 542:	79 f4       	brne	.+30     	; 0x562 <__stack+0x63>
 544:	80 81       	ld	r24, Z
 546:	91 81       	ldd	r25, Z+1	; 0x01
 548:	84 0f       	add	r24, r20
 54a:	95 1f       	adc	r25, r21
 54c:	02 96       	adiw	r24, 0x02	; 2
 54e:	d9 01       	movw	r26, r18
 550:	11 96       	adiw	r26, 0x01	; 1
 552:	9c 93       	st	X, r25
 554:	8e 93       	st	-X, r24
 556:	82 81       	ldd	r24, Z+2	; 0x02
 558:	93 81       	ldd	r25, Z+3	; 0x03
 55a:	13 96       	adiw	r26, 0x03	; 3
 55c:	9c 93       	st	X, r25
 55e:	8e 93       	st	-X, r24
 560:	12 97       	sbiw	r26, 0x02	; 2
 562:	e0 e0       	ldi	r30, 0x00	; 0
 564:	f0 e0       	ldi	r31, 0x00	; 0
 566:	8a 81       	ldd	r24, Y+2	; 0x02
 568:	9b 81       	ldd	r25, Y+3	; 0x03
 56a:	00 97       	sbiw	r24, 0x00	; 0
 56c:	19 f0       	breq	.+6      	; 0x574 <__stack+0x75>
 56e:	fe 01       	movw	r30, r28
 570:	ec 01       	movw	r28, r24
 572:	f9 cf       	rjmp	.-14     	; 0x566 <__stack+0x67>
 574:	ce 01       	movw	r24, r28
 576:	02 96       	adiw	r24, 0x02	; 2
 578:	28 81       	ld	r18, Y
 57a:	39 81       	ldd	r19, Y+1	; 0x01
 57c:	82 0f       	add	r24, r18
 57e:	93 1f       	adc	r25, r19
 580:	20 91 16 01 	lds	r18, 0x0116
 584:	30 91 17 01 	lds	r19, 0x0117
 588:	28 17       	cp	r18, r24
 58a:	39 07       	cpc	r19, r25
 58c:	69 f4       	brne	.+26     	; 0x5a8 <__stack+0xa9>
 58e:	30 97       	sbiw	r30, 0x00	; 0
 590:	29 f4       	brne	.+10     	; 0x59c <__stack+0x9d>
 592:	10 92 19 01 	sts	0x0119, r1
 596:	10 92 18 01 	sts	0x0118, r1
 59a:	02 c0       	rjmp	.+4      	; 0x5a0 <__stack+0xa1>
 59c:	13 82       	std	Z+3, r1	; 0x03
 59e:	12 82       	std	Z+2, r1	; 0x02
 5a0:	d0 93 17 01 	sts	0x0117, r29
 5a4:	c0 93 16 01 	sts	0x0116, r28
 5a8:	df 91       	pop	r29
 5aa:	cf 91       	pop	r28
 5ac:	08 95       	ret

000005ae <fdevopen>:
 5ae:	0f 93       	push	r16
 5b0:	1f 93       	push	r17
 5b2:	cf 93       	push	r28
 5b4:	df 93       	push	r29
 5b6:	ec 01       	movw	r28, r24
 5b8:	8b 01       	movw	r16, r22
 5ba:	00 97       	sbiw	r24, 0x00	; 0
 5bc:	31 f4       	brne	.+12     	; 0x5ca <fdevopen+0x1c>
 5be:	61 15       	cp	r22, r1
 5c0:	71 05       	cpc	r23, r1
 5c2:	19 f4       	brne	.+6      	; 0x5ca <fdevopen+0x1c>
 5c4:	80 e0       	ldi	r24, 0x00	; 0
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	38 c0       	rjmp	.+112    	; 0x63a <fdevopen+0x8c>
 5ca:	6e e0       	ldi	r22, 0x0E	; 14
 5cc:	70 e0       	ldi	r23, 0x00	; 0
 5ce:	81 e0       	ldi	r24, 0x01	; 1
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	0e 94 08 05 	call	0xa10	; 0xa10 <calloc>
 5d6:	fc 01       	movw	r30, r24
 5d8:	00 97       	sbiw	r24, 0x00	; 0
 5da:	a1 f3       	breq	.-24     	; 0x5c4 <fdevopen+0x16>
 5dc:	80 e8       	ldi	r24, 0x80	; 128
 5de:	83 83       	std	Z+3, r24	; 0x03
 5e0:	01 15       	cp	r16, r1
 5e2:	11 05       	cpc	r17, r1
 5e4:	71 f0       	breq	.+28     	; 0x602 <fdevopen+0x54>
 5e6:	13 87       	std	Z+11, r17	; 0x0b
 5e8:	02 87       	std	Z+10, r16	; 0x0a
 5ea:	81 e8       	ldi	r24, 0x81	; 129
 5ec:	83 83       	std	Z+3, r24	; 0x03
 5ee:	80 91 1a 01 	lds	r24, 0x011A
 5f2:	90 91 1b 01 	lds	r25, 0x011B
 5f6:	89 2b       	or	r24, r25
 5f8:	21 f4       	brne	.+8      	; 0x602 <fdevopen+0x54>
 5fa:	f0 93 1b 01 	sts	0x011B, r31
 5fe:	e0 93 1a 01 	sts	0x011A, r30
 602:	20 97       	sbiw	r28, 0x00	; 0
 604:	c9 f0       	breq	.+50     	; 0x638 <fdevopen+0x8a>
 606:	d1 87       	std	Z+9, r29	; 0x09
 608:	c0 87       	std	Z+8, r28	; 0x08
 60a:	83 81       	ldd	r24, Z+3	; 0x03
 60c:	82 60       	ori	r24, 0x02	; 2
 60e:	83 83       	std	Z+3, r24	; 0x03
 610:	80 91 1c 01 	lds	r24, 0x011C
 614:	90 91 1d 01 	lds	r25, 0x011D
 618:	89 2b       	or	r24, r25
 61a:	71 f4       	brne	.+28     	; 0x638 <fdevopen+0x8a>
 61c:	f0 93 1d 01 	sts	0x011D, r31
 620:	e0 93 1c 01 	sts	0x011C, r30
 624:	80 91 1e 01 	lds	r24, 0x011E
 628:	90 91 1f 01 	lds	r25, 0x011F
 62c:	89 2b       	or	r24, r25
 62e:	21 f4       	brne	.+8      	; 0x638 <fdevopen+0x8a>
 630:	f0 93 1f 01 	sts	0x011F, r31
 634:	e0 93 1e 01 	sts	0x011E, r30
 638:	cf 01       	movw	r24, r30
 63a:	df 91       	pop	r29
 63c:	cf 91       	pop	r28
 63e:	1f 91       	pop	r17
 640:	0f 91       	pop	r16
 642:	08 95       	ret

00000644 <printf>:
 644:	a0 e0       	ldi	r26, 0x00	; 0
 646:	b0 e0       	ldi	r27, 0x00	; 0
 648:	e8 e2       	ldi	r30, 0x28	; 40
 64a:	f3 e0       	ldi	r31, 0x03	; 3
 64c:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__prologue_saves__+0x20>
 650:	fe 01       	movw	r30, r28
 652:	35 96       	adiw	r30, 0x05	; 5
 654:	61 91       	ld	r22, Z+
 656:	71 91       	ld	r23, Z+
 658:	af 01       	movw	r20, r30
 65a:	80 91 1c 01 	lds	r24, 0x011C
 65e:	90 91 1d 01 	lds	r25, 0x011D
 662:	0e 94 36 03 	call	0x66c	; 0x66c <vfprintf>
 666:	e2 e0       	ldi	r30, 0x02	; 2
 668:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <__epilogue_restores__+0x20>

0000066c <vfprintf>:
 66c:	ac e0       	ldi	r26, 0x0C	; 12
 66e:	b0 e0       	ldi	r27, 0x00	; 0
 670:	ec e3       	ldi	r30, 0x3C	; 60
 672:	f3 e0       	ldi	r31, 0x03	; 3
 674:	0c 94 d1 05 	jmp	0xba2	; 0xba2 <__prologue_saves__>
 678:	7c 01       	movw	r14, r24
 67a:	6b 01       	movw	r12, r22
 67c:	8a 01       	movw	r16, r20
 67e:	fc 01       	movw	r30, r24
 680:	17 82       	std	Z+7, r1	; 0x07
 682:	16 82       	std	Z+6, r1	; 0x06
 684:	83 81       	ldd	r24, Z+3	; 0x03
 686:	81 ff       	sbrs	r24, 1
 688:	bd c1       	rjmp	.+890    	; 0xa04 <vfprintf+0x398>
 68a:	ce 01       	movw	r24, r28
 68c:	01 96       	adiw	r24, 0x01	; 1
 68e:	4c 01       	movw	r8, r24
 690:	f7 01       	movw	r30, r14
 692:	93 81       	ldd	r25, Z+3	; 0x03
 694:	f6 01       	movw	r30, r12
 696:	93 fd       	sbrc	r25, 3
 698:	85 91       	lpm	r24, Z+
 69a:	93 ff       	sbrs	r25, 3
 69c:	81 91       	ld	r24, Z+
 69e:	6f 01       	movw	r12, r30
 6a0:	88 23       	and	r24, r24
 6a2:	09 f4       	brne	.+2      	; 0x6a6 <vfprintf+0x3a>
 6a4:	ab c1       	rjmp	.+854    	; 0x9fc <vfprintf+0x390>
 6a6:	85 32       	cpi	r24, 0x25	; 37
 6a8:	39 f4       	brne	.+14     	; 0x6b8 <vfprintf+0x4c>
 6aa:	93 fd       	sbrc	r25, 3
 6ac:	85 91       	lpm	r24, Z+
 6ae:	93 ff       	sbrs	r25, 3
 6b0:	81 91       	ld	r24, Z+
 6b2:	6f 01       	movw	r12, r30
 6b4:	85 32       	cpi	r24, 0x25	; 37
 6b6:	29 f4       	brne	.+10     	; 0x6c2 <vfprintf+0x56>
 6b8:	b7 01       	movw	r22, r14
 6ba:	90 e0       	ldi	r25, 0x00	; 0
 6bc:	0e 94 41 05 	call	0xa82	; 0xa82 <fputc>
 6c0:	e7 cf       	rjmp	.-50     	; 0x690 <vfprintf+0x24>
 6c2:	51 2c       	mov	r5, r1
 6c4:	31 2c       	mov	r3, r1
 6c6:	20 e0       	ldi	r18, 0x00	; 0
 6c8:	20 32       	cpi	r18, 0x20	; 32
 6ca:	a0 f4       	brcc	.+40     	; 0x6f4 <vfprintf+0x88>
 6cc:	8b 32       	cpi	r24, 0x2B	; 43
 6ce:	69 f0       	breq	.+26     	; 0x6ea <vfprintf+0x7e>
 6d0:	30 f4       	brcc	.+12     	; 0x6de <vfprintf+0x72>
 6d2:	80 32       	cpi	r24, 0x20	; 32
 6d4:	59 f0       	breq	.+22     	; 0x6ec <vfprintf+0x80>
 6d6:	83 32       	cpi	r24, 0x23	; 35
 6d8:	69 f4       	brne	.+26     	; 0x6f4 <vfprintf+0x88>
 6da:	20 61       	ori	r18, 0x10	; 16
 6dc:	2c c0       	rjmp	.+88     	; 0x736 <vfprintf+0xca>
 6de:	8d 32       	cpi	r24, 0x2D	; 45
 6e0:	39 f0       	breq	.+14     	; 0x6f0 <vfprintf+0x84>
 6e2:	80 33       	cpi	r24, 0x30	; 48
 6e4:	39 f4       	brne	.+14     	; 0x6f4 <vfprintf+0x88>
 6e6:	21 60       	ori	r18, 0x01	; 1
 6e8:	26 c0       	rjmp	.+76     	; 0x736 <vfprintf+0xca>
 6ea:	22 60       	ori	r18, 0x02	; 2
 6ec:	24 60       	ori	r18, 0x04	; 4
 6ee:	23 c0       	rjmp	.+70     	; 0x736 <vfprintf+0xca>
 6f0:	28 60       	ori	r18, 0x08	; 8
 6f2:	21 c0       	rjmp	.+66     	; 0x736 <vfprintf+0xca>
 6f4:	27 fd       	sbrc	r18, 7
 6f6:	27 c0       	rjmp	.+78     	; 0x746 <vfprintf+0xda>
 6f8:	30 ed       	ldi	r19, 0xD0	; 208
 6fa:	38 0f       	add	r19, r24
 6fc:	3a 30       	cpi	r19, 0x0A	; 10
 6fe:	78 f4       	brcc	.+30     	; 0x71e <vfprintf+0xb2>
 700:	26 ff       	sbrs	r18, 6
 702:	06 c0       	rjmp	.+12     	; 0x710 <vfprintf+0xa4>
 704:	fa e0       	ldi	r31, 0x0A	; 10
 706:	5f 9e       	mul	r5, r31
 708:	30 0d       	add	r19, r0
 70a:	11 24       	eor	r1, r1
 70c:	53 2e       	mov	r5, r19
 70e:	13 c0       	rjmp	.+38     	; 0x736 <vfprintf+0xca>
 710:	8a e0       	ldi	r24, 0x0A	; 10
 712:	38 9e       	mul	r3, r24
 714:	30 0d       	add	r19, r0
 716:	11 24       	eor	r1, r1
 718:	33 2e       	mov	r3, r19
 71a:	20 62       	ori	r18, 0x20	; 32
 71c:	0c c0       	rjmp	.+24     	; 0x736 <vfprintf+0xca>
 71e:	8e 32       	cpi	r24, 0x2E	; 46
 720:	21 f4       	brne	.+8      	; 0x72a <vfprintf+0xbe>
 722:	26 fd       	sbrc	r18, 6
 724:	6b c1       	rjmp	.+726    	; 0x9fc <vfprintf+0x390>
 726:	20 64       	ori	r18, 0x40	; 64
 728:	06 c0       	rjmp	.+12     	; 0x736 <vfprintf+0xca>
 72a:	8c 36       	cpi	r24, 0x6C	; 108
 72c:	11 f4       	brne	.+4      	; 0x732 <vfprintf+0xc6>
 72e:	20 68       	ori	r18, 0x80	; 128
 730:	02 c0       	rjmp	.+4      	; 0x736 <vfprintf+0xca>
 732:	88 36       	cpi	r24, 0x68	; 104
 734:	41 f4       	brne	.+16     	; 0x746 <vfprintf+0xda>
 736:	f6 01       	movw	r30, r12
 738:	93 fd       	sbrc	r25, 3
 73a:	85 91       	lpm	r24, Z+
 73c:	93 ff       	sbrs	r25, 3
 73e:	81 91       	ld	r24, Z+
 740:	6f 01       	movw	r12, r30
 742:	81 11       	cpse	r24, r1
 744:	c1 cf       	rjmp	.-126    	; 0x6c8 <vfprintf+0x5c>
 746:	98 2f       	mov	r25, r24
 748:	9f 7d       	andi	r25, 0xDF	; 223
 74a:	95 54       	subi	r25, 0x45	; 69
 74c:	93 30       	cpi	r25, 0x03	; 3
 74e:	28 f4       	brcc	.+10     	; 0x75a <vfprintf+0xee>
 750:	0c 5f       	subi	r16, 0xFC	; 252
 752:	1f 4f       	sbci	r17, 0xFF	; 255
 754:	ff e3       	ldi	r31, 0x3F	; 63
 756:	f9 83       	std	Y+1, r31	; 0x01
 758:	0d c0       	rjmp	.+26     	; 0x774 <vfprintf+0x108>
 75a:	83 36       	cpi	r24, 0x63	; 99
 75c:	31 f0       	breq	.+12     	; 0x76a <vfprintf+0xfe>
 75e:	83 37       	cpi	r24, 0x73	; 115
 760:	71 f0       	breq	.+28     	; 0x77e <vfprintf+0x112>
 762:	83 35       	cpi	r24, 0x53	; 83
 764:	09 f0       	breq	.+2      	; 0x768 <vfprintf+0xfc>
 766:	5b c0       	rjmp	.+182    	; 0x81e <vfprintf+0x1b2>
 768:	22 c0       	rjmp	.+68     	; 0x7ae <vfprintf+0x142>
 76a:	f8 01       	movw	r30, r16
 76c:	80 81       	ld	r24, Z
 76e:	89 83       	std	Y+1, r24	; 0x01
 770:	0e 5f       	subi	r16, 0xFE	; 254
 772:	1f 4f       	sbci	r17, 0xFF	; 255
 774:	44 24       	eor	r4, r4
 776:	43 94       	inc	r4
 778:	51 2c       	mov	r5, r1
 77a:	54 01       	movw	r10, r8
 77c:	15 c0       	rjmp	.+42     	; 0x7a8 <vfprintf+0x13c>
 77e:	38 01       	movw	r6, r16
 780:	f2 e0       	ldi	r31, 0x02	; 2
 782:	6f 0e       	add	r6, r31
 784:	71 1c       	adc	r7, r1
 786:	f8 01       	movw	r30, r16
 788:	a0 80       	ld	r10, Z
 78a:	b1 80       	ldd	r11, Z+1	; 0x01
 78c:	26 ff       	sbrs	r18, 6
 78e:	03 c0       	rjmp	.+6      	; 0x796 <vfprintf+0x12a>
 790:	65 2d       	mov	r22, r5
 792:	70 e0       	ldi	r23, 0x00	; 0
 794:	02 c0       	rjmp	.+4      	; 0x79a <vfprintf+0x12e>
 796:	6f ef       	ldi	r22, 0xFF	; 255
 798:	7f ef       	ldi	r23, 0xFF	; 255
 79a:	c5 01       	movw	r24, r10
 79c:	2c 87       	std	Y+12, r18	; 0x0c
 79e:	0e 94 36 05 	call	0xa6c	; 0xa6c <strnlen>
 7a2:	2c 01       	movw	r4, r24
 7a4:	83 01       	movw	r16, r6
 7a6:	2c 85       	ldd	r18, Y+12	; 0x0c
 7a8:	2f 77       	andi	r18, 0x7F	; 127
 7aa:	22 2e       	mov	r2, r18
 7ac:	17 c0       	rjmp	.+46     	; 0x7dc <vfprintf+0x170>
 7ae:	38 01       	movw	r6, r16
 7b0:	f2 e0       	ldi	r31, 0x02	; 2
 7b2:	6f 0e       	add	r6, r31
 7b4:	71 1c       	adc	r7, r1
 7b6:	f8 01       	movw	r30, r16
 7b8:	a0 80       	ld	r10, Z
 7ba:	b1 80       	ldd	r11, Z+1	; 0x01
 7bc:	26 ff       	sbrs	r18, 6
 7be:	03 c0       	rjmp	.+6      	; 0x7c6 <vfprintf+0x15a>
 7c0:	65 2d       	mov	r22, r5
 7c2:	70 e0       	ldi	r23, 0x00	; 0
 7c4:	02 c0       	rjmp	.+4      	; 0x7ca <vfprintf+0x15e>
 7c6:	6f ef       	ldi	r22, 0xFF	; 255
 7c8:	7f ef       	ldi	r23, 0xFF	; 255
 7ca:	c5 01       	movw	r24, r10
 7cc:	2c 87       	std	Y+12, r18	; 0x0c
 7ce:	0e 94 24 05 	call	0xa48	; 0xa48 <strnlen_P>
 7d2:	2c 01       	movw	r4, r24
 7d4:	2c 85       	ldd	r18, Y+12	; 0x0c
 7d6:	20 68       	ori	r18, 0x80	; 128
 7d8:	22 2e       	mov	r2, r18
 7da:	83 01       	movw	r16, r6
 7dc:	23 fc       	sbrc	r2, 3
 7de:	1b c0       	rjmp	.+54     	; 0x816 <vfprintf+0x1aa>
 7e0:	83 2d       	mov	r24, r3
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	48 16       	cp	r4, r24
 7e6:	59 06       	cpc	r5, r25
 7e8:	b0 f4       	brcc	.+44     	; 0x816 <vfprintf+0x1aa>
 7ea:	b7 01       	movw	r22, r14
 7ec:	80 e2       	ldi	r24, 0x20	; 32
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	0e 94 41 05 	call	0xa82	; 0xa82 <fputc>
 7f4:	3a 94       	dec	r3
 7f6:	f4 cf       	rjmp	.-24     	; 0x7e0 <vfprintf+0x174>
 7f8:	f5 01       	movw	r30, r10
 7fa:	27 fc       	sbrc	r2, 7
 7fc:	85 91       	lpm	r24, Z+
 7fe:	27 fe       	sbrs	r2, 7
 800:	81 91       	ld	r24, Z+
 802:	5f 01       	movw	r10, r30
 804:	b7 01       	movw	r22, r14
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	0e 94 41 05 	call	0xa82	; 0xa82 <fputc>
 80c:	31 10       	cpse	r3, r1
 80e:	3a 94       	dec	r3
 810:	f1 e0       	ldi	r31, 0x01	; 1
 812:	4f 1a       	sub	r4, r31
 814:	51 08       	sbc	r5, r1
 816:	41 14       	cp	r4, r1
 818:	51 04       	cpc	r5, r1
 81a:	71 f7       	brne	.-36     	; 0x7f8 <vfprintf+0x18c>
 81c:	e5 c0       	rjmp	.+458    	; 0x9e8 <vfprintf+0x37c>
 81e:	84 36       	cpi	r24, 0x64	; 100
 820:	11 f0       	breq	.+4      	; 0x826 <vfprintf+0x1ba>
 822:	89 36       	cpi	r24, 0x69	; 105
 824:	39 f5       	brne	.+78     	; 0x874 <vfprintf+0x208>
 826:	f8 01       	movw	r30, r16
 828:	27 ff       	sbrs	r18, 7
 82a:	07 c0       	rjmp	.+14     	; 0x83a <vfprintf+0x1ce>
 82c:	60 81       	ld	r22, Z
 82e:	71 81       	ldd	r23, Z+1	; 0x01
 830:	82 81       	ldd	r24, Z+2	; 0x02
 832:	93 81       	ldd	r25, Z+3	; 0x03
 834:	0c 5f       	subi	r16, 0xFC	; 252
 836:	1f 4f       	sbci	r17, 0xFF	; 255
 838:	08 c0       	rjmp	.+16     	; 0x84a <vfprintf+0x1de>
 83a:	60 81       	ld	r22, Z
 83c:	71 81       	ldd	r23, Z+1	; 0x01
 83e:	88 27       	eor	r24, r24
 840:	77 fd       	sbrc	r23, 7
 842:	80 95       	com	r24
 844:	98 2f       	mov	r25, r24
 846:	0e 5f       	subi	r16, 0xFE	; 254
 848:	1f 4f       	sbci	r17, 0xFF	; 255
 84a:	2f 76       	andi	r18, 0x6F	; 111
 84c:	b2 2e       	mov	r11, r18
 84e:	97 ff       	sbrs	r25, 7
 850:	09 c0       	rjmp	.+18     	; 0x864 <vfprintf+0x1f8>
 852:	90 95       	com	r25
 854:	80 95       	com	r24
 856:	70 95       	com	r23
 858:	61 95       	neg	r22
 85a:	7f 4f       	sbci	r23, 0xFF	; 255
 85c:	8f 4f       	sbci	r24, 0xFF	; 255
 85e:	9f 4f       	sbci	r25, 0xFF	; 255
 860:	20 68       	ori	r18, 0x80	; 128
 862:	b2 2e       	mov	r11, r18
 864:	2a e0       	ldi	r18, 0x0A	; 10
 866:	30 e0       	ldi	r19, 0x00	; 0
 868:	a4 01       	movw	r20, r8
 86a:	0e 94 73 05 	call	0xae6	; 0xae6 <__ultoa_invert>
 86e:	a8 2e       	mov	r10, r24
 870:	a8 18       	sub	r10, r8
 872:	44 c0       	rjmp	.+136    	; 0x8fc <vfprintf+0x290>
 874:	85 37       	cpi	r24, 0x75	; 117
 876:	29 f4       	brne	.+10     	; 0x882 <vfprintf+0x216>
 878:	2f 7e       	andi	r18, 0xEF	; 239
 87a:	b2 2e       	mov	r11, r18
 87c:	2a e0       	ldi	r18, 0x0A	; 10
 87e:	30 e0       	ldi	r19, 0x00	; 0
 880:	25 c0       	rjmp	.+74     	; 0x8cc <vfprintf+0x260>
 882:	f2 2f       	mov	r31, r18
 884:	f9 7f       	andi	r31, 0xF9	; 249
 886:	bf 2e       	mov	r11, r31
 888:	8f 36       	cpi	r24, 0x6F	; 111
 88a:	c1 f0       	breq	.+48     	; 0x8bc <vfprintf+0x250>
 88c:	18 f4       	brcc	.+6      	; 0x894 <vfprintf+0x228>
 88e:	88 35       	cpi	r24, 0x58	; 88
 890:	79 f0       	breq	.+30     	; 0x8b0 <vfprintf+0x244>
 892:	b4 c0       	rjmp	.+360    	; 0x9fc <vfprintf+0x390>
 894:	80 37       	cpi	r24, 0x70	; 112
 896:	19 f0       	breq	.+6      	; 0x89e <vfprintf+0x232>
 898:	88 37       	cpi	r24, 0x78	; 120
 89a:	21 f0       	breq	.+8      	; 0x8a4 <vfprintf+0x238>
 89c:	af c0       	rjmp	.+350    	; 0x9fc <vfprintf+0x390>
 89e:	2f 2f       	mov	r18, r31
 8a0:	20 61       	ori	r18, 0x10	; 16
 8a2:	b2 2e       	mov	r11, r18
 8a4:	b4 fe       	sbrs	r11, 4
 8a6:	0d c0       	rjmp	.+26     	; 0x8c2 <vfprintf+0x256>
 8a8:	8b 2d       	mov	r24, r11
 8aa:	84 60       	ori	r24, 0x04	; 4
 8ac:	b8 2e       	mov	r11, r24
 8ae:	09 c0       	rjmp	.+18     	; 0x8c2 <vfprintf+0x256>
 8b0:	24 ff       	sbrs	r18, 4
 8b2:	0a c0       	rjmp	.+20     	; 0x8c8 <vfprintf+0x25c>
 8b4:	9f 2f       	mov	r25, r31
 8b6:	96 60       	ori	r25, 0x06	; 6
 8b8:	b9 2e       	mov	r11, r25
 8ba:	06 c0       	rjmp	.+12     	; 0x8c8 <vfprintf+0x25c>
 8bc:	28 e0       	ldi	r18, 0x08	; 8
 8be:	30 e0       	ldi	r19, 0x00	; 0
 8c0:	05 c0       	rjmp	.+10     	; 0x8cc <vfprintf+0x260>
 8c2:	20 e1       	ldi	r18, 0x10	; 16
 8c4:	30 e0       	ldi	r19, 0x00	; 0
 8c6:	02 c0       	rjmp	.+4      	; 0x8cc <vfprintf+0x260>
 8c8:	20 e1       	ldi	r18, 0x10	; 16
 8ca:	32 e0       	ldi	r19, 0x02	; 2
 8cc:	f8 01       	movw	r30, r16
 8ce:	b7 fe       	sbrs	r11, 7
 8d0:	07 c0       	rjmp	.+14     	; 0x8e0 <vfprintf+0x274>
 8d2:	60 81       	ld	r22, Z
 8d4:	71 81       	ldd	r23, Z+1	; 0x01
 8d6:	82 81       	ldd	r24, Z+2	; 0x02
 8d8:	93 81       	ldd	r25, Z+3	; 0x03
 8da:	0c 5f       	subi	r16, 0xFC	; 252
 8dc:	1f 4f       	sbci	r17, 0xFF	; 255
 8de:	06 c0       	rjmp	.+12     	; 0x8ec <vfprintf+0x280>
 8e0:	60 81       	ld	r22, Z
 8e2:	71 81       	ldd	r23, Z+1	; 0x01
 8e4:	80 e0       	ldi	r24, 0x00	; 0
 8e6:	90 e0       	ldi	r25, 0x00	; 0
 8e8:	0e 5f       	subi	r16, 0xFE	; 254
 8ea:	1f 4f       	sbci	r17, 0xFF	; 255
 8ec:	a4 01       	movw	r20, r8
 8ee:	0e 94 73 05 	call	0xae6	; 0xae6 <__ultoa_invert>
 8f2:	a8 2e       	mov	r10, r24
 8f4:	a8 18       	sub	r10, r8
 8f6:	fb 2d       	mov	r31, r11
 8f8:	ff 77       	andi	r31, 0x7F	; 127
 8fa:	bf 2e       	mov	r11, r31
 8fc:	b6 fe       	sbrs	r11, 6
 8fe:	0b c0       	rjmp	.+22     	; 0x916 <vfprintf+0x2aa>
 900:	2b 2d       	mov	r18, r11
 902:	2e 7f       	andi	r18, 0xFE	; 254
 904:	a5 14       	cp	r10, r5
 906:	50 f4       	brcc	.+20     	; 0x91c <vfprintf+0x2b0>
 908:	b4 fe       	sbrs	r11, 4
 90a:	0a c0       	rjmp	.+20     	; 0x920 <vfprintf+0x2b4>
 90c:	b2 fc       	sbrc	r11, 2
 90e:	08 c0       	rjmp	.+16     	; 0x920 <vfprintf+0x2b4>
 910:	2b 2d       	mov	r18, r11
 912:	2e 7e       	andi	r18, 0xEE	; 238
 914:	05 c0       	rjmp	.+10     	; 0x920 <vfprintf+0x2b4>
 916:	7a 2c       	mov	r7, r10
 918:	2b 2d       	mov	r18, r11
 91a:	03 c0       	rjmp	.+6      	; 0x922 <vfprintf+0x2b6>
 91c:	7a 2c       	mov	r7, r10
 91e:	01 c0       	rjmp	.+2      	; 0x922 <vfprintf+0x2b6>
 920:	75 2c       	mov	r7, r5
 922:	24 ff       	sbrs	r18, 4
 924:	0d c0       	rjmp	.+26     	; 0x940 <vfprintf+0x2d4>
 926:	fe 01       	movw	r30, r28
 928:	ea 0d       	add	r30, r10
 92a:	f1 1d       	adc	r31, r1
 92c:	80 81       	ld	r24, Z
 92e:	80 33       	cpi	r24, 0x30	; 48
 930:	11 f4       	brne	.+4      	; 0x936 <vfprintf+0x2ca>
 932:	29 7e       	andi	r18, 0xE9	; 233
 934:	09 c0       	rjmp	.+18     	; 0x948 <vfprintf+0x2dc>
 936:	22 ff       	sbrs	r18, 2
 938:	06 c0       	rjmp	.+12     	; 0x946 <vfprintf+0x2da>
 93a:	73 94       	inc	r7
 93c:	73 94       	inc	r7
 93e:	04 c0       	rjmp	.+8      	; 0x948 <vfprintf+0x2dc>
 940:	82 2f       	mov	r24, r18
 942:	86 78       	andi	r24, 0x86	; 134
 944:	09 f0       	breq	.+2      	; 0x948 <vfprintf+0x2dc>
 946:	73 94       	inc	r7
 948:	23 fd       	sbrc	r18, 3
 94a:	13 c0       	rjmp	.+38     	; 0x972 <vfprintf+0x306>
 94c:	20 ff       	sbrs	r18, 0
 94e:	06 c0       	rjmp	.+12     	; 0x95c <vfprintf+0x2f0>
 950:	5a 2c       	mov	r5, r10
 952:	73 14       	cp	r7, r3
 954:	18 f4       	brcc	.+6      	; 0x95c <vfprintf+0x2f0>
 956:	53 0c       	add	r5, r3
 958:	57 18       	sub	r5, r7
 95a:	73 2c       	mov	r7, r3
 95c:	73 14       	cp	r7, r3
 95e:	68 f4       	brcc	.+26     	; 0x97a <vfprintf+0x30e>
 960:	b7 01       	movw	r22, r14
 962:	80 e2       	ldi	r24, 0x20	; 32
 964:	90 e0       	ldi	r25, 0x00	; 0
 966:	2c 87       	std	Y+12, r18	; 0x0c
 968:	0e 94 41 05 	call	0xa82	; 0xa82 <fputc>
 96c:	73 94       	inc	r7
 96e:	2c 85       	ldd	r18, Y+12	; 0x0c
 970:	f5 cf       	rjmp	.-22     	; 0x95c <vfprintf+0x2f0>
 972:	73 14       	cp	r7, r3
 974:	10 f4       	brcc	.+4      	; 0x97a <vfprintf+0x30e>
 976:	37 18       	sub	r3, r7
 978:	01 c0       	rjmp	.+2      	; 0x97c <vfprintf+0x310>
 97a:	31 2c       	mov	r3, r1
 97c:	24 ff       	sbrs	r18, 4
 97e:	12 c0       	rjmp	.+36     	; 0x9a4 <vfprintf+0x338>
 980:	b7 01       	movw	r22, r14
 982:	80 e3       	ldi	r24, 0x30	; 48
 984:	90 e0       	ldi	r25, 0x00	; 0
 986:	2c 87       	std	Y+12, r18	; 0x0c
 988:	0e 94 41 05 	call	0xa82	; 0xa82 <fputc>
 98c:	2c 85       	ldd	r18, Y+12	; 0x0c
 98e:	22 ff       	sbrs	r18, 2
 990:	17 c0       	rjmp	.+46     	; 0x9c0 <vfprintf+0x354>
 992:	21 ff       	sbrs	r18, 1
 994:	03 c0       	rjmp	.+6      	; 0x99c <vfprintf+0x330>
 996:	88 e5       	ldi	r24, 0x58	; 88
 998:	90 e0       	ldi	r25, 0x00	; 0
 99a:	02 c0       	rjmp	.+4      	; 0x9a0 <vfprintf+0x334>
 99c:	88 e7       	ldi	r24, 0x78	; 120
 99e:	90 e0       	ldi	r25, 0x00	; 0
 9a0:	b7 01       	movw	r22, r14
 9a2:	0c c0       	rjmp	.+24     	; 0x9bc <vfprintf+0x350>
 9a4:	82 2f       	mov	r24, r18
 9a6:	86 78       	andi	r24, 0x86	; 134
 9a8:	59 f0       	breq	.+22     	; 0x9c0 <vfprintf+0x354>
 9aa:	21 fd       	sbrc	r18, 1
 9ac:	02 c0       	rjmp	.+4      	; 0x9b2 <vfprintf+0x346>
 9ae:	80 e2       	ldi	r24, 0x20	; 32
 9b0:	01 c0       	rjmp	.+2      	; 0x9b4 <vfprintf+0x348>
 9b2:	8b e2       	ldi	r24, 0x2B	; 43
 9b4:	27 fd       	sbrc	r18, 7
 9b6:	8d e2       	ldi	r24, 0x2D	; 45
 9b8:	b7 01       	movw	r22, r14
 9ba:	90 e0       	ldi	r25, 0x00	; 0
 9bc:	0e 94 41 05 	call	0xa82	; 0xa82 <fputc>
 9c0:	a5 14       	cp	r10, r5
 9c2:	38 f4       	brcc	.+14     	; 0x9d2 <vfprintf+0x366>
 9c4:	b7 01       	movw	r22, r14
 9c6:	80 e3       	ldi	r24, 0x30	; 48
 9c8:	90 e0       	ldi	r25, 0x00	; 0
 9ca:	0e 94 41 05 	call	0xa82	; 0xa82 <fputc>
 9ce:	5a 94       	dec	r5
 9d0:	f7 cf       	rjmp	.-18     	; 0x9c0 <vfprintf+0x354>
 9d2:	aa 94       	dec	r10
 9d4:	f4 01       	movw	r30, r8
 9d6:	ea 0d       	add	r30, r10
 9d8:	f1 1d       	adc	r31, r1
 9da:	80 81       	ld	r24, Z
 9dc:	b7 01       	movw	r22, r14
 9de:	90 e0       	ldi	r25, 0x00	; 0
 9e0:	0e 94 41 05 	call	0xa82	; 0xa82 <fputc>
 9e4:	a1 10       	cpse	r10, r1
 9e6:	f5 cf       	rjmp	.-22     	; 0x9d2 <vfprintf+0x366>
 9e8:	33 20       	and	r3, r3
 9ea:	09 f4       	brne	.+2      	; 0x9ee <vfprintf+0x382>
 9ec:	51 ce       	rjmp	.-862    	; 0x690 <vfprintf+0x24>
 9ee:	b7 01       	movw	r22, r14
 9f0:	80 e2       	ldi	r24, 0x20	; 32
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	0e 94 41 05 	call	0xa82	; 0xa82 <fputc>
 9f8:	3a 94       	dec	r3
 9fa:	f6 cf       	rjmp	.-20     	; 0x9e8 <vfprintf+0x37c>
 9fc:	f7 01       	movw	r30, r14
 9fe:	86 81       	ldd	r24, Z+6	; 0x06
 a00:	97 81       	ldd	r25, Z+7	; 0x07
 a02:	02 c0       	rjmp	.+4      	; 0xa08 <vfprintf+0x39c>
 a04:	8f ef       	ldi	r24, 0xFF	; 255
 a06:	9f ef       	ldi	r25, 0xFF	; 255
 a08:	2c 96       	adiw	r28, 0x0c	; 12
 a0a:	e2 e1       	ldi	r30, 0x12	; 18
 a0c:	0c 94 ed 05 	jmp	0xbda	; 0xbda <__epilogue_restores__>

00000a10 <calloc>:
 a10:	0f 93       	push	r16
 a12:	1f 93       	push	r17
 a14:	cf 93       	push	r28
 a16:	df 93       	push	r29
 a18:	86 9f       	mul	r24, r22
 a1a:	80 01       	movw	r16, r0
 a1c:	87 9f       	mul	r24, r23
 a1e:	10 0d       	add	r17, r0
 a20:	96 9f       	mul	r25, r22
 a22:	10 0d       	add	r17, r0
 a24:	11 24       	eor	r1, r1
 a26:	c8 01       	movw	r24, r16
 a28:	0e 94 b0 01 	call	0x360	; 0x360 <malloc>
 a2c:	ec 01       	movw	r28, r24
 a2e:	00 97       	sbiw	r24, 0x00	; 0
 a30:	29 f0       	breq	.+10     	; 0xa3c <calloc+0x2c>
 a32:	a8 01       	movw	r20, r16
 a34:	60 e0       	ldi	r22, 0x00	; 0
 a36:	70 e0       	ldi	r23, 0x00	; 0
 a38:	0e 94 2f 05 	call	0xa5e	; 0xa5e <memset>
 a3c:	ce 01       	movw	r24, r28
 a3e:	df 91       	pop	r29
 a40:	cf 91       	pop	r28
 a42:	1f 91       	pop	r17
 a44:	0f 91       	pop	r16
 a46:	08 95       	ret

00000a48 <strnlen_P>:
 a48:	fc 01       	movw	r30, r24
 a4a:	05 90       	lpm	r0, Z+
 a4c:	61 50       	subi	r22, 0x01	; 1
 a4e:	70 40       	sbci	r23, 0x00	; 0
 a50:	01 10       	cpse	r0, r1
 a52:	d8 f7       	brcc	.-10     	; 0xa4a <strnlen_P+0x2>
 a54:	80 95       	com	r24
 a56:	90 95       	com	r25
 a58:	8e 0f       	add	r24, r30
 a5a:	9f 1f       	adc	r25, r31
 a5c:	08 95       	ret

00000a5e <memset>:
 a5e:	dc 01       	movw	r26, r24
 a60:	01 c0       	rjmp	.+2      	; 0xa64 <memset+0x6>
 a62:	6d 93       	st	X+, r22
 a64:	41 50       	subi	r20, 0x01	; 1
 a66:	50 40       	sbci	r21, 0x00	; 0
 a68:	e0 f7       	brcc	.-8      	; 0xa62 <memset+0x4>
 a6a:	08 95       	ret

00000a6c <strnlen>:
 a6c:	fc 01       	movw	r30, r24
 a6e:	61 50       	subi	r22, 0x01	; 1
 a70:	70 40       	sbci	r23, 0x00	; 0
 a72:	01 90       	ld	r0, Z+
 a74:	01 10       	cpse	r0, r1
 a76:	d8 f7       	brcc	.-10     	; 0xa6e <strnlen+0x2>
 a78:	80 95       	com	r24
 a7a:	90 95       	com	r25
 a7c:	8e 0f       	add	r24, r30
 a7e:	9f 1f       	adc	r25, r31
 a80:	08 95       	ret

00000a82 <fputc>:
 a82:	0f 93       	push	r16
 a84:	1f 93       	push	r17
 a86:	cf 93       	push	r28
 a88:	df 93       	push	r29
 a8a:	18 2f       	mov	r17, r24
 a8c:	09 2f       	mov	r16, r25
 a8e:	eb 01       	movw	r28, r22
 a90:	8b 81       	ldd	r24, Y+3	; 0x03
 a92:	81 fd       	sbrc	r24, 1
 a94:	03 c0       	rjmp	.+6      	; 0xa9c <fputc+0x1a>
 a96:	8f ef       	ldi	r24, 0xFF	; 255
 a98:	9f ef       	ldi	r25, 0xFF	; 255
 a9a:	20 c0       	rjmp	.+64     	; 0xadc <fputc+0x5a>
 a9c:	82 ff       	sbrs	r24, 2
 a9e:	10 c0       	rjmp	.+32     	; 0xac0 <fputc+0x3e>
 aa0:	4e 81       	ldd	r20, Y+6	; 0x06
 aa2:	5f 81       	ldd	r21, Y+7	; 0x07
 aa4:	2c 81       	ldd	r18, Y+4	; 0x04
 aa6:	3d 81       	ldd	r19, Y+5	; 0x05
 aa8:	42 17       	cp	r20, r18
 aaa:	53 07       	cpc	r21, r19
 aac:	7c f4       	brge	.+30     	; 0xacc <fputc+0x4a>
 aae:	e8 81       	ld	r30, Y
 ab0:	f9 81       	ldd	r31, Y+1	; 0x01
 ab2:	9f 01       	movw	r18, r30
 ab4:	2f 5f       	subi	r18, 0xFF	; 255
 ab6:	3f 4f       	sbci	r19, 0xFF	; 255
 ab8:	39 83       	std	Y+1, r19	; 0x01
 aba:	28 83       	st	Y, r18
 abc:	10 83       	st	Z, r17
 abe:	06 c0       	rjmp	.+12     	; 0xacc <fputc+0x4a>
 ac0:	e8 85       	ldd	r30, Y+8	; 0x08
 ac2:	f9 85       	ldd	r31, Y+9	; 0x09
 ac4:	81 2f       	mov	r24, r17
 ac6:	09 95       	icall
 ac8:	89 2b       	or	r24, r25
 aca:	29 f7       	brne	.-54     	; 0xa96 <fputc+0x14>
 acc:	2e 81       	ldd	r18, Y+6	; 0x06
 ace:	3f 81       	ldd	r19, Y+7	; 0x07
 ad0:	2f 5f       	subi	r18, 0xFF	; 255
 ad2:	3f 4f       	sbci	r19, 0xFF	; 255
 ad4:	3f 83       	std	Y+7, r19	; 0x07
 ad6:	2e 83       	std	Y+6, r18	; 0x06
 ad8:	81 2f       	mov	r24, r17
 ada:	90 2f       	mov	r25, r16
 adc:	df 91       	pop	r29
 ade:	cf 91       	pop	r28
 ae0:	1f 91       	pop	r17
 ae2:	0f 91       	pop	r16
 ae4:	08 95       	ret

00000ae6 <__ultoa_invert>:
 ae6:	fa 01       	movw	r30, r20
 ae8:	aa 27       	eor	r26, r26
 aea:	28 30       	cpi	r18, 0x08	; 8
 aec:	51 f1       	breq	.+84     	; 0xb42 <__ultoa_invert+0x5c>
 aee:	20 31       	cpi	r18, 0x10	; 16
 af0:	81 f1       	breq	.+96     	; 0xb52 <__ultoa_invert+0x6c>
 af2:	e8 94       	clt
 af4:	6f 93       	push	r22
 af6:	6e 7f       	andi	r22, 0xFE	; 254
 af8:	6e 5f       	subi	r22, 0xFE	; 254
 afa:	7f 4f       	sbci	r23, 0xFF	; 255
 afc:	8f 4f       	sbci	r24, 0xFF	; 255
 afe:	9f 4f       	sbci	r25, 0xFF	; 255
 b00:	af 4f       	sbci	r26, 0xFF	; 255
 b02:	b1 e0       	ldi	r27, 0x01	; 1
 b04:	3e d0       	rcall	.+124    	; 0xb82 <__ultoa_invert+0x9c>
 b06:	b4 e0       	ldi	r27, 0x04	; 4
 b08:	3c d0       	rcall	.+120    	; 0xb82 <__ultoa_invert+0x9c>
 b0a:	67 0f       	add	r22, r23
 b0c:	78 1f       	adc	r23, r24
 b0e:	89 1f       	adc	r24, r25
 b10:	9a 1f       	adc	r25, r26
 b12:	a1 1d       	adc	r26, r1
 b14:	68 0f       	add	r22, r24
 b16:	79 1f       	adc	r23, r25
 b18:	8a 1f       	adc	r24, r26
 b1a:	91 1d       	adc	r25, r1
 b1c:	a1 1d       	adc	r26, r1
 b1e:	6a 0f       	add	r22, r26
 b20:	71 1d       	adc	r23, r1
 b22:	81 1d       	adc	r24, r1
 b24:	91 1d       	adc	r25, r1
 b26:	a1 1d       	adc	r26, r1
 b28:	20 d0       	rcall	.+64     	; 0xb6a <__ultoa_invert+0x84>
 b2a:	09 f4       	brne	.+2      	; 0xb2e <__ultoa_invert+0x48>
 b2c:	68 94       	set
 b2e:	3f 91       	pop	r19
 b30:	2a e0       	ldi	r18, 0x0A	; 10
 b32:	26 9f       	mul	r18, r22
 b34:	11 24       	eor	r1, r1
 b36:	30 19       	sub	r19, r0
 b38:	30 5d       	subi	r19, 0xD0	; 208
 b3a:	31 93       	st	Z+, r19
 b3c:	de f6       	brtc	.-74     	; 0xaf4 <__ultoa_invert+0xe>
 b3e:	cf 01       	movw	r24, r30
 b40:	08 95       	ret
 b42:	46 2f       	mov	r20, r22
 b44:	47 70       	andi	r20, 0x07	; 7
 b46:	40 5d       	subi	r20, 0xD0	; 208
 b48:	41 93       	st	Z+, r20
 b4a:	b3 e0       	ldi	r27, 0x03	; 3
 b4c:	0f d0       	rcall	.+30     	; 0xb6c <__ultoa_invert+0x86>
 b4e:	c9 f7       	brne	.-14     	; 0xb42 <__ultoa_invert+0x5c>
 b50:	f6 cf       	rjmp	.-20     	; 0xb3e <__ultoa_invert+0x58>
 b52:	46 2f       	mov	r20, r22
 b54:	4f 70       	andi	r20, 0x0F	; 15
 b56:	40 5d       	subi	r20, 0xD0	; 208
 b58:	4a 33       	cpi	r20, 0x3A	; 58
 b5a:	18 f0       	brcs	.+6      	; 0xb62 <__ultoa_invert+0x7c>
 b5c:	49 5d       	subi	r20, 0xD9	; 217
 b5e:	31 fd       	sbrc	r19, 1
 b60:	40 52       	subi	r20, 0x20	; 32
 b62:	41 93       	st	Z+, r20
 b64:	02 d0       	rcall	.+4      	; 0xb6a <__ultoa_invert+0x84>
 b66:	a9 f7       	brne	.-22     	; 0xb52 <__ultoa_invert+0x6c>
 b68:	ea cf       	rjmp	.-44     	; 0xb3e <__ultoa_invert+0x58>
 b6a:	b4 e0       	ldi	r27, 0x04	; 4
 b6c:	a6 95       	lsr	r26
 b6e:	97 95       	ror	r25
 b70:	87 95       	ror	r24
 b72:	77 95       	ror	r23
 b74:	67 95       	ror	r22
 b76:	ba 95       	dec	r27
 b78:	c9 f7       	brne	.-14     	; 0xb6c <__ultoa_invert+0x86>
 b7a:	00 97       	sbiw	r24, 0x00	; 0
 b7c:	61 05       	cpc	r22, r1
 b7e:	71 05       	cpc	r23, r1
 b80:	08 95       	ret
 b82:	9b 01       	movw	r18, r22
 b84:	ac 01       	movw	r20, r24
 b86:	0a 2e       	mov	r0, r26
 b88:	06 94       	lsr	r0
 b8a:	57 95       	ror	r21
 b8c:	47 95       	ror	r20
 b8e:	37 95       	ror	r19
 b90:	27 95       	ror	r18
 b92:	ba 95       	dec	r27
 b94:	c9 f7       	brne	.-14     	; 0xb88 <__ultoa_invert+0xa2>
 b96:	62 0f       	add	r22, r18
 b98:	73 1f       	adc	r23, r19
 b9a:	84 1f       	adc	r24, r20
 b9c:	95 1f       	adc	r25, r21
 b9e:	a0 1d       	adc	r26, r0
 ba0:	08 95       	ret

00000ba2 <__prologue_saves__>:
 ba2:	2f 92       	push	r2
 ba4:	3f 92       	push	r3
 ba6:	4f 92       	push	r4
 ba8:	5f 92       	push	r5
 baa:	6f 92       	push	r6
 bac:	7f 92       	push	r7
 bae:	8f 92       	push	r8
 bb0:	9f 92       	push	r9
 bb2:	af 92       	push	r10
 bb4:	bf 92       	push	r11
 bb6:	cf 92       	push	r12
 bb8:	df 92       	push	r13
 bba:	ef 92       	push	r14
 bbc:	ff 92       	push	r15
 bbe:	0f 93       	push	r16
 bc0:	1f 93       	push	r17
 bc2:	cf 93       	push	r28
 bc4:	df 93       	push	r29
 bc6:	cd b7       	in	r28, 0x3d	; 61
 bc8:	de b7       	in	r29, 0x3e	; 62
 bca:	ca 1b       	sub	r28, r26
 bcc:	db 0b       	sbc	r29, r27
 bce:	0f b6       	in	r0, 0x3f	; 63
 bd0:	f8 94       	cli
 bd2:	de bf       	out	0x3e, r29	; 62
 bd4:	0f be       	out	0x3f, r0	; 63
 bd6:	cd bf       	out	0x3d, r28	; 61
 bd8:	09 94       	ijmp

00000bda <__epilogue_restores__>:
 bda:	2a 88       	ldd	r2, Y+18	; 0x12
 bdc:	39 88       	ldd	r3, Y+17	; 0x11
 bde:	48 88       	ldd	r4, Y+16	; 0x10
 be0:	5f 84       	ldd	r5, Y+15	; 0x0f
 be2:	6e 84       	ldd	r6, Y+14	; 0x0e
 be4:	7d 84       	ldd	r7, Y+13	; 0x0d
 be6:	8c 84       	ldd	r8, Y+12	; 0x0c
 be8:	9b 84       	ldd	r9, Y+11	; 0x0b
 bea:	aa 84       	ldd	r10, Y+10	; 0x0a
 bec:	b9 84       	ldd	r11, Y+9	; 0x09
 bee:	c8 84       	ldd	r12, Y+8	; 0x08
 bf0:	df 80       	ldd	r13, Y+7	; 0x07
 bf2:	ee 80       	ldd	r14, Y+6	; 0x06
 bf4:	fd 80       	ldd	r15, Y+5	; 0x05
 bf6:	0c 81       	ldd	r16, Y+4	; 0x04
 bf8:	1b 81       	ldd	r17, Y+3	; 0x03
 bfa:	aa 81       	ldd	r26, Y+2	; 0x02
 bfc:	b9 81       	ldd	r27, Y+1	; 0x01
 bfe:	ce 0f       	add	r28, r30
 c00:	d1 1d       	adc	r29, r1
 c02:	0f b6       	in	r0, 0x3f	; 63
 c04:	f8 94       	cli
 c06:	de bf       	out	0x3e, r29	; 62
 c08:	0f be       	out	0x3f, r0	; 63
 c0a:	cd bf       	out	0x3d, r28	; 61
 c0c:	ed 01       	movw	r28, r26
 c0e:	08 95       	ret

00000c10 <_exit>:
 c10:	f8 94       	cli

00000c12 <__stop_program>:
 c12:	ff cf       	rjmp	.-2      	; 0xc12 <__stop_program>
