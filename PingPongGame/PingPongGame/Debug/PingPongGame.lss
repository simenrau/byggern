
PingPongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000084  00800100  00000ae2  00000b76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ae2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800184  00800184  00000bfa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000bfa  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000130  00000000  00000000  00000c56  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000121b  00000000  00000000  00000d86  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000676  00000000  00000000  00001fa1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006b4  00000000  00000000  00002617  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002e8  00000000  00000000  00002ccc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000436  00000000  00000000  00002fb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ad9  00000000  00000000  000033ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000130  00000000  00000000  00003ec3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e2 ee       	ldi	r30, 0xE2	; 226
  84:	fa e0       	ldi	r31, 0x0A	; 10
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a4 38       	cpi	r26, 0x84	; 132
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a4 e8       	ldi	r26, 0x84	; 132
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 39       	cpi	r26, 0x90	; 144
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 9a 00 	call	0x134	; 0x134 <main>
  a6:	0c 94 6f 05 	jmp	0xade	; 0xade <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <CAN_init>:
#define CONFIG 0x80

void CAN_init(void)
{
	
		MCP_reset();
  ae:	0e 94 be 00 	call	0x17c	; 0x17c <MCP_reset>

		MCP_write(MCP_CANCTRL, 0x80);		
  b2:	60 e8       	ldi	r22, 0x80	; 128
  b4:	8f e0       	ldi	r24, 0x0F	; 15
  b6:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>

		MCP_write(MCP_CNF1, 0x20); // Write config 1
  ba:	60 e2       	ldi	r22, 0x20	; 32
  bc:	8a e2       	ldi	r24, 0x2A	; 42
  be:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>
		MCP_write(MCP_CNF2, 0x92); // Write config 2
  c2:	62 e9       	ldi	r22, 0x92	; 146
  c4:	89 e2       	ldi	r24, 0x29	; 41
  c6:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>
		MCP_write(MCP_CNF3, 0xC2); // Write config 3
  ca:	62 ec       	ldi	r22, 0xC2	; 194
  cc:	88 e2       	ldi	r24, 0x28	; 40
  ce:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>
		
		MCP_write(MCP_CANINTE, 0x03);	//
  d2:	63 e0       	ldi	r22, 0x03	; 3
  d4:	8b e2       	ldi	r24, 0x2B	; 43
  d6:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>
		MCP_write(MCP_CANINTF, 0x00);	//
  da:	60 e0       	ldi	r22, 0x00	; 0
  dc:	8c e2       	ldi	r24, 0x2C	; 44
  de:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>
		MCP_write(MCP_EFLG, 0x00);		//
  e2:	60 e0       	ldi	r22, 0x00	; 0
  e4:	8d e2       	ldi	r24, 0x2D	; 45
  e6:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>
		
		MCP_write(0x0C, 0x00);			 // Disable all interrupts
  ea:	60 e0       	ldi	r22, 0x00	; 0
  ec:	8c e0       	ldi	r24, 0x0C	; 12
  ee:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>
		MCP_write(0x0D, 0x00);			// Clear TXRTSCTRL
  f2:	60 e0       	ldi	r22, 0x00	; 0
  f4:	8d e0       	ldi	r24, 0x0D	; 13
  f6:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>
		
		
		MCP_write(MCP_RXB0CTRL, 0x60);		// Receive buffer 0 control (turn mask/filters off, receive any message) 
  fa:	60 e6       	ldi	r22, 0x60	; 96
  fc:	80 e6       	ldi	r24, 0x60	; 96
  fe:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>
		MCP_write(MCP_RXB1CTRL, 0x60);		// Receive buffer 1 control (turn mask/filters off, receive any message)
 102:	60 e6       	ldi	r22, 0x60	; 96
 104:	80 e7       	ldi	r24, 0x70	; 112
 106:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>


		MCP_write(MCP_RXM0SIDH, 0x00);		// Clear ID masks
 10a:	60 e0       	ldi	r22, 0x00	; 0
 10c:	80 e2       	ldi	r24, 0x20	; 32
 10e:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>
		MCP_write(MCP_RXM0SIDL, 0x00);		// Clear ID masks
 112:	60 e0       	ldi	r22, 0x00	; 0
 114:	81 e2       	ldi	r24, 0x21	; 33
 116:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>
		MCP_write(MCP_RXM0EID8, 0x00);		// Clear ID masks
 11a:	60 e0       	ldi	r22, 0x00	; 0
 11c:	82 e2       	ldi	r24, 0x22	; 34
 11e:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>
		MCP_write(MCP_RXM0EID0, 0x00);		// Clear ID masks
 122:	60 e0       	ldi	r22, 0x00	; 0
 124:	83 e2       	ldi	r24, 0x23	; 35
 126:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>

		MCP_write(MCP_CANCTRL, 0x44);		// Enable can controller
 12a:	64 e4       	ldi	r22, 0x44	; 68
 12c:	8f e0       	ldi	r24, 0x0F	; 15
 12e:	0e 94 df 00 	call	0x1be	; 0x1be <MCP_write>
 132:	08 95       	ret

00000134 <main>:
		}
		if (y_volt > 135 && select_menu > 1)
		{
			select_menu--;
		}
		if(x_volt < 60)
 134:	1f 93       	push	r17
		{
			for (j = 0; j < 11; j++)
			{
				for (i = 0; i < 5; i++)
				{
					if(select_menu==k)
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	8f e1       	ldi	r24, 0x1F	; 31
					{
						oled_set_column(i+(j*5));
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	0e 94 08 01 	call	0x210	; 0x210 <USART_Init>
 142:	0e 94 c8 00 	call	0x190	; 0x190 <MCP_init>
						write_d(~pgm_read_byte(&font5[fotball[k][j] - ' '][i]));
 146:	0e 94 57 00 	call	0xae	; 0xae <CAN_init>
 14a:	10 e0       	ldi	r17, 0x00	; 0
 14c:	cf e7       	ldi	r28, 0x7F	; 127
 14e:	d1 e0       	ldi	r29, 0x01	; 1
 150:	81 2f       	mov	r24, r17
 152:	0e 94 cf 00 	call	0x19e	; 0x19e <MCP_read>
 156:	1f 92       	push	r1
 158:	8f 93       	push	r24
 15a:	df 93       	push	r29
 15c:	cf 93       	push	r28
 15e:	0e 94 62 01 	call	0x2c4	; 0x2c4 <printf>
 162:	1f 5f       	subi	r17, 0xFF	; 255
 164:	0f 90       	pop	r0
 166:	0f 90       	pop	r0
 168:	0f 90       	pop	r0
 16a:	0f 90       	pop	r0
 16c:	1f 3f       	cpi	r17, 0xFF	; 255
 16e:	81 f7       	brne	.-32     	; 0x150 <main+0x1c>
					}
					else
					{
						oled_set_column(i+(j*5));
 170:	80 e0       	ldi	r24, 0x00	; 0
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	1f 91       	pop	r17
						write_d(pgm_read_byte(&font5[fotball[k][j] - ' '][i]));
 17a:	08 95       	ret

0000017c <MCP_reset>:
	return 0;
}

int MCP_reset(void)
{
	PORTB |= ~(1 << SS);
 17c:	88 b3       	in	r24, 0x18	; 24
 17e:	8f 6e       	ori	r24, 0xEF	; 239
 180:	88 bb       	out	0x18, r24	; 24
	
	SPI_MasterTransmit(MCP_RESET);
 182:	80 ec       	ldi	r24, 0xC0	; 192
 184:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <SPI_MasterTransmit>
	
	PORTB |= (1 << SS);
 188:	c4 9a       	sbi	0x18, 4	; 24
	
	return 0;
}
 18a:	80 e0       	ldi	r24, 0x00	; 0
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	08 95       	ret

00000190 <MCP_init>:
#include "SPI.h"
#include "MCP2515.h"

int MCP_init(void)
{
	SPI_MasterInit();
 190:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <SPI_MasterInit>
	
	MCP_reset();
 194:	0e 94 be 00 	call	0x17c	; 0x17c <MCP_reset>
	
	return 0;
}
 198:	80 e0       	ldi	r24, 0x00	; 0
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	08 95       	ret

0000019e <MCP_read>:
	
	return 0;
}

char MCP_read(char address)
{
 19e:	cf 93       	push	r28
 1a0:	c8 2f       	mov	r28, r24
	PORTB |= ~(1 << SS); 
 1a2:	88 b3       	in	r24, 0x18	; 24
 1a4:	8f 6e       	ori	r24, 0xEF	; 239
 1a6:	88 bb       	out	0x18, r24	; 24
		
	SPI_MasterTransmit(MCP_READ);
 1a8:	83 e0       	ldi	r24, 0x03	; 3
 1aa:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <SPI_MasterTransmit>
	SPI_MasterTransmit(address);
 1ae:	8c 2f       	mov	r24, r28
 1b0:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <SPI_MasterTransmit>
	
	char data = SPI_SlaveReceive();
 1b4:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <SPI_SlaveReceive>
	
	PORTB |= (1 << SS);
 1b8:	c4 9a       	sbi	0x18, 4	; 24
	
	return data;

}
 1ba:	cf 91       	pop	r28
 1bc:	08 95       	ret

000001be <MCP_write>:

void MCP_write(char address, char data)
{
 1be:	cf 93       	push	r28
 1c0:	df 93       	push	r29
 1c2:	d8 2f       	mov	r29, r24
 1c4:	c6 2f       	mov	r28, r22
	PORTB |= ~(1 << SS); 
 1c6:	88 b3       	in	r24, 0x18	; 24
 1c8:	8f 6e       	ori	r24, 0xEF	; 239
 1ca:	88 bb       	out	0x18, r24	; 24
	
	SPI_MasterTransmit(MCP_WRITE);
 1cc:	82 e0       	ldi	r24, 0x02	; 2
 1ce:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <SPI_MasterTransmit>
	SPI_MasterTransmit(address);
 1d2:	8d 2f       	mov	r24, r29
 1d4:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <SPI_MasterTransmit>
	SPI_MasterTransmit(data);
 1d8:	8c 2f       	mov	r24, r28
 1da:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <SPI_MasterTransmit>
	
	PORTB |= (1 << SS);
 1de:	c4 9a       	sbi	0x18, 4	; 24
}
 1e0:	df 91       	pop	r29
 1e2:	cf 91       	pop	r28
 1e4:	08 95       	ret

000001e6 <SPI_MasterInit>:
#define SCK PB7


void SPI_MasterInit(void)
{
	DDRB = (1 << MOSI) | (1 << SS) | (1 << SCK);
 1e6:	80 eb       	ldi	r24, 0xB0	; 176
 1e8:	87 bb       	out	0x17, r24	; 23
	
	SPCR = (1 << SPE) | (1 << MSTR) | (1 << SPR0);
 1ea:	81 e5       	ldi	r24, 0x51	; 81
 1ec:	8d b9       	out	0x0d, r24	; 13
 1ee:	08 95       	ret

000001f0 <SPI_MasterTransmit>:
}


void SPI_MasterTransmit(char cdata)
{
	SPDR = cdata;
 1f0:	8f b9       	out	0x0f, r24	; 15
	
	while(!(SPSR & (1 << SPIF)));
 1f2:	77 9b       	sbis	0x0e, 7	; 14
 1f4:	fe cf       	rjmp	.-4      	; 0x1f2 <SPI_MasterTransmit+0x2>
}
 1f6:	08 95       	ret

000001f8 <SPI_SlaveReceive>:


uint8_t SPI_SlaveReceive(void)
{
	/* Wait for reception complete */
	while(!(SPSR & (1<<SPIF)));
 1f8:	77 9b       	sbis	0x0e, 7	; 14
 1fa:	fe cf       	rjmp	.-4      	; 0x1f8 <SPI_SlaveReceive>
	/* Return data register */
	return SPDR;
 1fc:	8f b1       	in	r24, 0x0f	; 15
 1fe:	08 95       	ret

00000200 <USART_Transmit>:
}

void USART_Transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while ( !(UCSR0A & (1 << UDRE0)) );
 200:	5d 9b       	sbis	0x0b, 5	; 11
 202:	fe cf       	rjmp	.-4      	; 0x200 <USART_Transmit>
	
	/* Put data into buffer, sends the data */
	UDR0 = data;
 204:	8c b9       	out	0x0c, r24	; 12
 206:	08 95       	ret

00000208 <USART_Receive>:
}

unsigned char USART_Receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1 << RXC0)) );
 208:	5f 9b       	sbis	0x0b, 7	; 11
 20a:	fe cf       	rjmp	.-4      	; 0x208 <USART_Receive>
	
	/* Get and return received data from buffer */
	return UDR0;
 20c:	8c b1       	in	r24, 0x0c	; 12
}
 20e:	08 95       	ret

00000210 <USART_Init>:

FILE *uart;

void USART_Init(unsigned int ubrr)
{
	UBRR0H = (unsigned char)(ubrr >> 8);
 210:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 212:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
 214:	88 e1       	ldi	r24, 0x18	; 24
 216:	8a b9       	out	0x0a, r24	; 10
	
	uart = fdevopen(&USART_Transmit, &USART_Receive);
 218:	64 e0       	ldi	r22, 0x04	; 4
 21a:	71 e0       	ldi	r23, 0x01	; 1
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	91 e0       	ldi	r25, 0x01	; 1
 220:	0e 94 17 01 	call	0x22e	; 0x22e <fdevopen>
 224:	90 93 85 01 	sts	0x0185, r25
 228:	80 93 84 01 	sts	0x0184, r24
 22c:	08 95       	ret

0000022e <fdevopen>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 22e:	0f 93       	push	r16
 230:	1f 93       	push	r17
 232:	cf 93       	push	r28
 234:	df 93       	push	r29
 236:	ec 01       	movw	r28, r24
			
	int count_menu = 4;
	int select_menu = 1;
	int sub_menu = 0;
	while(1){
	while(sub_menu == 1)
 238:	8b 01       	movw	r16, r22
 23a:	00 97       	sbiw	r24, 0x00	; 0
 23c:	31 f4       	brne	.+12     	; 0x24a <fdevopen+0x1c>
 23e:	61 15       	cp	r22, r1
 240:	71 05       	cpc	r23, r1
			oled_set_page(k+1);
		}
		_delay_ms(delay);
	}
	
	while (sub_menu == 0)
 242:	19 f4       	brne	.+6      	; 0x24a <fdevopen+0x1c>
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	90 e0       	ldi	r25, 0x00	; 0
	{
		int delay = 500; //delay in milliseconds
		oled_set_column(0);
 248:	38 c0       	rjmp	.+112    	; 0x2ba <fdevopen+0x8c>
 24a:	6e e0       	ldi	r22, 0x0E	; 14
 24c:	70 e0       	ldi	r23, 0x00	; 0
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	0e 94 48 03 	call	0x690	; 0x690 <calloc>
 256:	fc 01       	movw	r30, r24
 258:	00 97       	sbiw	r24, 0x00	; 0
 25a:	a1 f3       	breq	.-24     	; 0x244 <fdevopen+0x16>
 25c:	80 e8       	ldi	r24, 0x80	; 128
 25e:	83 83       	std	Z+3, r24	; 0x03
		oled_set_page(0);
 260:	01 15       	cp	r16, r1
 262:	11 05       	cpc	r17, r1
 264:	71 f0       	breq	.+28     	; 0x282 <fdevopen+0x54>
 266:	13 87       	std	Z+11, r17	; 0x0b
 268:	02 87       	std	Z+10, r16	; 0x0a
 26a:	81 e8       	ldi	r24, 0x81	; 129
 26c:	83 83       	std	Z+3, r24	; 0x03
 26e:	80 91 86 01 	lds	r24, 0x0186
 272:	90 91 87 01 	lds	r25, 0x0187
 276:	89 2b       	or	r24, r25
		int i,j,k;
		
		unsigned int x_volt = read_adc(ADC_CHANNEL_JOY_X);
 278:	21 f4       	brne	.+8      	; 0x282 <fdevopen+0x54>
 27a:	f0 93 87 01 	sts	0x0187, r31
 27e:	e0 93 86 01 	sts	0x0186, r30
		unsigned int y_volt = read_adc(ADC_CHANNEL_JOY_Y);
 282:	20 97       	sbiw	r28, 0x00	; 0
 284:	c9 f0       	breq	.+50     	; 0x2b8 <fdevopen+0x8a>
 286:	d1 87       	std	Z+9, r29	; 0x09
 288:	c0 87       	std	Z+8, r28	; 0x08
 28a:	83 81       	ldd	r24, Z+3	; 0x03
 28c:	82 60       	ori	r24, 0x02	; 2
		//printf("%d %d\n", x_volt, y_volt);
		
		if (y_volt < 125 && select_menu < count_menu)
 28e:	83 83       	std	Z+3, r24	; 0x03
 290:	80 91 88 01 	lds	r24, 0x0188
 294:	90 91 89 01 	lds	r25, 0x0189
 298:	89 2b       	or	r24, r25
 29a:	71 f4       	brne	.+28     	; 0x2b8 <fdevopen+0x8a>
		{
			select_menu++;
 29c:	f0 93 89 01 	sts	0x0189, r31
 2a0:	e0 93 88 01 	sts	0x0188, r30
		}
		if (y_volt > 130 && select_menu > 1)
 2a4:	80 91 8a 01 	lds	r24, 0x018A
 2a8:	90 91 8b 01 	lds	r25, 0x018B
 2ac:	89 2b       	or	r24, r25
 2ae:	21 f4       	brne	.+8      	; 0x2b8 <fdevopen+0x8a>
		{
			select_menu--;
 2b0:	f0 93 8b 01 	sts	0x018B, r31
 2b4:	e0 93 8a 01 	sts	0x018A, r30
		}
		printf("%d\n",select_menu);
 2b8:	cf 01       	movw	r24, r30
 2ba:	df 91       	pop	r29
 2bc:	cf 91       	pop	r28
 2be:	1f 91       	pop	r17
 2c0:	0f 91       	pop	r16
 2c2:	08 95       	ret

000002c4 <printf>:
 2c4:	a0 e0       	ldi	r26, 0x00	; 0
		
		if(x_volt > 135 && select_menu == 2)
 2c6:	b0 e0       	ldi	r27, 0x00	; 0
 2c8:	e8 e6       	ldi	r30, 0x68	; 104
 2ca:	f1 e0       	ldi	r31, 0x01	; 1
 2cc:	0c 94 48 05 	jmp	0xa90	; 0xa90 <__prologue_saves__+0x20>
 2d0:	fe 01       	movw	r30, r28
 2d2:	35 96       	adiw	r30, 0x05	; 5
 2d4:	61 91       	ld	r22, Z+
 2d6:	71 91       	ld	r23, Z+
 2d8:	af 01       	movw	r20, r30
 2da:	80 91 88 01 	lds	r24, 0x0188
 2de:	90 91 89 01 	lds	r25, 0x0189
 2e2:	0e 94 76 01 	call	0x2ec	; 0x2ec <vfprintf>
 2e6:	e2 e0       	ldi	r30, 0x02	; 2
		" Arsenal   ",
		" Man.Utd.  ",
	};
			
	int count_menu = 4;
	int select_menu = 1;
 2e8:	0c 94 64 05 	jmp	0xac8	; 0xac8 <__epilogue_restores__+0x20>

000002ec <vfprintf>:
 2ec:	ac e0       	ldi	r26, 0x0C	; 12
 2ee:	b0 e0       	ldi	r27, 0x00	; 0
 2f0:	ec e7       	ldi	r30, 0x7C	; 124
 2f2:	f1 e0       	ldi	r31, 0x01	; 1
 2f4:	0c 94 38 05 	jmp	0xa70	; 0xa70 <__prologue_saves__>
 2f8:	7c 01       	movw	r14, r24
 2fa:	6b 01       	movw	r12, r22
 2fc:	8a 01       	movw	r16, r20
 2fe:	fc 01       	movw	r30, r24
 300:	17 82       	std	Z+7, r1	; 0x07
 302:	16 82       	std	Z+6, r1	; 0x06
 304:	83 81       	ldd	r24, Z+3	; 0x03
 306:	81 ff       	sbrs	r24, 1
 308:	bd c1       	rjmp	.+890    	; 0x684 <__stack+0x185>
 30a:	ce 01       	movw	r24, r28
 30c:	01 96       	adiw	r24, 0x01	; 1
 30e:	4c 01       	movw	r8, r24
 310:	f7 01       	movw	r30, r14
 312:	93 81       	ldd	r25, Z+3	; 0x03
 314:	f6 01       	movw	r30, r12
 316:	93 fd       	sbrc	r25, 3
 318:	85 91       	lpm	r24, Z+
 31a:	93 ff       	sbrs	r25, 3
 31c:	81 91       	ld	r24, Z+
 31e:	6f 01       	movw	r12, r30
 320:	88 23       	and	r24, r24
 322:	09 f4       	brne	.+2      	; 0x326 <vfprintf+0x3a>
 324:	ab c1       	rjmp	.+854    	; 0x67c <__stack+0x17d>
		printf("%d\n",select_menu);
		
		if(x_volt > 135 && select_menu == 2)
		{
			sub_menu = 1;
			clear_oled();
 326:	85 32       	cpi	r24, 0x25	; 37
 328:	39 f4       	brne	.+14     	; 0x338 <vfprintf+0x4c>
		}
		printf("%d\n",select_menu);
		
		if(x_volt > 135 && select_menu == 2)
		{
			sub_menu = 1;
 32a:	93 fd       	sbrc	r25, 3
 32c:	85 91       	lpm	r24, Z+
 32e:	93 ff       	sbrs	r25, 3
			clear_oled();
			select_menu = 1;
 330:	81 91       	ld	r24, Z+
 332:	6f 01       	movw	r12, r30
 334:	85 32       	cpi	r24, 0x25	; 37
			break;
 336:	29 f4       	brne	.+10     	; 0x342 <vfprintf+0x56>
		{
			for (j = 0; j < 13; j++)
			{
				for (i = 0; i < 5; i++)
				{
					if(select_menu==k)
 338:	b7 01       	movw	r22, r14
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	0e 94 a8 04 	call	0x950	; 0x950 <fputc>
					{
						oled_set_column(i+(j*5));
 340:	e7 cf       	rjmp	.-50     	; 0x310 <vfprintf+0x24>
 342:	51 2c       	mov	r5, r1
 344:	31 2c       	mov	r3, r1
 346:	20 e0       	ldi	r18, 0x00	; 0
						write_d(~pgm_read_byte(&font5[menu[k][j] - ' '][i]));
 348:	20 32       	cpi	r18, 0x20	; 32
 34a:	a0 f4       	brcc	.+40     	; 0x374 <vfprintf+0x88>
 34c:	8b 32       	cpi	r24, 0x2B	; 43
 34e:	69 f0       	breq	.+26     	; 0x36a <vfprintf+0x7e>
 350:	30 f4       	brcc	.+12     	; 0x35e <vfprintf+0x72>
 352:	80 32       	cpi	r24, 0x20	; 32
 354:	59 f0       	breq	.+22     	; 0x36c <vfprintf+0x80>
 356:	83 32       	cpi	r24, 0x23	; 35
 358:	69 f4       	brne	.+26     	; 0x374 <vfprintf+0x88>
 35a:	20 61       	ori	r18, 0x10	; 16
 35c:	2c c0       	rjmp	.+88     	; 0x3b6 <vfprintf+0xca>
 35e:	8d 32       	cpi	r24, 0x2D	; 45
 360:	39 f0       	breq	.+14     	; 0x370 <vfprintf+0x84>
 362:	80 33       	cpi	r24, 0x30	; 48
 364:	39 f4       	brne	.+14     	; 0x374 <vfprintf+0x88>
 366:	21 60       	ori	r18, 0x01	; 1
 368:	26 c0       	rjmp	.+76     	; 0x3b6 <vfprintf+0xca>
 36a:	22 60       	ori	r18, 0x02	; 2
 36c:	24 60       	ori	r18, 0x04	; 4
 36e:	23 c0       	rjmp	.+70     	; 0x3b6 <vfprintf+0xca>
 370:	28 60       	ori	r18, 0x08	; 8
					}
					else
					{
						oled_set_column(i+(j*5));
 372:	21 c0       	rjmp	.+66     	; 0x3b6 <vfprintf+0xca>
 374:	27 fd       	sbrc	r18, 7
 376:	27 c0       	rjmp	.+78     	; 0x3c6 <vfprintf+0xda>
 378:	30 ed       	ldi	r19, 0xD0	; 208
 37a:	38 0f       	add	r19, r24
						write_d(pgm_read_byte(&font5[menu[k][j] - ' '][i]));
 37c:	3a 30       	cpi	r19, 0x0A	; 10
 37e:	78 f4       	brcc	.+30     	; 0x39e <vfprintf+0xb2>
 380:	26 ff       	sbrs	r18, 6
 382:	06 c0       	rjmp	.+12     	; 0x390 <vfprintf+0xa4>
 384:	fa e0       	ldi	r31, 0x0A	; 10
 386:	5f 9e       	mul	r5, r31
 388:	30 0d       	add	r19, r0
 38a:	11 24       	eor	r1, r1
 38c:	53 2e       	mov	r5, r19
 38e:	13 c0       	rjmp	.+38     	; 0x3b6 <vfprintf+0xca>
 390:	8a e0       	ldi	r24, 0x0A	; 10
 392:	38 9e       	mul	r3, r24
 394:	30 0d       	add	r19, r0
 396:	11 24       	eor	r1, r1
 398:	33 2e       	mov	r3, r19
 39a:	20 62       	ori	r18, 0x20	; 32
 39c:	0c c0       	rjmp	.+24     	; 0x3b6 <vfprintf+0xca>
 39e:	8e 32       	cpi	r24, 0x2E	; 46
		}
		for (k = 0; k < 5; k++)
		{
			for (j = 0; j < 13; j++)
			{
				for (i = 0; i < 5; i++)
 3a0:	21 f4       	brne	.+8      	; 0x3aa <vfprintf+0xbe>
 3a2:	26 fd       	sbrc	r18, 6
 3a4:	6b c1       	rjmp	.+726    	; 0x67c <__stack+0x17d>
 3a6:	20 64       	ori	r18, 0x40	; 64
 3a8:	06 c0       	rjmp	.+12     	; 0x3b6 <vfprintf+0xca>
 3aa:	8c 36       	cpi	r24, 0x6C	; 108
 3ac:	11 f4       	brne	.+4      	; 0x3b2 <vfprintf+0xc6>
 3ae:	20 68       	ori	r18, 0x80	; 128
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <vfprintf+0xca>
 3b2:	88 36       	cpi	r24, 0x68	; 104
 3b4:	41 f4       	brne	.+16     	; 0x3c6 <vfprintf+0xda>
			select_menu = 1;
			break;
		}
		for (k = 0; k < 5; k++)
		{
			for (j = 0; j < 13; j++)
 3b6:	f6 01       	movw	r30, r12
 3b8:	93 fd       	sbrc	r25, 3
 3ba:	85 91       	lpm	r24, Z+
 3bc:	93 ff       	sbrs	r25, 3
 3be:	81 91       	ld	r24, Z+
 3c0:	6f 01       	movw	r12, r30
 3c2:	81 11       	cpse	r24, r1
 3c4:	c1 cf       	rjmp	.-126    	; 0x348 <vfprintf+0x5c>
 3c6:	98 2f       	mov	r25, r24
		" Arsenal   ",
		" Man.Utd.  ",
	};
			
	int count_menu = 4;
	int select_menu = 1;
 3c8:	9f 7d       	andi	r25, 0xDF	; 223
 3ca:	95 54       	subi	r25, 0x45	; 69
 3cc:	93 30       	cpi	r25, 0x03	; 3
 3ce:	28 f4       	brcc	.+10     	; 0x3da <vfprintf+0xee>
 3d0:	0c 5f       	subi	r16, 0xFC	; 252
 3d2:	1f 4f       	sbci	r17, 0xFF	; 255
 3d4:	ff e3       	ldi	r31, 0x3F	; 63
 3d6:	f9 83       	std	Y+1, r31	; 0x01
 3d8:	0d c0       	rjmp	.+26     	; 0x3f4 <vfprintf+0x108>
 3da:	83 36       	cpi	r24, 0x63	; 99
 3dc:	31 f0       	breq	.+12     	; 0x3ea <vfprintf+0xfe>
						oled_set_column(i+(j*5));
						write_d(pgm_read_byte(&font5[menu[k][j] - ' '][i]));
					}
				}
			}			
			oled_set_page(k+1);
 3de:	83 37       	cpi	r24, 0x73	; 115
 3e0:	71 f0       	breq	.+28     	; 0x3fe <vfprintf+0x112>
 3e2:	83 35       	cpi	r24, 0x53	; 83
 3e4:	09 f0       	breq	.+2      	; 0x3e8 <vfprintf+0xfc>
 3e6:	5b c0       	rjmp	.+182    	; 0x49e <vfprintf+0x1b2>
 3e8:	22 c0       	rjmp	.+68     	; 0x42e <vfprintf+0x142>
 3ea:	f8 01       	movw	r30, r16
 3ec:	80 81       	ld	r24, Z
 3ee:	89 83       	std	Y+1, r24	; 0x01
			sub_menu = 1;
			clear_oled();
			select_menu = 1;
			break;
		}
		for (k = 0; k < 5; k++)
 3f0:	0e 5f       	subi	r16, 0xFE	; 254
 3f2:	1f 4f       	sbci	r17, 0xFF	; 255
 3f4:	44 24       	eor	r4, r4
 3f6:	43 94       	inc	r4
 3f8:	51 2c       	mov	r5, r1
 3fa:	54 01       	movw	r10, r8
 3fc:	15 c0       	rjmp	.+42     	; 0x428 <vfprintf+0x13c>
 3fe:	38 01       	movw	r6, r16
 400:	f2 e0       	ldi	r31, 0x02	; 2
 402:	6f 0e       	add	r6, r31
		" Arsenal   ",
		" Man.Utd.  ",
	};
			
	int count_menu = 4;
	int select_menu = 1;
 404:	71 1c       	adc	r7, r1
 406:	f8 01       	movw	r30, r16
 408:	a0 80       	ld	r10, Z
 40a:	b1 80       	ldd	r11, Z+1	; 0x01
 40c:	26 ff       	sbrs	r18, 6
 40e:	03 c0       	rjmp	.+6      	; 0x416 <vfprintf+0x12a>
 410:	65 2d       	mov	r22, r5
 412:	70 e0       	ldi	r23, 0x00	; 0
 414:	02 c0       	rjmp	.+4      	; 0x41a <vfprintf+0x12e>
 416:	6f ef       	ldi	r22, 0xFF	; 255
 418:	7f ef       	ldi	r23, 0xFF	; 255
	
		if (y_volt < 125 && select_menu < count_menu-2)
		{
			select_menu++;
		}
		if (y_volt > 135 && select_menu > 1)
 41a:	c5 01       	movw	r24, r10
 41c:	2c 87       	std	Y+12, r18	; 0x0c
 41e:	0e 94 9d 04 	call	0x93a	; 0x93a <strnlen>
 422:	2c 01       	movw	r4, r24
 424:	83 01       	movw	r16, r6
 426:	2c 85       	ldd	r18, Y+12	; 0x0c
 428:	2f 77       	andi	r18, 0x7F	; 127
 42a:	22 2e       	mov	r2, r18
 42c:	17 c0       	rjmp	.+46     	; 0x45c <vfprintf+0x170>
 42e:	38 01       	movw	r6, r16
 430:	f2 e0       	ldi	r31, 0x02	; 2
 432:	6f 0e       	add	r6, r31
 434:	71 1c       	adc	r7, r1
 436:	f8 01       	movw	r30, r16
 438:	a0 80       	ld	r10, Z
 43a:	b1 80       	ldd	r11, Z+1	; 0x01
 43c:	26 ff       	sbrs	r18, 6
 43e:	03 c0       	rjmp	.+6      	; 0x446 <vfprintf+0x15a>
 440:	65 2d       	mov	r22, r5
 442:	70 e0       	ldi	r23, 0x00	; 0
 444:	02 c0       	rjmp	.+4      	; 0x44a <vfprintf+0x15e>
 446:	6f ef       	ldi	r22, 0xFF	; 255
 448:	7f ef       	ldi	r23, 0xFF	; 255
 44a:	c5 01       	movw	r24, r10
 44c:	2c 87       	std	Y+12, r18	; 0x0c
 44e:	0e 94 8b 04 	call	0x916	; 0x916 <strnlen_P>
 452:	2c 01       	movw	r4, r24
 454:	2c 85       	ldd	r18, Y+12	; 0x0c
 456:	20 68       	ori	r18, 0x80	; 128
 458:	22 2e       	mov	r2, r18
 45a:	83 01       	movw	r16, r6
 45c:	23 fc       	sbrc	r2, 3
 45e:	1b c0       	rjmp	.+54     	; 0x496 <vfprintf+0x1aa>
 460:	83 2d       	mov	r24, r3
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	48 16       	cp	r4, r24
 466:	59 06       	cpc	r5, r25
 468:	b0 f4       	brcc	.+44     	; 0x496 <vfprintf+0x1aa>
 46a:	b7 01       	movw	r22, r14
 46c:	80 e2       	ldi	r24, 0x20	; 32
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	0e 94 a8 04 	call	0x950	; 0x950 <fputc>
 474:	3a 94       	dec	r3
 476:	f4 cf       	rjmp	.-24     	; 0x460 <vfprintf+0x174>
 478:	f5 01       	movw	r30, r10
 47a:	27 fc       	sbrc	r2, 7
 47c:	85 91       	lpm	r24, Z+
 47e:	27 fe       	sbrs	r2, 7
 480:	81 91       	ld	r24, Z+
 482:	5f 01       	movw	r10, r30
 484:	b7 01       	movw	r22, r14
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	0e 94 a8 04 	call	0x950	; 0x950 <fputc>
 48c:	31 10       	cpse	r3, r1
 48e:	3a 94       	dec	r3
 490:	f1 e0       	ldi	r31, 0x01	; 1
 492:	4f 1a       	sub	r4, r31
 494:	51 08       	sbc	r5, r1
 496:	41 14       	cp	r4, r1
 498:	51 04       	cpc	r5, r1
 49a:	71 f7       	brne	.-36     	; 0x478 <vfprintf+0x18c>
 49c:	e5 c0       	rjmp	.+458    	; 0x668 <__stack+0x169>
 49e:	84 36       	cpi	r24, 0x64	; 100
 4a0:	11 f0       	breq	.+4      	; 0x4a6 <vfprintf+0x1ba>
 4a2:	89 36       	cpi	r24, 0x69	; 105
 4a4:	39 f5       	brne	.+78     	; 0x4f4 <vfprintf+0x208>
 4a6:	f8 01       	movw	r30, r16
 4a8:	27 ff       	sbrs	r18, 7
 4aa:	07 c0       	rjmp	.+14     	; 0x4ba <vfprintf+0x1ce>
 4ac:	60 81       	ld	r22, Z
 4ae:	71 81       	ldd	r23, Z+1	; 0x01
 4b0:	82 81       	ldd	r24, Z+2	; 0x02
 4b2:	93 81       	ldd	r25, Z+3	; 0x03
 4b4:	0c 5f       	subi	r16, 0xFC	; 252
 4b6:	1f 4f       	sbci	r17, 0xFF	; 255
 4b8:	08 c0       	rjmp	.+16     	; 0x4ca <vfprintf+0x1de>
 4ba:	60 81       	ld	r22, Z
 4bc:	71 81       	ldd	r23, Z+1	; 0x01
 4be:	88 27       	eor	r24, r24
 4c0:	77 fd       	sbrc	r23, 7
 4c2:	80 95       	com	r24
 4c4:	98 2f       	mov	r25, r24
 4c6:	0e 5f       	subi	r16, 0xFE	; 254
 4c8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ca:	2f 76       	andi	r18, 0x6F	; 111
 4cc:	b2 2e       	mov	r11, r18
 4ce:	97 ff       	sbrs	r25, 7
 4d0:	09 c0       	rjmp	.+18     	; 0x4e4 <vfprintf+0x1f8>
 4d2:	90 95       	com	r25
 4d4:	80 95       	com	r24
 4d6:	70 95       	com	r23
 4d8:	61 95       	neg	r22
 4da:	7f 4f       	sbci	r23, 0xFF	; 255
 4dc:	8f 4f       	sbci	r24, 0xFF	; 255
 4de:	9f 4f       	sbci	r25, 0xFF	; 255
 4e0:	20 68       	ori	r18, 0x80	; 128
 4e2:	b2 2e       	mov	r11, r18
 4e4:	2a e0       	ldi	r18, 0x0A	; 10
 4e6:	30 e0       	ldi	r19, 0x00	; 0
 4e8:	a4 01       	movw	r20, r8
 4ea:	0e 94 da 04 	call	0x9b4	; 0x9b4 <__ultoa_invert>
 4ee:	a8 2e       	mov	r10, r24
 4f0:	a8 18       	sub	r10, r8
 4f2:	44 c0       	rjmp	.+136    	; 0x57c <__stack+0x7d>
 4f4:	85 37       	cpi	r24, 0x75	; 117
 4f6:	29 f4       	brne	.+10     	; 0x502 <__stack+0x3>
 4f8:	2f 7e       	andi	r18, 0xEF	; 239
 4fa:	b2 2e       	mov	r11, r18
 4fc:	2a e0       	ldi	r18, 0x0A	; 10
 4fe:	30 e0       	ldi	r19, 0x00	; 0
 500:	25 c0       	rjmp	.+74     	; 0x54c <__stack+0x4d>
 502:	f2 2f       	mov	r31, r18
 504:	f9 7f       	andi	r31, 0xF9	; 249
 506:	bf 2e       	mov	r11, r31
 508:	8f 36       	cpi	r24, 0x6F	; 111
 50a:	c1 f0       	breq	.+48     	; 0x53c <__stack+0x3d>
 50c:	18 f4       	brcc	.+6      	; 0x514 <__stack+0x15>
 50e:	88 35       	cpi	r24, 0x58	; 88
 510:	79 f0       	breq	.+30     	; 0x530 <__stack+0x31>
 512:	b4 c0       	rjmp	.+360    	; 0x67c <__stack+0x17d>
 514:	80 37       	cpi	r24, 0x70	; 112
 516:	19 f0       	breq	.+6      	; 0x51e <__stack+0x1f>
 518:	88 37       	cpi	r24, 0x78	; 120
 51a:	21 f0       	breq	.+8      	; 0x524 <__stack+0x25>
 51c:	af c0       	rjmp	.+350    	; 0x67c <__stack+0x17d>
 51e:	2f 2f       	mov	r18, r31
 520:	20 61       	ori	r18, 0x10	; 16
 522:	b2 2e       	mov	r11, r18
 524:	b4 fe       	sbrs	r11, 4
 526:	0d c0       	rjmp	.+26     	; 0x542 <__stack+0x43>
 528:	8b 2d       	mov	r24, r11
 52a:	84 60       	ori	r24, 0x04	; 4
 52c:	b8 2e       	mov	r11, r24
 52e:	09 c0       	rjmp	.+18     	; 0x542 <__stack+0x43>
 530:	24 ff       	sbrs	r18, 4
 532:	0a c0       	rjmp	.+20     	; 0x548 <__stack+0x49>
 534:	9f 2f       	mov	r25, r31
 536:	96 60       	ori	r25, 0x06	; 6
 538:	b9 2e       	mov	r11, r25
 53a:	06 c0       	rjmp	.+12     	; 0x548 <__stack+0x49>
 53c:	28 e0       	ldi	r18, 0x08	; 8
 53e:	30 e0       	ldi	r19, 0x00	; 0
 540:	05 c0       	rjmp	.+10     	; 0x54c <__stack+0x4d>
 542:	20 e1       	ldi	r18, 0x10	; 16
 544:	30 e0       	ldi	r19, 0x00	; 0
 546:	02 c0       	rjmp	.+4      	; 0x54c <__stack+0x4d>
 548:	20 e1       	ldi	r18, 0x10	; 16
 54a:	32 e0       	ldi	r19, 0x02	; 2
 54c:	f8 01       	movw	r30, r16
 54e:	b7 fe       	sbrs	r11, 7
 550:	07 c0       	rjmp	.+14     	; 0x560 <__stack+0x61>
 552:	60 81       	ld	r22, Z
 554:	71 81       	ldd	r23, Z+1	; 0x01
 556:	82 81       	ldd	r24, Z+2	; 0x02
 558:	93 81       	ldd	r25, Z+3	; 0x03
 55a:	0c 5f       	subi	r16, 0xFC	; 252
 55c:	1f 4f       	sbci	r17, 0xFF	; 255
 55e:	06 c0       	rjmp	.+12     	; 0x56c <__stack+0x6d>
 560:	60 81       	ld	r22, Z
 562:	71 81       	ldd	r23, Z+1	; 0x01
 564:	80 e0       	ldi	r24, 0x00	; 0
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	0e 5f       	subi	r16, 0xFE	; 254
 56a:	1f 4f       	sbci	r17, 0xFF	; 255
 56c:	a4 01       	movw	r20, r8
 56e:	0e 94 da 04 	call	0x9b4	; 0x9b4 <__ultoa_invert>
 572:	a8 2e       	mov	r10, r24
 574:	a8 18       	sub	r10, r8
 576:	fb 2d       	mov	r31, r11
 578:	ff 77       	andi	r31, 0x7F	; 127
 57a:	bf 2e       	mov	r11, r31
 57c:	b6 fe       	sbrs	r11, 6
 57e:	0b c0       	rjmp	.+22     	; 0x596 <__stack+0x97>
 580:	2b 2d       	mov	r18, r11
 582:	2e 7f       	andi	r18, 0xFE	; 254
 584:	a5 14       	cp	r10, r5
 586:	50 f4       	brcc	.+20     	; 0x59c <__stack+0x9d>
 588:	b4 fe       	sbrs	r11, 4
 58a:	0a c0       	rjmp	.+20     	; 0x5a0 <__stack+0xa1>
 58c:	b2 fc       	sbrc	r11, 2
 58e:	08 c0       	rjmp	.+16     	; 0x5a0 <__stack+0xa1>
 590:	2b 2d       	mov	r18, r11
 592:	2e 7e       	andi	r18, 0xEE	; 238
 594:	05 c0       	rjmp	.+10     	; 0x5a0 <__stack+0xa1>
 596:	7a 2c       	mov	r7, r10
 598:	2b 2d       	mov	r18, r11
 59a:	03 c0       	rjmp	.+6      	; 0x5a2 <__stack+0xa3>
 59c:	7a 2c       	mov	r7, r10
 59e:	01 c0       	rjmp	.+2      	; 0x5a2 <__stack+0xa3>
 5a0:	75 2c       	mov	r7, r5
 5a2:	24 ff       	sbrs	r18, 4
 5a4:	0d c0       	rjmp	.+26     	; 0x5c0 <__stack+0xc1>
 5a6:	fe 01       	movw	r30, r28
 5a8:	ea 0d       	add	r30, r10
 5aa:	f1 1d       	adc	r31, r1
 5ac:	80 81       	ld	r24, Z
 5ae:	80 33       	cpi	r24, 0x30	; 48
 5b0:	11 f4       	brne	.+4      	; 0x5b6 <__stack+0xb7>
 5b2:	29 7e       	andi	r18, 0xE9	; 233
 5b4:	09 c0       	rjmp	.+18     	; 0x5c8 <__stack+0xc9>
 5b6:	22 ff       	sbrs	r18, 2
 5b8:	06 c0       	rjmp	.+12     	; 0x5c6 <__stack+0xc7>
 5ba:	73 94       	inc	r7
 5bc:	73 94       	inc	r7
 5be:	04 c0       	rjmp	.+8      	; 0x5c8 <__stack+0xc9>
 5c0:	82 2f       	mov	r24, r18
 5c2:	86 78       	andi	r24, 0x86	; 134
 5c4:	09 f0       	breq	.+2      	; 0x5c8 <__stack+0xc9>
 5c6:	73 94       	inc	r7
 5c8:	23 fd       	sbrc	r18, 3
 5ca:	13 c0       	rjmp	.+38     	; 0x5f2 <__stack+0xf3>
 5cc:	20 ff       	sbrs	r18, 0
 5ce:	06 c0       	rjmp	.+12     	; 0x5dc <__stack+0xdd>
 5d0:	5a 2c       	mov	r5, r10
 5d2:	73 14       	cp	r7, r3
 5d4:	18 f4       	brcc	.+6      	; 0x5dc <__stack+0xdd>
 5d6:	53 0c       	add	r5, r3
 5d8:	57 18       	sub	r5, r7
 5da:	73 2c       	mov	r7, r3
 5dc:	73 14       	cp	r7, r3
 5de:	68 f4       	brcc	.+26     	; 0x5fa <__stack+0xfb>
 5e0:	b7 01       	movw	r22, r14
 5e2:	80 e2       	ldi	r24, 0x20	; 32
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	2c 87       	std	Y+12, r18	; 0x0c
 5e8:	0e 94 a8 04 	call	0x950	; 0x950 <fputc>
 5ec:	73 94       	inc	r7
 5ee:	2c 85       	ldd	r18, Y+12	; 0x0c
 5f0:	f5 cf       	rjmp	.-22     	; 0x5dc <__stack+0xdd>
 5f2:	73 14       	cp	r7, r3
 5f4:	10 f4       	brcc	.+4      	; 0x5fa <__stack+0xfb>
 5f6:	37 18       	sub	r3, r7
 5f8:	01 c0       	rjmp	.+2      	; 0x5fc <__stack+0xfd>
 5fa:	31 2c       	mov	r3, r1
 5fc:	24 ff       	sbrs	r18, 4
 5fe:	12 c0       	rjmp	.+36     	; 0x624 <__stack+0x125>
 600:	b7 01       	movw	r22, r14
 602:	80 e3       	ldi	r24, 0x30	; 48
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	2c 87       	std	Y+12, r18	; 0x0c
 608:	0e 94 a8 04 	call	0x950	; 0x950 <fputc>
 60c:	2c 85       	ldd	r18, Y+12	; 0x0c
 60e:	22 ff       	sbrs	r18, 2
 610:	17 c0       	rjmp	.+46     	; 0x640 <__stack+0x141>
 612:	21 ff       	sbrs	r18, 1
 614:	03 c0       	rjmp	.+6      	; 0x61c <__stack+0x11d>
 616:	88 e5       	ldi	r24, 0x58	; 88
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	02 c0       	rjmp	.+4      	; 0x620 <__stack+0x121>
 61c:	88 e7       	ldi	r24, 0x78	; 120
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	b7 01       	movw	r22, r14
 622:	0c c0       	rjmp	.+24     	; 0x63c <__stack+0x13d>
 624:	82 2f       	mov	r24, r18
 626:	86 78       	andi	r24, 0x86	; 134
 628:	59 f0       	breq	.+22     	; 0x640 <__stack+0x141>
 62a:	21 fd       	sbrc	r18, 1
 62c:	02 c0       	rjmp	.+4      	; 0x632 <__stack+0x133>
 62e:	80 e2       	ldi	r24, 0x20	; 32
 630:	01 c0       	rjmp	.+2      	; 0x634 <__stack+0x135>
 632:	8b e2       	ldi	r24, 0x2B	; 43
 634:	27 fd       	sbrc	r18, 7
 636:	8d e2       	ldi	r24, 0x2D	; 45
 638:	b7 01       	movw	r22, r14
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	0e 94 a8 04 	call	0x950	; 0x950 <fputc>
 640:	a5 14       	cp	r10, r5
 642:	38 f4       	brcc	.+14     	; 0x652 <__stack+0x153>
 644:	b7 01       	movw	r22, r14
 646:	80 e3       	ldi	r24, 0x30	; 48
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	0e 94 a8 04 	call	0x950	; 0x950 <fputc>
 64e:	5a 94       	dec	r5
 650:	f7 cf       	rjmp	.-18     	; 0x640 <__stack+0x141>
 652:	aa 94       	dec	r10
 654:	f4 01       	movw	r30, r8
 656:	ea 0d       	add	r30, r10
 658:	f1 1d       	adc	r31, r1
 65a:	80 81       	ld	r24, Z
 65c:	b7 01       	movw	r22, r14
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	0e 94 a8 04 	call	0x950	; 0x950 <fputc>
 664:	a1 10       	cpse	r10, r1
 666:	f5 cf       	rjmp	.-22     	; 0x652 <__stack+0x153>
 668:	33 20       	and	r3, r3
 66a:	09 f4       	brne	.+2      	; 0x66e <__stack+0x16f>
 66c:	51 ce       	rjmp	.-862    	; 0x310 <vfprintf+0x24>
 66e:	b7 01       	movw	r22, r14
 670:	80 e2       	ldi	r24, 0x20	; 32
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	0e 94 a8 04 	call	0x950	; 0x950 <fputc>
 678:	3a 94       	dec	r3
 67a:	f6 cf       	rjmp	.-20     	; 0x668 <__stack+0x169>
 67c:	f7 01       	movw	r30, r14
 67e:	86 81       	ldd	r24, Z+6	; 0x06
 680:	97 81       	ldd	r25, Z+7	; 0x07
 682:	02 c0       	rjmp	.+4      	; 0x688 <__stack+0x189>
 684:	8f ef       	ldi	r24, 0xFF	; 255
 686:	9f ef       	ldi	r25, 0xFF	; 255
 688:	2c 96       	adiw	r28, 0x0c	; 12
 68a:	e2 e1       	ldi	r30, 0x12	; 18
 68c:	0c 94 54 05 	jmp	0xaa8	; 0xaa8 <__epilogue_restores__>

00000690 <calloc>:
 690:	0f 93       	push	r16
 692:	1f 93       	push	r17
 694:	cf 93       	push	r28
 696:	df 93       	push	r29
 698:	86 9f       	mul	r24, r22
 69a:	80 01       	movw	r16, r0
 69c:	87 9f       	mul	r24, r23
 69e:	10 0d       	add	r17, r0
 6a0:	96 9f       	mul	r25, r22
 6a2:	10 0d       	add	r17, r0
 6a4:	11 24       	eor	r1, r1
 6a6:	c8 01       	movw	r24, r16
 6a8:	0e 94 64 03 	call	0x6c8	; 0x6c8 <malloc>
 6ac:	ec 01       	movw	r28, r24
 6ae:	00 97       	sbiw	r24, 0x00	; 0
 6b0:	29 f0       	breq	.+10     	; 0x6bc <calloc+0x2c>
 6b2:	a8 01       	movw	r20, r16
 6b4:	60 e0       	ldi	r22, 0x00	; 0
 6b6:	70 e0       	ldi	r23, 0x00	; 0
 6b8:	0e 94 96 04 	call	0x92c	; 0x92c <memset>
 6bc:	ce 01       	movw	r24, r28
 6be:	df 91       	pop	r29
 6c0:	cf 91       	pop	r28
 6c2:	1f 91       	pop	r17
 6c4:	0f 91       	pop	r16
 6c6:	08 95       	ret

000006c8 <malloc>:
 6c8:	cf 93       	push	r28
 6ca:	df 93       	push	r29
 6cc:	82 30       	cpi	r24, 0x02	; 2
 6ce:	91 05       	cpc	r25, r1
 6d0:	10 f4       	brcc	.+4      	; 0x6d6 <malloc+0xe>
 6d2:	82 e0       	ldi	r24, 0x02	; 2
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	e0 91 8e 01 	lds	r30, 0x018E
 6da:	f0 91 8f 01 	lds	r31, 0x018F
 6de:	20 e0       	ldi	r18, 0x00	; 0
 6e0:	30 e0       	ldi	r19, 0x00	; 0
 6e2:	a0 e0       	ldi	r26, 0x00	; 0
 6e4:	b0 e0       	ldi	r27, 0x00	; 0
 6e6:	30 97       	sbiw	r30, 0x00	; 0
 6e8:	39 f1       	breq	.+78     	; 0x738 <malloc+0x70>
 6ea:	40 81       	ld	r20, Z
 6ec:	51 81       	ldd	r21, Z+1	; 0x01
 6ee:	48 17       	cp	r20, r24
 6f0:	59 07       	cpc	r21, r25
 6f2:	b8 f0       	brcs	.+46     	; 0x722 <malloc+0x5a>
 6f4:	48 17       	cp	r20, r24
 6f6:	59 07       	cpc	r21, r25
 6f8:	71 f4       	brne	.+28     	; 0x716 <malloc+0x4e>
 6fa:	82 81       	ldd	r24, Z+2	; 0x02
 6fc:	93 81       	ldd	r25, Z+3	; 0x03
 6fe:	10 97       	sbiw	r26, 0x00	; 0
 700:	29 f0       	breq	.+10     	; 0x70c <malloc+0x44>
 702:	13 96       	adiw	r26, 0x03	; 3
 704:	9c 93       	st	X, r25
 706:	8e 93       	st	-X, r24
 708:	12 97       	sbiw	r26, 0x02	; 2
 70a:	2c c0       	rjmp	.+88     	; 0x764 <malloc+0x9c>
 70c:	90 93 8f 01 	sts	0x018F, r25
 710:	80 93 8e 01 	sts	0x018E, r24
 714:	27 c0       	rjmp	.+78     	; 0x764 <malloc+0x9c>
 716:	21 15       	cp	r18, r1
 718:	31 05       	cpc	r19, r1
 71a:	31 f0       	breq	.+12     	; 0x728 <malloc+0x60>
 71c:	42 17       	cp	r20, r18
 71e:	53 07       	cpc	r21, r19
 720:	18 f0       	brcs	.+6      	; 0x728 <malloc+0x60>
 722:	a9 01       	movw	r20, r18
 724:	db 01       	movw	r26, r22
 726:	01 c0       	rjmp	.+2      	; 0x72a <malloc+0x62>
 728:	ef 01       	movw	r28, r30
 72a:	9a 01       	movw	r18, r20
 72c:	bd 01       	movw	r22, r26
 72e:	df 01       	movw	r26, r30
 730:	02 80       	ldd	r0, Z+2	; 0x02
 732:	f3 81       	ldd	r31, Z+3	; 0x03
 734:	e0 2d       	mov	r30, r0
 736:	d7 cf       	rjmp	.-82     	; 0x6e6 <malloc+0x1e>
 738:	21 15       	cp	r18, r1
 73a:	31 05       	cpc	r19, r1
 73c:	f9 f0       	breq	.+62     	; 0x77c <malloc+0xb4>
 73e:	28 1b       	sub	r18, r24
 740:	39 0b       	sbc	r19, r25
 742:	24 30       	cpi	r18, 0x04	; 4
 744:	31 05       	cpc	r19, r1
 746:	80 f4       	brcc	.+32     	; 0x768 <malloc+0xa0>
 748:	8a 81       	ldd	r24, Y+2	; 0x02
 74a:	9b 81       	ldd	r25, Y+3	; 0x03
 74c:	61 15       	cp	r22, r1
 74e:	71 05       	cpc	r23, r1
 750:	21 f0       	breq	.+8      	; 0x75a <malloc+0x92>
 752:	fb 01       	movw	r30, r22
 754:	93 83       	std	Z+3, r25	; 0x03
 756:	82 83       	std	Z+2, r24	; 0x02
 758:	04 c0       	rjmp	.+8      	; 0x762 <malloc+0x9a>
 75a:	90 93 8f 01 	sts	0x018F, r25
 75e:	80 93 8e 01 	sts	0x018E, r24
 762:	fe 01       	movw	r30, r28
 764:	32 96       	adiw	r30, 0x02	; 2
 766:	44 c0       	rjmp	.+136    	; 0x7f0 <malloc+0x128>
 768:	fe 01       	movw	r30, r28
 76a:	e2 0f       	add	r30, r18
 76c:	f3 1f       	adc	r31, r19
 76e:	81 93       	st	Z+, r24
 770:	91 93       	st	Z+, r25
 772:	22 50       	subi	r18, 0x02	; 2
 774:	31 09       	sbc	r19, r1
 776:	39 83       	std	Y+1, r19	; 0x01
 778:	28 83       	st	Y, r18
 77a:	3a c0       	rjmp	.+116    	; 0x7f0 <malloc+0x128>
 77c:	20 91 8c 01 	lds	r18, 0x018C
 780:	30 91 8d 01 	lds	r19, 0x018D
 784:	23 2b       	or	r18, r19
 786:	41 f4       	brne	.+16     	; 0x798 <malloc+0xd0>
 788:	20 91 02 01 	lds	r18, 0x0102
 78c:	30 91 03 01 	lds	r19, 0x0103
 790:	30 93 8d 01 	sts	0x018D, r19
 794:	20 93 8c 01 	sts	0x018C, r18
 798:	20 91 00 01 	lds	r18, 0x0100
 79c:	30 91 01 01 	lds	r19, 0x0101
 7a0:	21 15       	cp	r18, r1
 7a2:	31 05       	cpc	r19, r1
 7a4:	41 f4       	brne	.+16     	; 0x7b6 <malloc+0xee>
 7a6:	2d b7       	in	r18, 0x3d	; 61
 7a8:	3e b7       	in	r19, 0x3e	; 62
 7aa:	40 91 04 01 	lds	r20, 0x0104
 7ae:	50 91 05 01 	lds	r21, 0x0105
 7b2:	24 1b       	sub	r18, r20
 7b4:	35 0b       	sbc	r19, r21
 7b6:	e0 91 8c 01 	lds	r30, 0x018C
 7ba:	f0 91 8d 01 	lds	r31, 0x018D
 7be:	e2 17       	cp	r30, r18
 7c0:	f3 07       	cpc	r31, r19
 7c2:	a0 f4       	brcc	.+40     	; 0x7ec <malloc+0x124>
 7c4:	2e 1b       	sub	r18, r30
 7c6:	3f 0b       	sbc	r19, r31
 7c8:	28 17       	cp	r18, r24
 7ca:	39 07       	cpc	r19, r25
 7cc:	78 f0       	brcs	.+30     	; 0x7ec <malloc+0x124>
 7ce:	ac 01       	movw	r20, r24
 7d0:	4e 5f       	subi	r20, 0xFE	; 254
 7d2:	5f 4f       	sbci	r21, 0xFF	; 255
 7d4:	24 17       	cp	r18, r20
 7d6:	35 07       	cpc	r19, r21
 7d8:	48 f0       	brcs	.+18     	; 0x7ec <malloc+0x124>
 7da:	4e 0f       	add	r20, r30
 7dc:	5f 1f       	adc	r21, r31
 7de:	50 93 8d 01 	sts	0x018D, r21
 7e2:	40 93 8c 01 	sts	0x018C, r20
 7e6:	81 93       	st	Z+, r24
 7e8:	91 93       	st	Z+, r25
 7ea:	02 c0       	rjmp	.+4      	; 0x7f0 <malloc+0x128>
 7ec:	e0 e0       	ldi	r30, 0x00	; 0
 7ee:	f0 e0       	ldi	r31, 0x00	; 0
 7f0:	cf 01       	movw	r24, r30
 7f2:	df 91       	pop	r29
 7f4:	cf 91       	pop	r28
 7f6:	08 95       	ret

000007f8 <free>:
 7f8:	cf 93       	push	r28
 7fa:	df 93       	push	r29
 7fc:	00 97       	sbiw	r24, 0x00	; 0
 7fe:	09 f4       	brne	.+2      	; 0x802 <free+0xa>
 800:	87 c0       	rjmp	.+270    	; 0x910 <free+0x118>
 802:	fc 01       	movw	r30, r24
 804:	32 97       	sbiw	r30, 0x02	; 2
 806:	13 82       	std	Z+3, r1	; 0x03
 808:	12 82       	std	Z+2, r1	; 0x02
 80a:	c0 91 8e 01 	lds	r28, 0x018E
 80e:	d0 91 8f 01 	lds	r29, 0x018F
 812:	20 97       	sbiw	r28, 0x00	; 0
 814:	81 f4       	brne	.+32     	; 0x836 <free+0x3e>
 816:	20 81       	ld	r18, Z
 818:	31 81       	ldd	r19, Z+1	; 0x01
 81a:	28 0f       	add	r18, r24
 81c:	39 1f       	adc	r19, r25
 81e:	80 91 8c 01 	lds	r24, 0x018C
 822:	90 91 8d 01 	lds	r25, 0x018D
 826:	82 17       	cp	r24, r18
 828:	93 07       	cpc	r25, r19
 82a:	79 f5       	brne	.+94     	; 0x88a <free+0x92>
 82c:	f0 93 8d 01 	sts	0x018D, r31
 830:	e0 93 8c 01 	sts	0x018C, r30
 834:	6d c0       	rjmp	.+218    	; 0x910 <free+0x118>
 836:	de 01       	movw	r26, r28
 838:	20 e0       	ldi	r18, 0x00	; 0
 83a:	30 e0       	ldi	r19, 0x00	; 0
 83c:	ae 17       	cp	r26, r30
 83e:	bf 07       	cpc	r27, r31
 840:	50 f4       	brcc	.+20     	; 0x856 <free+0x5e>
 842:	12 96       	adiw	r26, 0x02	; 2
 844:	4d 91       	ld	r20, X+
 846:	5c 91       	ld	r21, X
 848:	13 97       	sbiw	r26, 0x03	; 3
 84a:	9d 01       	movw	r18, r26
 84c:	41 15       	cp	r20, r1
 84e:	51 05       	cpc	r21, r1
 850:	09 f1       	breq	.+66     	; 0x894 <free+0x9c>
 852:	da 01       	movw	r26, r20
 854:	f3 cf       	rjmp	.-26     	; 0x83c <free+0x44>
 856:	b3 83       	std	Z+3, r27	; 0x03
 858:	a2 83       	std	Z+2, r26	; 0x02
 85a:	40 81       	ld	r20, Z
 85c:	51 81       	ldd	r21, Z+1	; 0x01
 85e:	84 0f       	add	r24, r20
 860:	95 1f       	adc	r25, r21
 862:	8a 17       	cp	r24, r26
 864:	9b 07       	cpc	r25, r27
 866:	71 f4       	brne	.+28     	; 0x884 <free+0x8c>
 868:	8d 91       	ld	r24, X+
 86a:	9c 91       	ld	r25, X
 86c:	11 97       	sbiw	r26, 0x01	; 1
 86e:	84 0f       	add	r24, r20
 870:	95 1f       	adc	r25, r21
 872:	02 96       	adiw	r24, 0x02	; 2
 874:	91 83       	std	Z+1, r25	; 0x01
 876:	80 83       	st	Z, r24
 878:	12 96       	adiw	r26, 0x02	; 2
 87a:	8d 91       	ld	r24, X+
 87c:	9c 91       	ld	r25, X
 87e:	13 97       	sbiw	r26, 0x03	; 3
 880:	93 83       	std	Z+3, r25	; 0x03
 882:	82 83       	std	Z+2, r24	; 0x02
 884:	21 15       	cp	r18, r1
 886:	31 05       	cpc	r19, r1
 888:	29 f4       	brne	.+10     	; 0x894 <free+0x9c>
 88a:	f0 93 8f 01 	sts	0x018F, r31
 88e:	e0 93 8e 01 	sts	0x018E, r30
 892:	3e c0       	rjmp	.+124    	; 0x910 <free+0x118>
 894:	d9 01       	movw	r26, r18
 896:	13 96       	adiw	r26, 0x03	; 3
 898:	fc 93       	st	X, r31
 89a:	ee 93       	st	-X, r30
 89c:	12 97       	sbiw	r26, 0x02	; 2
 89e:	4d 91       	ld	r20, X+
 8a0:	5d 91       	ld	r21, X+
 8a2:	a4 0f       	add	r26, r20
 8a4:	b5 1f       	adc	r27, r21
 8a6:	ea 17       	cp	r30, r26
 8a8:	fb 07       	cpc	r31, r27
 8aa:	79 f4       	brne	.+30     	; 0x8ca <free+0xd2>
 8ac:	80 81       	ld	r24, Z
 8ae:	91 81       	ldd	r25, Z+1	; 0x01
 8b0:	84 0f       	add	r24, r20
 8b2:	95 1f       	adc	r25, r21
 8b4:	02 96       	adiw	r24, 0x02	; 2
 8b6:	d9 01       	movw	r26, r18
 8b8:	11 96       	adiw	r26, 0x01	; 1
 8ba:	9c 93       	st	X, r25
 8bc:	8e 93       	st	-X, r24
 8be:	82 81       	ldd	r24, Z+2	; 0x02
 8c0:	93 81       	ldd	r25, Z+3	; 0x03
 8c2:	13 96       	adiw	r26, 0x03	; 3
 8c4:	9c 93       	st	X, r25
 8c6:	8e 93       	st	-X, r24
 8c8:	12 97       	sbiw	r26, 0x02	; 2
 8ca:	e0 e0       	ldi	r30, 0x00	; 0
 8cc:	f0 e0       	ldi	r31, 0x00	; 0
 8ce:	8a 81       	ldd	r24, Y+2	; 0x02
 8d0:	9b 81       	ldd	r25, Y+3	; 0x03
 8d2:	00 97       	sbiw	r24, 0x00	; 0
 8d4:	19 f0       	breq	.+6      	; 0x8dc <free+0xe4>
 8d6:	fe 01       	movw	r30, r28
 8d8:	ec 01       	movw	r28, r24
 8da:	f9 cf       	rjmp	.-14     	; 0x8ce <free+0xd6>
 8dc:	ce 01       	movw	r24, r28
 8de:	02 96       	adiw	r24, 0x02	; 2
 8e0:	28 81       	ld	r18, Y
 8e2:	39 81       	ldd	r19, Y+1	; 0x01
 8e4:	82 0f       	add	r24, r18
 8e6:	93 1f       	adc	r25, r19
 8e8:	20 91 8c 01 	lds	r18, 0x018C
 8ec:	30 91 8d 01 	lds	r19, 0x018D
 8f0:	28 17       	cp	r18, r24
 8f2:	39 07       	cpc	r19, r25
 8f4:	69 f4       	brne	.+26     	; 0x910 <free+0x118>
 8f6:	30 97       	sbiw	r30, 0x00	; 0
 8f8:	29 f4       	brne	.+10     	; 0x904 <free+0x10c>
 8fa:	10 92 8f 01 	sts	0x018F, r1
 8fe:	10 92 8e 01 	sts	0x018E, r1
 902:	02 c0       	rjmp	.+4      	; 0x908 <free+0x110>
 904:	13 82       	std	Z+3, r1	; 0x03
 906:	12 82       	std	Z+2, r1	; 0x02
 908:	d0 93 8d 01 	sts	0x018D, r29
 90c:	c0 93 8c 01 	sts	0x018C, r28
 910:	df 91       	pop	r29
 912:	cf 91       	pop	r28
 914:	08 95       	ret

00000916 <strnlen_P>:
 916:	fc 01       	movw	r30, r24
 918:	05 90       	lpm	r0, Z+
 91a:	61 50       	subi	r22, 0x01	; 1
 91c:	70 40       	sbci	r23, 0x00	; 0
 91e:	01 10       	cpse	r0, r1
 920:	d8 f7       	brcc	.-10     	; 0x918 <strnlen_P+0x2>
 922:	80 95       	com	r24
 924:	90 95       	com	r25
 926:	8e 0f       	add	r24, r30
 928:	9f 1f       	adc	r25, r31
 92a:	08 95       	ret

0000092c <memset>:
 92c:	dc 01       	movw	r26, r24
 92e:	01 c0       	rjmp	.+2      	; 0x932 <memset+0x6>
 930:	6d 93       	st	X+, r22
 932:	41 50       	subi	r20, 0x01	; 1
 934:	50 40       	sbci	r21, 0x00	; 0
 936:	e0 f7       	brcc	.-8      	; 0x930 <memset+0x4>
 938:	08 95       	ret

0000093a <strnlen>:
 93a:	fc 01       	movw	r30, r24
 93c:	61 50       	subi	r22, 0x01	; 1
 93e:	70 40       	sbci	r23, 0x00	; 0
 940:	01 90       	ld	r0, Z+
 942:	01 10       	cpse	r0, r1
 944:	d8 f7       	brcc	.-10     	; 0x93c <strnlen+0x2>
 946:	80 95       	com	r24
 948:	90 95       	com	r25
 94a:	8e 0f       	add	r24, r30
 94c:	9f 1f       	adc	r25, r31
 94e:	08 95       	ret

00000950 <fputc>:
 950:	0f 93       	push	r16
 952:	1f 93       	push	r17
 954:	cf 93       	push	r28
 956:	df 93       	push	r29
 958:	18 2f       	mov	r17, r24
 95a:	09 2f       	mov	r16, r25
 95c:	eb 01       	movw	r28, r22
 95e:	8b 81       	ldd	r24, Y+3	; 0x03
 960:	81 fd       	sbrc	r24, 1
 962:	03 c0       	rjmp	.+6      	; 0x96a <fputc+0x1a>
 964:	8f ef       	ldi	r24, 0xFF	; 255
 966:	9f ef       	ldi	r25, 0xFF	; 255
 968:	20 c0       	rjmp	.+64     	; 0x9aa <fputc+0x5a>
 96a:	82 ff       	sbrs	r24, 2
 96c:	10 c0       	rjmp	.+32     	; 0x98e <fputc+0x3e>
 96e:	4e 81       	ldd	r20, Y+6	; 0x06
 970:	5f 81       	ldd	r21, Y+7	; 0x07
 972:	2c 81       	ldd	r18, Y+4	; 0x04
 974:	3d 81       	ldd	r19, Y+5	; 0x05
 976:	42 17       	cp	r20, r18
 978:	53 07       	cpc	r21, r19
 97a:	7c f4       	brge	.+30     	; 0x99a <fputc+0x4a>
 97c:	e8 81       	ld	r30, Y
 97e:	f9 81       	ldd	r31, Y+1	; 0x01
 980:	9f 01       	movw	r18, r30
 982:	2f 5f       	subi	r18, 0xFF	; 255
 984:	3f 4f       	sbci	r19, 0xFF	; 255
 986:	39 83       	std	Y+1, r19	; 0x01
 988:	28 83       	st	Y, r18
 98a:	10 83       	st	Z, r17
 98c:	06 c0       	rjmp	.+12     	; 0x99a <fputc+0x4a>
 98e:	e8 85       	ldd	r30, Y+8	; 0x08
 990:	f9 85       	ldd	r31, Y+9	; 0x09
 992:	81 2f       	mov	r24, r17
 994:	09 95       	icall
 996:	89 2b       	or	r24, r25
 998:	29 f7       	brne	.-54     	; 0x964 <fputc+0x14>
 99a:	2e 81       	ldd	r18, Y+6	; 0x06
 99c:	3f 81       	ldd	r19, Y+7	; 0x07
 99e:	2f 5f       	subi	r18, 0xFF	; 255
 9a0:	3f 4f       	sbci	r19, 0xFF	; 255
 9a2:	3f 83       	std	Y+7, r19	; 0x07
 9a4:	2e 83       	std	Y+6, r18	; 0x06
 9a6:	81 2f       	mov	r24, r17
 9a8:	90 2f       	mov	r25, r16
 9aa:	df 91       	pop	r29
 9ac:	cf 91       	pop	r28
 9ae:	1f 91       	pop	r17
 9b0:	0f 91       	pop	r16
 9b2:	08 95       	ret

000009b4 <__ultoa_invert>:
 9b4:	fa 01       	movw	r30, r20
 9b6:	aa 27       	eor	r26, r26
 9b8:	28 30       	cpi	r18, 0x08	; 8
 9ba:	51 f1       	breq	.+84     	; 0xa10 <__ultoa_invert+0x5c>
 9bc:	20 31       	cpi	r18, 0x10	; 16
 9be:	81 f1       	breq	.+96     	; 0xa20 <__ultoa_invert+0x6c>
 9c0:	e8 94       	clt
 9c2:	6f 93       	push	r22
 9c4:	6e 7f       	andi	r22, 0xFE	; 254
 9c6:	6e 5f       	subi	r22, 0xFE	; 254
 9c8:	7f 4f       	sbci	r23, 0xFF	; 255
 9ca:	8f 4f       	sbci	r24, 0xFF	; 255
 9cc:	9f 4f       	sbci	r25, 0xFF	; 255
 9ce:	af 4f       	sbci	r26, 0xFF	; 255
 9d0:	b1 e0       	ldi	r27, 0x01	; 1
 9d2:	3e d0       	rcall	.+124    	; 0xa50 <__ultoa_invert+0x9c>
 9d4:	b4 e0       	ldi	r27, 0x04	; 4
 9d6:	3c d0       	rcall	.+120    	; 0xa50 <__ultoa_invert+0x9c>
 9d8:	67 0f       	add	r22, r23
 9da:	78 1f       	adc	r23, r24
 9dc:	89 1f       	adc	r24, r25
 9de:	9a 1f       	adc	r25, r26
 9e0:	a1 1d       	adc	r26, r1
 9e2:	68 0f       	add	r22, r24
 9e4:	79 1f       	adc	r23, r25
 9e6:	8a 1f       	adc	r24, r26
 9e8:	91 1d       	adc	r25, r1
 9ea:	a1 1d       	adc	r26, r1
 9ec:	6a 0f       	add	r22, r26
 9ee:	71 1d       	adc	r23, r1
 9f0:	81 1d       	adc	r24, r1
 9f2:	91 1d       	adc	r25, r1
 9f4:	a1 1d       	adc	r26, r1
 9f6:	20 d0       	rcall	.+64     	; 0xa38 <__ultoa_invert+0x84>
 9f8:	09 f4       	brne	.+2      	; 0x9fc <__ultoa_invert+0x48>
 9fa:	68 94       	set
 9fc:	3f 91       	pop	r19
 9fe:	2a e0       	ldi	r18, 0x0A	; 10
 a00:	26 9f       	mul	r18, r22
 a02:	11 24       	eor	r1, r1
 a04:	30 19       	sub	r19, r0
 a06:	30 5d       	subi	r19, 0xD0	; 208
 a08:	31 93       	st	Z+, r19
 a0a:	de f6       	brtc	.-74     	; 0x9c2 <__ultoa_invert+0xe>
 a0c:	cf 01       	movw	r24, r30
 a0e:	08 95       	ret
 a10:	46 2f       	mov	r20, r22
 a12:	47 70       	andi	r20, 0x07	; 7
 a14:	40 5d       	subi	r20, 0xD0	; 208
 a16:	41 93       	st	Z+, r20
 a18:	b3 e0       	ldi	r27, 0x03	; 3
 a1a:	0f d0       	rcall	.+30     	; 0xa3a <__ultoa_invert+0x86>
 a1c:	c9 f7       	brne	.-14     	; 0xa10 <__ultoa_invert+0x5c>
 a1e:	f6 cf       	rjmp	.-20     	; 0xa0c <__ultoa_invert+0x58>
 a20:	46 2f       	mov	r20, r22
 a22:	4f 70       	andi	r20, 0x0F	; 15
 a24:	40 5d       	subi	r20, 0xD0	; 208
 a26:	4a 33       	cpi	r20, 0x3A	; 58
 a28:	18 f0       	brcs	.+6      	; 0xa30 <__ultoa_invert+0x7c>
 a2a:	49 5d       	subi	r20, 0xD9	; 217
 a2c:	31 fd       	sbrc	r19, 1
 a2e:	40 52       	subi	r20, 0x20	; 32
 a30:	41 93       	st	Z+, r20
 a32:	02 d0       	rcall	.+4      	; 0xa38 <__ultoa_invert+0x84>
 a34:	a9 f7       	brne	.-22     	; 0xa20 <__ultoa_invert+0x6c>
 a36:	ea cf       	rjmp	.-44     	; 0xa0c <__ultoa_invert+0x58>
 a38:	b4 e0       	ldi	r27, 0x04	; 4
 a3a:	a6 95       	lsr	r26
 a3c:	97 95       	ror	r25
 a3e:	87 95       	ror	r24
 a40:	77 95       	ror	r23
 a42:	67 95       	ror	r22
 a44:	ba 95       	dec	r27
 a46:	c9 f7       	brne	.-14     	; 0xa3a <__ultoa_invert+0x86>
 a48:	00 97       	sbiw	r24, 0x00	; 0
 a4a:	61 05       	cpc	r22, r1
 a4c:	71 05       	cpc	r23, r1
 a4e:	08 95       	ret
 a50:	9b 01       	movw	r18, r22
 a52:	ac 01       	movw	r20, r24
 a54:	0a 2e       	mov	r0, r26
 a56:	06 94       	lsr	r0
 a58:	57 95       	ror	r21
 a5a:	47 95       	ror	r20
 a5c:	37 95       	ror	r19
 a5e:	27 95       	ror	r18
 a60:	ba 95       	dec	r27
 a62:	c9 f7       	brne	.-14     	; 0xa56 <__ultoa_invert+0xa2>
 a64:	62 0f       	add	r22, r18
 a66:	73 1f       	adc	r23, r19
 a68:	84 1f       	adc	r24, r20
 a6a:	95 1f       	adc	r25, r21
 a6c:	a0 1d       	adc	r26, r0
 a6e:	08 95       	ret

00000a70 <__prologue_saves__>:
 a70:	2f 92       	push	r2
 a72:	3f 92       	push	r3
 a74:	4f 92       	push	r4
 a76:	5f 92       	push	r5
 a78:	6f 92       	push	r6
 a7a:	7f 92       	push	r7
 a7c:	8f 92       	push	r8
 a7e:	9f 92       	push	r9
 a80:	af 92       	push	r10
 a82:	bf 92       	push	r11
 a84:	cf 92       	push	r12
 a86:	df 92       	push	r13
 a88:	ef 92       	push	r14
 a8a:	ff 92       	push	r15
 a8c:	0f 93       	push	r16
 a8e:	1f 93       	push	r17
 a90:	cf 93       	push	r28
 a92:	df 93       	push	r29
 a94:	cd b7       	in	r28, 0x3d	; 61
 a96:	de b7       	in	r29, 0x3e	; 62
 a98:	ca 1b       	sub	r28, r26
 a9a:	db 0b       	sbc	r29, r27
 a9c:	0f b6       	in	r0, 0x3f	; 63
 a9e:	f8 94       	cli
 aa0:	de bf       	out	0x3e, r29	; 62
 aa2:	0f be       	out	0x3f, r0	; 63
 aa4:	cd bf       	out	0x3d, r28	; 61
 aa6:	09 94       	ijmp

00000aa8 <__epilogue_restores__>:
 aa8:	2a 88       	ldd	r2, Y+18	; 0x12
 aaa:	39 88       	ldd	r3, Y+17	; 0x11
 aac:	48 88       	ldd	r4, Y+16	; 0x10
 aae:	5f 84       	ldd	r5, Y+15	; 0x0f
 ab0:	6e 84       	ldd	r6, Y+14	; 0x0e
 ab2:	7d 84       	ldd	r7, Y+13	; 0x0d
 ab4:	8c 84       	ldd	r8, Y+12	; 0x0c
 ab6:	9b 84       	ldd	r9, Y+11	; 0x0b
 ab8:	aa 84       	ldd	r10, Y+10	; 0x0a
 aba:	b9 84       	ldd	r11, Y+9	; 0x09
 abc:	c8 84       	ldd	r12, Y+8	; 0x08
 abe:	df 80       	ldd	r13, Y+7	; 0x07
 ac0:	ee 80       	ldd	r14, Y+6	; 0x06
 ac2:	fd 80       	ldd	r15, Y+5	; 0x05
 ac4:	0c 81       	ldd	r16, Y+4	; 0x04
 ac6:	1b 81       	ldd	r17, Y+3	; 0x03
 ac8:	aa 81       	ldd	r26, Y+2	; 0x02
 aca:	b9 81       	ldd	r27, Y+1	; 0x01
 acc:	ce 0f       	add	r28, r30
 ace:	d1 1d       	adc	r29, r1
 ad0:	0f b6       	in	r0, 0x3f	; 63
 ad2:	f8 94       	cli
 ad4:	de bf       	out	0x3e, r29	; 62
 ad6:	0f be       	out	0x3f, r0	; 63
 ad8:	cd bf       	out	0x3d, r28	; 61
 ada:	ed 01       	movw	r28, r26
 adc:	08 95       	ret

00000ade <_exit>:
 ade:	f8 94       	cli

00000ae0 <__stop_program>:
 ae0:	ff cf       	rjmp	.-2      	; 0xae0 <__stop_program>
