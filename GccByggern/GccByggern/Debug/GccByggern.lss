
GccByggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f0  00800100  00000c9c  00000d30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c9c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  008001f0  008001f0  00000e20  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e20  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000e7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000496  00000000  00000000  00000eec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002ea  00000000  00000000  00001382  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000029d  00000000  00000000  0000166c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000010c  00000000  00000000  0000190c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000201  00000000  00000000  00001a18  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000224  00000000  00000000  00001c19  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00001e3d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec e9       	ldi	r30, 0x9C	; 156
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 3f       	cpi	r26, 0xF0	; 240
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 ef       	ldi	r26, 0xF0	; 240
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ac 3f       	cpi	r26, 0xFC	; 252
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 4c 06 	jmp	0xc98	; 0xc98 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#include "SRAM.h"


int main(void)
{
	USART_Init(MYUBRR);
  ae:	8f e1       	ldi	r24, 0x1F	; 31
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	0e 94 f7 00 	call	0x1ee	; 0x1ee <USART_Init>
	
	MCUCR |= (1 << SRE);  // Initializes SRAM  
  b6:	85 b7       	in	r24, 0x35	; 53
  b8:	80 68       	ori	r24, 0x80	; 128
  ba:	85 bf       	out	0x35, r24	; 53
	
	SRAM_test();	
  bc:	0e 94 6c 00 	call	0xd8	; 0xd8 <SRAM_test>
	
	PORTA |= (0 << PA0) | (0 << PA1) | (0 << PA2);
  c0:	8b b3       	in	r24, 0x1b	; 27
  c2:	8b bb       	out	0x1b, r24	; 27
	PORTD |= (1 << PD6);
  c4:	96 9a       	sbi	0x12, 6	; 18
	while (1)
	{
		PORTD |= (1 << PD6);
		int pa1 = PA1;
		printf(pa1);
  c6:	c1 e0       	ldi	r28, 0x01	; 1
	
	PORTA |= (0 << PA0) | (0 << PA1) | (0 << PA2);
	PORTD |= (1 << PD6);
	while (1)
	{
		PORTD |= (1 << PD6);
  c8:	96 9a       	sbi	0x12, 6	; 18
		int pa1 = PA1;
		printf(pa1);
  ca:	1f 92       	push	r1
  cc:	cf 93       	push	r28
  ce:	0e 94 af 01 	call	0x35e	; 0x35e <printf>
  d2:	0f 90       	pop	r0
  d4:	0f 90       	pop	r0
  d6:	f8 cf       	rjmp	.-16     	; 0xc8 <main+0x1a>

000000d8 <SRAM_test>:
#include <stdlib.h>
#include <stdint.h>

void SRAM_test(void) 
{ 
  d8:	cf 92       	push	r12
  da:	df 92       	push	r13
  dc:	ef 92       	push	r14
  de:	ff 92       	push	r15
  e0:	0f 93       	push	r16
  e2:	1f 93       	push	r17
  e4:	cf 93       	push	r28
  e6:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM 
	uint16_t ext_ram_size = 0x800; 
	uint16_t write_errors = 0; 
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
  e8:	8a e0       	ldi	r24, 0x0A	; 10
  ea:	91 e0       	ldi	r25, 0x01	; 1
  ec:	0e 94 c3 01 	call	0x386	; 0x386 <puts>
	// rand() stores some internal state, so calling this function in a loop will 
	// yield different seeds each time (unless srand() is called before this function) 
	uint16_t seed = rand();
  f0:	0e 94 54 01 	call	0x2a8	; 0x2a8 <rand>
  f4:	6c 01       	movw	r12, r24
	// Write phase: Immediately check that the correct value was stored srand(seed); 
	
	for (uint16_t i = 0; i < ext_ram_size; i++) 
  f6:	c0 e0       	ldi	r28, 0x00	; 0
  f8:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void) 
{ 
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM 
	uint16_t ext_ram_size = 0x800; 
	uint16_t write_errors = 0; 
  fa:	00 e0       	ldi	r16, 0x00	; 0
  fc:	10 e0       	ldi	r17, 0x00	; 0
		uint8_t some_value = rand(); 
		ext_ram[i] = some_value; uint8_t retreived_value = ext_ram[i]; 
		
		if (retreived_value != some_value) 
		{ 
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value); 
  fe:	0f 2e       	mov	r0, r31
 100:	f0 e2       	ldi	r31, 0x20	; 32
 102:	ef 2e       	mov	r14, r31
 104:	f1 e0       	ldi	r31, 0x01	; 1
 106:	ff 2e       	mov	r15, r31
 108:	f0 2d       	mov	r31, r0
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored srand(seed); 
	
	for (uint16_t i = 0; i < ext_ram_size; i++) 
	{ 
		uint8_t some_value = rand(); 
 10a:	0e 94 54 01 	call	0x2a8	; 0x2a8 <rand>
 10e:	fe 01       	movw	r30, r28
 110:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value; uint8_t retreived_value = ext_ram[i]; 
 112:	80 83       	st	Z, r24
 114:	20 81       	ld	r18, Z
		
		if (retreived_value != some_value) 
 116:	28 17       	cp	r18, r24
 118:	a9 f0       	breq	.+42     	; 0x144 <SRAM_test+0x6c>
		{ 
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value); 
 11a:	99 27       	eor	r25, r25
 11c:	9f 93       	push	r25
 11e:	8f 93       	push	r24
 120:	1f 92       	push	r1
 122:	2f 93       	push	r18
 124:	df 93       	push	r29
 126:	cf 93       	push	r28
 128:	ff 92       	push	r15
 12a:	ef 92       	push	r14
 12c:	0e 94 af 01 	call	0x35e	; 0x35e <printf>
			write_errors++; 
 130:	0f 5f       	subi	r16, 0xFF	; 255
 132:	1f 4f       	sbci	r17, 0xFF	; 255
 134:	8d b7       	in	r24, 0x3d	; 61
 136:	9e b7       	in	r25, 0x3e	; 62
 138:	08 96       	adiw	r24, 0x08	; 8
 13a:	0f b6       	in	r0, 0x3f	; 63
 13c:	f8 94       	cli
 13e:	9e bf       	out	0x3e, r25	; 62
 140:	0f be       	out	0x3f, r0	; 63
 142:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will 
	// yield different seeds each time (unless srand() is called before this function) 
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored srand(seed); 
	
	for (uint16_t i = 0; i < ext_ram_size; i++) 
 144:	21 96       	adiw	r28, 0x01	; 1
 146:	c1 15       	cp	r28, r1
 148:	98 e0       	ldi	r25, 0x08	; 8
 14a:	d9 07       	cpc	r29, r25
 14c:	f1 f6       	brne	.-68     	; 0x10a <SRAM_test+0x32>
			write_errors++; 
		} 
	}
	
	// Retrieval phase: Check that no values were changed during or after the write phase 
	srand(seed);	// reset the PRNG to the state it had before the write phase 
 14e:	c6 01       	movw	r24, r12
 150:	0e 94 59 01 	call	0x2b2	; 0x2b2 <srand>
	
	for (uint16_t i = 0; i < ext_ram_size; i++) 
 154:	c0 e0       	ldi	r28, 0x00	; 0
 156:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void) 
{ 
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM 
	uint16_t ext_ram_size = 0x800; 
	uint16_t write_errors = 0; 
	uint16_t retrieval_errors = 0;
 158:	e1 2c       	mov	r14, r1
 15a:	f1 2c       	mov	r15, r1
		uint8_t some_value = rand(); 
		uint8_t retreived_value = ext_ram[i]; 
		
		if (retreived_value != some_value) 
		{ 
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value); 
 15c:	0f 2e       	mov	r0, r31
 15e:	f9 e5       	ldi	r31, 0x59	; 89
 160:	cf 2e       	mov	r12, r31
 162:	f1 e0       	ldi	r31, 0x01	; 1
 164:	df 2e       	mov	r13, r31
 166:	f0 2d       	mov	r31, r0
	// Retrieval phase: Check that no values were changed during or after the write phase 
	srand(seed);	// reset the PRNG to the state it had before the write phase 
	
	for (uint16_t i = 0; i < ext_ram_size; i++) 
	{ 
		uint8_t some_value = rand(); 
 168:	0e 94 54 01 	call	0x2a8	; 0x2a8 <rand>
 16c:	fe 01       	movw	r30, r28
 16e:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i]; 
 170:	20 81       	ld	r18, Z
		
		if (retreived_value != some_value) 
 172:	28 17       	cp	r18, r24
 174:	b1 f0       	breq	.+44     	; 0x1a2 <SRAM_test+0xca>
		{ 
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value); 
 176:	99 27       	eor	r25, r25
 178:	9f 93       	push	r25
 17a:	8f 93       	push	r24
 17c:	1f 92       	push	r1
 17e:	2f 93       	push	r18
 180:	df 93       	push	r29
 182:	cf 93       	push	r28
 184:	df 92       	push	r13
 186:	cf 92       	push	r12
 188:	0e 94 af 01 	call	0x35e	; 0x35e <printf>
			retrieval_errors++; 
 18c:	8f ef       	ldi	r24, 0xFF	; 255
 18e:	e8 1a       	sub	r14, r24
 190:	f8 0a       	sbc	r15, r24
 192:	8d b7       	in	r24, 0x3d	; 61
 194:	9e b7       	in	r25, 0x3e	; 62
 196:	08 96       	adiw	r24, 0x08	; 8
 198:	0f b6       	in	r0, 0x3f	; 63
 19a:	f8 94       	cli
 19c:	9e bf       	out	0x3e, r25	; 62
 19e:	0f be       	out	0x3f, r0	; 63
 1a0:	8d bf       	out	0x3d, r24	; 61
	}
	
	// Retrieval phase: Check that no values were changed during or after the write phase 
	srand(seed);	// reset the PRNG to the state it had before the write phase 
	
	for (uint16_t i = 0; i < ext_ram_size; i++) 
 1a2:	21 96       	adiw	r28, 0x01	; 1
 1a4:	c1 15       	cp	r28, r1
 1a6:	98 e0       	ldi	r25, 0x08	; 8
 1a8:	d9 07       	cpc	r29, r25
 1aa:	f1 f6       	brne	.-68     	; 0x168 <SRAM_test+0x90>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value); 
			retrieval_errors++; 
		} 
	} 
	
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors); 
 1ac:	ff 92       	push	r15
 1ae:	ef 92       	push	r14
 1b0:	1f 93       	push	r17
 1b2:	0f 93       	push	r16
 1b4:	86 e9       	ldi	r24, 0x96	; 150
 1b6:	91 e0       	ldi	r25, 0x01	; 1
 1b8:	9f 93       	push	r25
 1ba:	8f 93       	push	r24
 1bc:	0e 94 af 01 	call	0x35e	; 0x35e <printf>
 1c0:	0f 90       	pop	r0
 1c2:	0f 90       	pop	r0
 1c4:	0f 90       	pop	r0
 1c6:	0f 90       	pop	r0
 1c8:	0f 90       	pop	r0
 1ca:	0f 90       	pop	r0
 1cc:	df 91       	pop	r29
 1ce:	cf 91       	pop	r28
 1d0:	1f 91       	pop	r17
 1d2:	0f 91       	pop	r16
 1d4:	ff 90       	pop	r15
 1d6:	ef 90       	pop	r14
 1d8:	df 90       	pop	r13
 1da:	cf 90       	pop	r12
 1dc:	08 95       	ret

000001de <USART_Transmit>:
}

void USART_Transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while ( !(UCSR0A & (1<<UDRE0)) );
 1de:	5d 9b       	sbis	0x0b, 5	; 11
 1e0:	fe cf       	rjmp	.-4      	; 0x1de <USART_Transmit>
	
	/* Put data into buffer, sends the data */
	UDR0 = data;
 1e2:	8c b9       	out	0x0c, r24	; 12
 1e4:	08 95       	ret

000001e6 <USART_Receive>:
}

unsigned char USART_Receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) );
 1e6:	5f 9b       	sbis	0x0b, 7	; 11
 1e8:	fe cf       	rjmp	.-4      	; 0x1e6 <USART_Receive>
	
	/* Get and return received data from buffer */
	return UDR0;
 1ea:	8c b1       	in	r24, 0x0c	; 12
}
 1ec:	08 95       	ret

000001ee <USART_Init>:

FILE *uart;

void USART_Init(unsigned int ubrr)
{
	UBRR0H = (unsigned char)(ubrr>>8);
 1ee:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 1f0:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 1f2:	88 e1       	ldi	r24, 0x18	; 24
 1f4:	8a b9       	out	0x0a, r24	; 10
	
	uart = fdevopen(&USART_Transmit, &USART_Receive);
 1f6:	63 ef       	ldi	r22, 0xF3	; 243
 1f8:	70 e0       	ldi	r23, 0x00	; 0
 1fa:	8f ee       	ldi	r24, 0xEF	; 239
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	0e 94 64 01 	call	0x2c8	; 0x2c8 <fdevopen>
 202:	90 93 f1 01 	sts	0x01F1, r25
 206:	80 93 f0 01 	sts	0x01F0, r24
 20a:	08 95       	ret

0000020c <do_rand>:
 20c:	8f 92       	push	r8
 20e:	9f 92       	push	r9
 210:	af 92       	push	r10
 212:	bf 92       	push	r11
 214:	cf 92       	push	r12
 216:	df 92       	push	r13
 218:	ef 92       	push	r14
 21a:	ff 92       	push	r15
 21c:	cf 93       	push	r28
 21e:	df 93       	push	r29
 220:	ec 01       	movw	r28, r24
 222:	68 81       	ld	r22, Y
 224:	79 81       	ldd	r23, Y+1	; 0x01
 226:	8a 81       	ldd	r24, Y+2	; 0x02
 228:	9b 81       	ldd	r25, Y+3	; 0x03
 22a:	61 15       	cp	r22, r1
 22c:	71 05       	cpc	r23, r1
 22e:	81 05       	cpc	r24, r1
 230:	91 05       	cpc	r25, r1
 232:	21 f4       	brne	.+8      	; 0x23c <do_rand+0x30>
 234:	64 e2       	ldi	r22, 0x24	; 36
 236:	79 ed       	ldi	r23, 0xD9	; 217
 238:	8b e5       	ldi	r24, 0x5B	; 91
 23a:	97 e0       	ldi	r25, 0x07	; 7
 23c:	2d e1       	ldi	r18, 0x1D	; 29
 23e:	33 ef       	ldi	r19, 0xF3	; 243
 240:	41 e0       	ldi	r20, 0x01	; 1
 242:	50 e0       	ldi	r21, 0x00	; 0
 244:	0e 94 b2 05 	call	0xb64	; 0xb64 <__divmodsi4>
 248:	49 01       	movw	r8, r18
 24a:	5a 01       	movw	r10, r20
 24c:	9b 01       	movw	r18, r22
 24e:	ac 01       	movw	r20, r24
 250:	a7 ea       	ldi	r26, 0xA7	; 167
 252:	b1 e4       	ldi	r27, 0x41	; 65
 254:	0e 94 d1 05 	call	0xba2	; 0xba2 <__muluhisi3>
 258:	6b 01       	movw	r12, r22
 25a:	7c 01       	movw	r14, r24
 25c:	ac ee       	ldi	r26, 0xEC	; 236
 25e:	b4 ef       	ldi	r27, 0xF4	; 244
 260:	a5 01       	movw	r20, r10
 262:	94 01       	movw	r18, r8
 264:	0e 94 df 05 	call	0xbbe	; 0xbbe <__mulohisi3>
 268:	c6 0e       	add	r12, r22
 26a:	d7 1e       	adc	r13, r23
 26c:	e8 1e       	adc	r14, r24
 26e:	f9 1e       	adc	r15, r25
 270:	f7 fe       	sbrs	r15, 7
 272:	06 c0       	rjmp	.+12     	; 0x280 <do_rand+0x74>
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	c8 1a       	sub	r12, r24
 278:	d1 08       	sbc	r13, r1
 27a:	e1 08       	sbc	r14, r1
 27c:	80 e8       	ldi	r24, 0x80	; 128
 27e:	f8 0a       	sbc	r15, r24
 280:	c8 82       	st	Y, r12
 282:	d9 82       	std	Y+1, r13	; 0x01
 284:	ea 82       	std	Y+2, r14	; 0x02
 286:	fb 82       	std	Y+3, r15	; 0x03
 288:	c6 01       	movw	r24, r12
 28a:	9f 77       	andi	r25, 0x7F	; 127
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	ff 90       	pop	r15
 292:	ef 90       	pop	r14
 294:	df 90       	pop	r13
 296:	cf 90       	pop	r12
 298:	bf 90       	pop	r11
 29a:	af 90       	pop	r10
 29c:	9f 90       	pop	r9
 29e:	8f 90       	pop	r8
 2a0:	08 95       	ret

000002a2 <rand_r>:
 2a2:	0e 94 06 01 	call	0x20c	; 0x20c <do_rand>
 2a6:	08 95       	ret

000002a8 <rand>:
 2a8:	80 e0       	ldi	r24, 0x00	; 0
 2aa:	91 e0       	ldi	r25, 0x01	; 1
 2ac:	0e 94 06 01 	call	0x20c	; 0x20c <do_rand>
 2b0:	08 95       	ret

000002b2 <srand>:
 2b2:	a0 e0       	ldi	r26, 0x00	; 0
 2b4:	b0 e0       	ldi	r27, 0x00	; 0
 2b6:	80 93 00 01 	sts	0x0100, r24
 2ba:	90 93 01 01 	sts	0x0101, r25
 2be:	a0 93 02 01 	sts	0x0102, r26
 2c2:	b0 93 03 01 	sts	0x0103, r27
 2c6:	08 95       	ret

000002c8 <fdevopen>:
 2c8:	0f 93       	push	r16
 2ca:	1f 93       	push	r17
 2cc:	cf 93       	push	r28
 2ce:	df 93       	push	r29
 2d0:	ec 01       	movw	r28, r24
 2d2:	8b 01       	movw	r16, r22
 2d4:	00 97       	sbiw	r24, 0x00	; 0
 2d6:	31 f4       	brne	.+12     	; 0x2e4 <fdevopen+0x1c>
 2d8:	61 15       	cp	r22, r1
 2da:	71 05       	cpc	r23, r1
 2dc:	19 f4       	brne	.+6      	; 0x2e4 <fdevopen+0x1c>
 2de:	80 e0       	ldi	r24, 0x00	; 0
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	38 c0       	rjmp	.+112    	; 0x354 <fdevopen+0x8c>
 2e4:	6e e0       	ldi	r22, 0x0E	; 14
 2e6:	70 e0       	ldi	r23, 0x00	; 0
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	0e 94 c2 03 	call	0x784	; 0x784 <calloc>
 2f0:	fc 01       	movw	r30, r24
 2f2:	00 97       	sbiw	r24, 0x00	; 0
 2f4:	a1 f3       	breq	.-24     	; 0x2de <fdevopen+0x16>
 2f6:	80 e8       	ldi	r24, 0x80	; 128
 2f8:	83 83       	std	Z+3, r24	; 0x03
 2fa:	01 15       	cp	r16, r1
 2fc:	11 05       	cpc	r17, r1
 2fe:	71 f0       	breq	.+28     	; 0x31c <fdevopen+0x54>
 300:	13 87       	std	Z+11, r17	; 0x0b
 302:	02 87       	std	Z+10, r16	; 0x0a
 304:	81 e8       	ldi	r24, 0x81	; 129
 306:	83 83       	std	Z+3, r24	; 0x03
 308:	80 91 f2 01 	lds	r24, 0x01F2
 30c:	90 91 f3 01 	lds	r25, 0x01F3
 310:	89 2b       	or	r24, r25
 312:	21 f4       	brne	.+8      	; 0x31c <fdevopen+0x54>
 314:	f0 93 f3 01 	sts	0x01F3, r31
 318:	e0 93 f2 01 	sts	0x01F2, r30
 31c:	20 97       	sbiw	r28, 0x00	; 0
 31e:	c9 f0       	breq	.+50     	; 0x352 <fdevopen+0x8a>
 320:	d1 87       	std	Z+9, r29	; 0x09
 322:	c0 87       	std	Z+8, r28	; 0x08
 324:	83 81       	ldd	r24, Z+3	; 0x03
 326:	82 60       	ori	r24, 0x02	; 2
 328:	83 83       	std	Z+3, r24	; 0x03
 32a:	80 91 f4 01 	lds	r24, 0x01F4
 32e:	90 91 f5 01 	lds	r25, 0x01F5
 332:	89 2b       	or	r24, r25
 334:	71 f4       	brne	.+28     	; 0x352 <fdevopen+0x8a>
 336:	f0 93 f5 01 	sts	0x01F5, r31
 33a:	e0 93 f4 01 	sts	0x01F4, r30
 33e:	80 91 f6 01 	lds	r24, 0x01F6
 342:	90 91 f7 01 	lds	r25, 0x01F7
 346:	89 2b       	or	r24, r25
 348:	21 f4       	brne	.+8      	; 0x352 <fdevopen+0x8a>
 34a:	f0 93 f7 01 	sts	0x01F7, r31
 34e:	e0 93 f6 01 	sts	0x01F6, r30
 352:	cf 01       	movw	r24, r30
 354:	df 91       	pop	r29
 356:	cf 91       	pop	r28
 358:	1f 91       	pop	r17
 35a:	0f 91       	pop	r16
 35c:	08 95       	ret

0000035e <printf>:
 35e:	a0 e0       	ldi	r26, 0x00	; 0
 360:	b0 e0       	ldi	r27, 0x00	; 0
 362:	e5 eb       	ldi	r30, 0xB5	; 181
 364:	f1 e0       	ldi	r31, 0x01	; 1
 366:	0c 94 f4 05 	jmp	0xbe8	; 0xbe8 <__prologue_saves__+0x20>
 36a:	fe 01       	movw	r30, r28
 36c:	35 96       	adiw	r30, 0x05	; 5
 36e:	61 91       	ld	r22, Z+
 370:	71 91       	ld	r23, Z+
 372:	af 01       	movw	r20, r30
 374:	80 91 f4 01 	lds	r24, 0x01F4
 378:	90 91 f5 01 	lds	r25, 0x01F5
 37c:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <vfprintf>
 380:	e2 e0       	ldi	r30, 0x02	; 2
 382:	0c 94 10 06 	jmp	0xc20	; 0xc20 <__epilogue_restores__+0x20>

00000386 <puts>:
 386:	0f 93       	push	r16
 388:	1f 93       	push	r17
 38a:	cf 93       	push	r28
 38c:	df 93       	push	r29
 38e:	e0 91 f4 01 	lds	r30, 0x01F4
 392:	f0 91 f5 01 	lds	r31, 0x01F5
 396:	23 81       	ldd	r18, Z+3	; 0x03
 398:	21 ff       	sbrs	r18, 1
 39a:	1b c0       	rjmp	.+54     	; 0x3d2 <puts+0x4c>
 39c:	ec 01       	movw	r28, r24
 39e:	00 e0       	ldi	r16, 0x00	; 0
 3a0:	10 e0       	ldi	r17, 0x00	; 0
 3a2:	89 91       	ld	r24, Y+
 3a4:	60 91 f4 01 	lds	r22, 0x01F4
 3a8:	70 91 f5 01 	lds	r23, 0x01F5
 3ac:	db 01       	movw	r26, r22
 3ae:	18 96       	adiw	r26, 0x08	; 8
 3b0:	ed 91       	ld	r30, X+
 3b2:	fc 91       	ld	r31, X
 3b4:	19 97       	sbiw	r26, 0x09	; 9
 3b6:	88 23       	and	r24, r24
 3b8:	31 f0       	breq	.+12     	; 0x3c6 <puts+0x40>
 3ba:	09 95       	icall
 3bc:	89 2b       	or	r24, r25
 3be:	89 f3       	breq	.-30     	; 0x3a2 <puts+0x1c>
 3c0:	0f ef       	ldi	r16, 0xFF	; 255
 3c2:	1f ef       	ldi	r17, 0xFF	; 255
 3c4:	ee cf       	rjmp	.-36     	; 0x3a2 <puts+0x1c>
 3c6:	8a e0       	ldi	r24, 0x0A	; 10
 3c8:	09 95       	icall
 3ca:	89 2b       	or	r24, r25
 3cc:	11 f4       	brne	.+4      	; 0x3d2 <puts+0x4c>
 3ce:	c8 01       	movw	r24, r16
 3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <puts+0x50>
 3d2:	8f ef       	ldi	r24, 0xFF	; 255
 3d4:	9f ef       	ldi	r25, 0xFF	; 255
 3d6:	df 91       	pop	r29
 3d8:	cf 91       	pop	r28
 3da:	1f 91       	pop	r17
 3dc:	0f 91       	pop	r16
 3de:	08 95       	ret

000003e0 <vfprintf>:
 3e0:	ac e0       	ldi	r26, 0x0C	; 12
 3e2:	b0 e0       	ldi	r27, 0x00	; 0
 3e4:	e6 ef       	ldi	r30, 0xF6	; 246
 3e6:	f1 e0       	ldi	r31, 0x01	; 1
 3e8:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__prologue_saves__>
 3ec:	7c 01       	movw	r14, r24
 3ee:	6b 01       	movw	r12, r22
 3f0:	8a 01       	movw	r16, r20
 3f2:	fc 01       	movw	r30, r24
 3f4:	17 82       	std	Z+7, r1	; 0x07
 3f6:	16 82       	std	Z+6, r1	; 0x06
 3f8:	83 81       	ldd	r24, Z+3	; 0x03
 3fa:	81 ff       	sbrs	r24, 1
 3fc:	bd c1       	rjmp	.+890    	; 0x778 <__stack+0x279>
 3fe:	ce 01       	movw	r24, r28
 400:	01 96       	adiw	r24, 0x01	; 1
 402:	4c 01       	movw	r8, r24
 404:	f7 01       	movw	r30, r14
 406:	93 81       	ldd	r25, Z+3	; 0x03
 408:	f6 01       	movw	r30, r12
 40a:	93 fd       	sbrc	r25, 3
 40c:	85 91       	lpm	r24, Z+
 40e:	93 ff       	sbrs	r25, 3
 410:	81 91       	ld	r24, Z+
 412:	6f 01       	movw	r12, r30
 414:	88 23       	and	r24, r24
 416:	09 f4       	brne	.+2      	; 0x41a <vfprintf+0x3a>
 418:	ab c1       	rjmp	.+854    	; 0x770 <__stack+0x271>
 41a:	85 32       	cpi	r24, 0x25	; 37
 41c:	39 f4       	brne	.+14     	; 0x42c <vfprintf+0x4c>
 41e:	93 fd       	sbrc	r25, 3
 420:	85 91       	lpm	r24, Z+
 422:	93 ff       	sbrs	r25, 3
 424:	81 91       	ld	r24, Z+
 426:	6f 01       	movw	r12, r30
 428:	85 32       	cpi	r24, 0x25	; 37
 42a:	29 f4       	brne	.+10     	; 0x436 <vfprintf+0x56>
 42c:	b7 01       	movw	r22, r14
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	0e 94 22 05 	call	0xa44	; 0xa44 <fputc>
 434:	e7 cf       	rjmp	.-50     	; 0x404 <vfprintf+0x24>
 436:	51 2c       	mov	r5, r1
 438:	31 2c       	mov	r3, r1
 43a:	20 e0       	ldi	r18, 0x00	; 0
 43c:	20 32       	cpi	r18, 0x20	; 32
 43e:	a0 f4       	brcc	.+40     	; 0x468 <vfprintf+0x88>
 440:	8b 32       	cpi	r24, 0x2B	; 43
 442:	69 f0       	breq	.+26     	; 0x45e <vfprintf+0x7e>
 444:	30 f4       	brcc	.+12     	; 0x452 <vfprintf+0x72>
 446:	80 32       	cpi	r24, 0x20	; 32
 448:	59 f0       	breq	.+22     	; 0x460 <vfprintf+0x80>
 44a:	83 32       	cpi	r24, 0x23	; 35
 44c:	69 f4       	brne	.+26     	; 0x468 <vfprintf+0x88>
 44e:	20 61       	ori	r18, 0x10	; 16
 450:	2c c0       	rjmp	.+88     	; 0x4aa <vfprintf+0xca>
 452:	8d 32       	cpi	r24, 0x2D	; 45
 454:	39 f0       	breq	.+14     	; 0x464 <vfprintf+0x84>
 456:	80 33       	cpi	r24, 0x30	; 48
 458:	39 f4       	brne	.+14     	; 0x468 <vfprintf+0x88>
 45a:	21 60       	ori	r18, 0x01	; 1
 45c:	26 c0       	rjmp	.+76     	; 0x4aa <vfprintf+0xca>
 45e:	22 60       	ori	r18, 0x02	; 2
 460:	24 60       	ori	r18, 0x04	; 4
 462:	23 c0       	rjmp	.+70     	; 0x4aa <vfprintf+0xca>
 464:	28 60       	ori	r18, 0x08	; 8
 466:	21 c0       	rjmp	.+66     	; 0x4aa <vfprintf+0xca>
 468:	27 fd       	sbrc	r18, 7
 46a:	27 c0       	rjmp	.+78     	; 0x4ba <vfprintf+0xda>
 46c:	30 ed       	ldi	r19, 0xD0	; 208
 46e:	38 0f       	add	r19, r24
 470:	3a 30       	cpi	r19, 0x0A	; 10
 472:	78 f4       	brcc	.+30     	; 0x492 <vfprintf+0xb2>
 474:	26 ff       	sbrs	r18, 6
 476:	06 c0       	rjmp	.+12     	; 0x484 <vfprintf+0xa4>
 478:	fa e0       	ldi	r31, 0x0A	; 10
 47a:	5f 9e       	mul	r5, r31
 47c:	30 0d       	add	r19, r0
 47e:	11 24       	eor	r1, r1
 480:	53 2e       	mov	r5, r19
 482:	13 c0       	rjmp	.+38     	; 0x4aa <vfprintf+0xca>
 484:	8a e0       	ldi	r24, 0x0A	; 10
 486:	38 9e       	mul	r3, r24
 488:	30 0d       	add	r19, r0
 48a:	11 24       	eor	r1, r1
 48c:	33 2e       	mov	r3, r19
 48e:	20 62       	ori	r18, 0x20	; 32
 490:	0c c0       	rjmp	.+24     	; 0x4aa <vfprintf+0xca>
 492:	8e 32       	cpi	r24, 0x2E	; 46
 494:	21 f4       	brne	.+8      	; 0x49e <vfprintf+0xbe>
 496:	26 fd       	sbrc	r18, 6
 498:	6b c1       	rjmp	.+726    	; 0x770 <__stack+0x271>
 49a:	20 64       	ori	r18, 0x40	; 64
 49c:	06 c0       	rjmp	.+12     	; 0x4aa <vfprintf+0xca>
 49e:	8c 36       	cpi	r24, 0x6C	; 108
 4a0:	11 f4       	brne	.+4      	; 0x4a6 <vfprintf+0xc6>
 4a2:	20 68       	ori	r18, 0x80	; 128
 4a4:	02 c0       	rjmp	.+4      	; 0x4aa <vfprintf+0xca>
 4a6:	88 36       	cpi	r24, 0x68	; 104
 4a8:	41 f4       	brne	.+16     	; 0x4ba <vfprintf+0xda>
 4aa:	f6 01       	movw	r30, r12
 4ac:	93 fd       	sbrc	r25, 3
 4ae:	85 91       	lpm	r24, Z+
 4b0:	93 ff       	sbrs	r25, 3
 4b2:	81 91       	ld	r24, Z+
 4b4:	6f 01       	movw	r12, r30
 4b6:	81 11       	cpse	r24, r1
 4b8:	c1 cf       	rjmp	.-126    	; 0x43c <vfprintf+0x5c>
 4ba:	98 2f       	mov	r25, r24
 4bc:	9f 7d       	andi	r25, 0xDF	; 223
 4be:	95 54       	subi	r25, 0x45	; 69
 4c0:	93 30       	cpi	r25, 0x03	; 3
 4c2:	28 f4       	brcc	.+10     	; 0x4ce <vfprintf+0xee>
 4c4:	0c 5f       	subi	r16, 0xFC	; 252
 4c6:	1f 4f       	sbci	r17, 0xFF	; 255
 4c8:	ff e3       	ldi	r31, 0x3F	; 63
 4ca:	f9 83       	std	Y+1, r31	; 0x01
 4cc:	0d c0       	rjmp	.+26     	; 0x4e8 <vfprintf+0x108>
 4ce:	83 36       	cpi	r24, 0x63	; 99
 4d0:	31 f0       	breq	.+12     	; 0x4de <vfprintf+0xfe>
 4d2:	83 37       	cpi	r24, 0x73	; 115
 4d4:	71 f0       	breq	.+28     	; 0x4f2 <vfprintf+0x112>
 4d6:	83 35       	cpi	r24, 0x53	; 83
 4d8:	09 f0       	breq	.+2      	; 0x4dc <vfprintf+0xfc>
 4da:	5b c0       	rjmp	.+182    	; 0x592 <__stack+0x93>
 4dc:	22 c0       	rjmp	.+68     	; 0x522 <__stack+0x23>
 4de:	f8 01       	movw	r30, r16
 4e0:	80 81       	ld	r24, Z
 4e2:	89 83       	std	Y+1, r24	; 0x01
 4e4:	0e 5f       	subi	r16, 0xFE	; 254
 4e6:	1f 4f       	sbci	r17, 0xFF	; 255
 4e8:	44 24       	eor	r4, r4
 4ea:	43 94       	inc	r4
 4ec:	51 2c       	mov	r5, r1
 4ee:	54 01       	movw	r10, r8
 4f0:	15 c0       	rjmp	.+42     	; 0x51c <__stack+0x1d>
 4f2:	38 01       	movw	r6, r16
 4f4:	f2 e0       	ldi	r31, 0x02	; 2
 4f6:	6f 0e       	add	r6, r31
 4f8:	71 1c       	adc	r7, r1
 4fa:	f8 01       	movw	r30, r16
 4fc:	a0 80       	ld	r10, Z
 4fe:	b1 80       	ldd	r11, Z+1	; 0x01
 500:	26 ff       	sbrs	r18, 6
 502:	03 c0       	rjmp	.+6      	; 0x50a <__stack+0xb>
 504:	65 2d       	mov	r22, r5
 506:	70 e0       	ldi	r23, 0x00	; 0
 508:	02 c0       	rjmp	.+4      	; 0x50e <__stack+0xf>
 50a:	6f ef       	ldi	r22, 0xFF	; 255
 50c:	7f ef       	ldi	r23, 0xFF	; 255
 50e:	c5 01       	movw	r24, r10
 510:	2c 87       	std	Y+12, r18	; 0x0c
 512:	0e 94 17 05 	call	0xa2e	; 0xa2e <strnlen>
 516:	2c 01       	movw	r4, r24
 518:	83 01       	movw	r16, r6
 51a:	2c 85       	ldd	r18, Y+12	; 0x0c
 51c:	2f 77       	andi	r18, 0x7F	; 127
 51e:	22 2e       	mov	r2, r18
 520:	17 c0       	rjmp	.+46     	; 0x550 <__stack+0x51>
 522:	38 01       	movw	r6, r16
 524:	f2 e0       	ldi	r31, 0x02	; 2
 526:	6f 0e       	add	r6, r31
 528:	71 1c       	adc	r7, r1
 52a:	f8 01       	movw	r30, r16
 52c:	a0 80       	ld	r10, Z
 52e:	b1 80       	ldd	r11, Z+1	; 0x01
 530:	26 ff       	sbrs	r18, 6
 532:	03 c0       	rjmp	.+6      	; 0x53a <__stack+0x3b>
 534:	65 2d       	mov	r22, r5
 536:	70 e0       	ldi	r23, 0x00	; 0
 538:	02 c0       	rjmp	.+4      	; 0x53e <__stack+0x3f>
 53a:	6f ef       	ldi	r22, 0xFF	; 255
 53c:	7f ef       	ldi	r23, 0xFF	; 255
 53e:	c5 01       	movw	r24, r10
 540:	2c 87       	std	Y+12, r18	; 0x0c
 542:	0e 94 05 05 	call	0xa0a	; 0xa0a <strnlen_P>
 546:	2c 01       	movw	r4, r24
 548:	2c 85       	ldd	r18, Y+12	; 0x0c
 54a:	20 68       	ori	r18, 0x80	; 128
 54c:	22 2e       	mov	r2, r18
 54e:	83 01       	movw	r16, r6
 550:	23 fc       	sbrc	r2, 3
 552:	1b c0       	rjmp	.+54     	; 0x58a <__stack+0x8b>
 554:	83 2d       	mov	r24, r3
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	48 16       	cp	r4, r24
 55a:	59 06       	cpc	r5, r25
 55c:	b0 f4       	brcc	.+44     	; 0x58a <__stack+0x8b>
 55e:	b7 01       	movw	r22, r14
 560:	80 e2       	ldi	r24, 0x20	; 32
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	0e 94 22 05 	call	0xa44	; 0xa44 <fputc>
 568:	3a 94       	dec	r3
 56a:	f4 cf       	rjmp	.-24     	; 0x554 <__stack+0x55>
 56c:	f5 01       	movw	r30, r10
 56e:	27 fc       	sbrc	r2, 7
 570:	85 91       	lpm	r24, Z+
 572:	27 fe       	sbrs	r2, 7
 574:	81 91       	ld	r24, Z+
 576:	5f 01       	movw	r10, r30
 578:	b7 01       	movw	r22, r14
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	0e 94 22 05 	call	0xa44	; 0xa44 <fputc>
 580:	31 10       	cpse	r3, r1
 582:	3a 94       	dec	r3
 584:	f1 e0       	ldi	r31, 0x01	; 1
 586:	4f 1a       	sub	r4, r31
 588:	51 08       	sbc	r5, r1
 58a:	41 14       	cp	r4, r1
 58c:	51 04       	cpc	r5, r1
 58e:	71 f7       	brne	.-36     	; 0x56c <__stack+0x6d>
 590:	e5 c0       	rjmp	.+458    	; 0x75c <__stack+0x25d>
 592:	84 36       	cpi	r24, 0x64	; 100
 594:	11 f0       	breq	.+4      	; 0x59a <__stack+0x9b>
 596:	89 36       	cpi	r24, 0x69	; 105
 598:	39 f5       	brne	.+78     	; 0x5e8 <__stack+0xe9>
 59a:	f8 01       	movw	r30, r16
 59c:	27 ff       	sbrs	r18, 7
 59e:	07 c0       	rjmp	.+14     	; 0x5ae <__stack+0xaf>
 5a0:	60 81       	ld	r22, Z
 5a2:	71 81       	ldd	r23, Z+1	; 0x01
 5a4:	82 81       	ldd	r24, Z+2	; 0x02
 5a6:	93 81       	ldd	r25, Z+3	; 0x03
 5a8:	0c 5f       	subi	r16, 0xFC	; 252
 5aa:	1f 4f       	sbci	r17, 0xFF	; 255
 5ac:	08 c0       	rjmp	.+16     	; 0x5be <__stack+0xbf>
 5ae:	60 81       	ld	r22, Z
 5b0:	71 81       	ldd	r23, Z+1	; 0x01
 5b2:	88 27       	eor	r24, r24
 5b4:	77 fd       	sbrc	r23, 7
 5b6:	80 95       	com	r24
 5b8:	98 2f       	mov	r25, r24
 5ba:	0e 5f       	subi	r16, 0xFE	; 254
 5bc:	1f 4f       	sbci	r17, 0xFF	; 255
 5be:	2f 76       	andi	r18, 0x6F	; 111
 5c0:	b2 2e       	mov	r11, r18
 5c2:	97 ff       	sbrs	r25, 7
 5c4:	09 c0       	rjmp	.+18     	; 0x5d8 <__stack+0xd9>
 5c6:	90 95       	com	r25
 5c8:	80 95       	com	r24
 5ca:	70 95       	com	r23
 5cc:	61 95       	neg	r22
 5ce:	7f 4f       	sbci	r23, 0xFF	; 255
 5d0:	8f 4f       	sbci	r24, 0xFF	; 255
 5d2:	9f 4f       	sbci	r25, 0xFF	; 255
 5d4:	20 68       	ori	r18, 0x80	; 128
 5d6:	b2 2e       	mov	r11, r18
 5d8:	2a e0       	ldi	r18, 0x0A	; 10
 5da:	30 e0       	ldi	r19, 0x00	; 0
 5dc:	a4 01       	movw	r20, r8
 5de:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__ultoa_invert>
 5e2:	a8 2e       	mov	r10, r24
 5e4:	a8 18       	sub	r10, r8
 5e6:	44 c0       	rjmp	.+136    	; 0x670 <__stack+0x171>
 5e8:	85 37       	cpi	r24, 0x75	; 117
 5ea:	29 f4       	brne	.+10     	; 0x5f6 <__stack+0xf7>
 5ec:	2f 7e       	andi	r18, 0xEF	; 239
 5ee:	b2 2e       	mov	r11, r18
 5f0:	2a e0       	ldi	r18, 0x0A	; 10
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	25 c0       	rjmp	.+74     	; 0x640 <__stack+0x141>
 5f6:	f2 2f       	mov	r31, r18
 5f8:	f9 7f       	andi	r31, 0xF9	; 249
 5fa:	bf 2e       	mov	r11, r31
 5fc:	8f 36       	cpi	r24, 0x6F	; 111
 5fe:	c1 f0       	breq	.+48     	; 0x630 <__stack+0x131>
 600:	18 f4       	brcc	.+6      	; 0x608 <__stack+0x109>
 602:	88 35       	cpi	r24, 0x58	; 88
 604:	79 f0       	breq	.+30     	; 0x624 <__stack+0x125>
 606:	b4 c0       	rjmp	.+360    	; 0x770 <__stack+0x271>
 608:	80 37       	cpi	r24, 0x70	; 112
 60a:	19 f0       	breq	.+6      	; 0x612 <__stack+0x113>
 60c:	88 37       	cpi	r24, 0x78	; 120
 60e:	21 f0       	breq	.+8      	; 0x618 <__stack+0x119>
 610:	af c0       	rjmp	.+350    	; 0x770 <__stack+0x271>
 612:	2f 2f       	mov	r18, r31
 614:	20 61       	ori	r18, 0x10	; 16
 616:	b2 2e       	mov	r11, r18
 618:	b4 fe       	sbrs	r11, 4
 61a:	0d c0       	rjmp	.+26     	; 0x636 <__stack+0x137>
 61c:	8b 2d       	mov	r24, r11
 61e:	84 60       	ori	r24, 0x04	; 4
 620:	b8 2e       	mov	r11, r24
 622:	09 c0       	rjmp	.+18     	; 0x636 <__stack+0x137>
 624:	24 ff       	sbrs	r18, 4
 626:	0a c0       	rjmp	.+20     	; 0x63c <__stack+0x13d>
 628:	9f 2f       	mov	r25, r31
 62a:	96 60       	ori	r25, 0x06	; 6
 62c:	b9 2e       	mov	r11, r25
 62e:	06 c0       	rjmp	.+12     	; 0x63c <__stack+0x13d>
 630:	28 e0       	ldi	r18, 0x08	; 8
 632:	30 e0       	ldi	r19, 0x00	; 0
 634:	05 c0       	rjmp	.+10     	; 0x640 <__stack+0x141>
 636:	20 e1       	ldi	r18, 0x10	; 16
 638:	30 e0       	ldi	r19, 0x00	; 0
 63a:	02 c0       	rjmp	.+4      	; 0x640 <__stack+0x141>
 63c:	20 e1       	ldi	r18, 0x10	; 16
 63e:	32 e0       	ldi	r19, 0x02	; 2
 640:	f8 01       	movw	r30, r16
 642:	b7 fe       	sbrs	r11, 7
 644:	07 c0       	rjmp	.+14     	; 0x654 <__stack+0x155>
 646:	60 81       	ld	r22, Z
 648:	71 81       	ldd	r23, Z+1	; 0x01
 64a:	82 81       	ldd	r24, Z+2	; 0x02
 64c:	93 81       	ldd	r25, Z+3	; 0x03
 64e:	0c 5f       	subi	r16, 0xFC	; 252
 650:	1f 4f       	sbci	r17, 0xFF	; 255
 652:	06 c0       	rjmp	.+12     	; 0x660 <__stack+0x161>
 654:	60 81       	ld	r22, Z
 656:	71 81       	ldd	r23, Z+1	; 0x01
 658:	80 e0       	ldi	r24, 0x00	; 0
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	0e 5f       	subi	r16, 0xFE	; 254
 65e:	1f 4f       	sbci	r17, 0xFF	; 255
 660:	a4 01       	movw	r20, r8
 662:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__ultoa_invert>
 666:	a8 2e       	mov	r10, r24
 668:	a8 18       	sub	r10, r8
 66a:	fb 2d       	mov	r31, r11
 66c:	ff 77       	andi	r31, 0x7F	; 127
 66e:	bf 2e       	mov	r11, r31
 670:	b6 fe       	sbrs	r11, 6
 672:	0b c0       	rjmp	.+22     	; 0x68a <__stack+0x18b>
 674:	2b 2d       	mov	r18, r11
 676:	2e 7f       	andi	r18, 0xFE	; 254
 678:	a5 14       	cp	r10, r5
 67a:	50 f4       	brcc	.+20     	; 0x690 <__stack+0x191>
 67c:	b4 fe       	sbrs	r11, 4
 67e:	0a c0       	rjmp	.+20     	; 0x694 <__stack+0x195>
 680:	b2 fc       	sbrc	r11, 2
 682:	08 c0       	rjmp	.+16     	; 0x694 <__stack+0x195>
 684:	2b 2d       	mov	r18, r11
 686:	2e 7e       	andi	r18, 0xEE	; 238
 688:	05 c0       	rjmp	.+10     	; 0x694 <__stack+0x195>
 68a:	7a 2c       	mov	r7, r10
 68c:	2b 2d       	mov	r18, r11
 68e:	03 c0       	rjmp	.+6      	; 0x696 <__stack+0x197>
 690:	7a 2c       	mov	r7, r10
 692:	01 c0       	rjmp	.+2      	; 0x696 <__stack+0x197>
 694:	75 2c       	mov	r7, r5
 696:	24 ff       	sbrs	r18, 4
 698:	0d c0       	rjmp	.+26     	; 0x6b4 <__stack+0x1b5>
 69a:	fe 01       	movw	r30, r28
 69c:	ea 0d       	add	r30, r10
 69e:	f1 1d       	adc	r31, r1
 6a0:	80 81       	ld	r24, Z
 6a2:	80 33       	cpi	r24, 0x30	; 48
 6a4:	11 f4       	brne	.+4      	; 0x6aa <__stack+0x1ab>
 6a6:	29 7e       	andi	r18, 0xE9	; 233
 6a8:	09 c0       	rjmp	.+18     	; 0x6bc <__stack+0x1bd>
 6aa:	22 ff       	sbrs	r18, 2
 6ac:	06 c0       	rjmp	.+12     	; 0x6ba <__stack+0x1bb>
 6ae:	73 94       	inc	r7
 6b0:	73 94       	inc	r7
 6b2:	04 c0       	rjmp	.+8      	; 0x6bc <__stack+0x1bd>
 6b4:	82 2f       	mov	r24, r18
 6b6:	86 78       	andi	r24, 0x86	; 134
 6b8:	09 f0       	breq	.+2      	; 0x6bc <__stack+0x1bd>
 6ba:	73 94       	inc	r7
 6bc:	23 fd       	sbrc	r18, 3
 6be:	13 c0       	rjmp	.+38     	; 0x6e6 <__stack+0x1e7>
 6c0:	20 ff       	sbrs	r18, 0
 6c2:	06 c0       	rjmp	.+12     	; 0x6d0 <__stack+0x1d1>
 6c4:	5a 2c       	mov	r5, r10
 6c6:	73 14       	cp	r7, r3
 6c8:	18 f4       	brcc	.+6      	; 0x6d0 <__stack+0x1d1>
 6ca:	53 0c       	add	r5, r3
 6cc:	57 18       	sub	r5, r7
 6ce:	73 2c       	mov	r7, r3
 6d0:	73 14       	cp	r7, r3
 6d2:	68 f4       	brcc	.+26     	; 0x6ee <__stack+0x1ef>
 6d4:	b7 01       	movw	r22, r14
 6d6:	80 e2       	ldi	r24, 0x20	; 32
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	2c 87       	std	Y+12, r18	; 0x0c
 6dc:	0e 94 22 05 	call	0xa44	; 0xa44 <fputc>
 6e0:	73 94       	inc	r7
 6e2:	2c 85       	ldd	r18, Y+12	; 0x0c
 6e4:	f5 cf       	rjmp	.-22     	; 0x6d0 <__stack+0x1d1>
 6e6:	73 14       	cp	r7, r3
 6e8:	10 f4       	brcc	.+4      	; 0x6ee <__stack+0x1ef>
 6ea:	37 18       	sub	r3, r7
 6ec:	01 c0       	rjmp	.+2      	; 0x6f0 <__stack+0x1f1>
 6ee:	31 2c       	mov	r3, r1
 6f0:	24 ff       	sbrs	r18, 4
 6f2:	12 c0       	rjmp	.+36     	; 0x718 <__stack+0x219>
 6f4:	b7 01       	movw	r22, r14
 6f6:	80 e3       	ldi	r24, 0x30	; 48
 6f8:	90 e0       	ldi	r25, 0x00	; 0
 6fa:	2c 87       	std	Y+12, r18	; 0x0c
 6fc:	0e 94 22 05 	call	0xa44	; 0xa44 <fputc>
 700:	2c 85       	ldd	r18, Y+12	; 0x0c
 702:	22 ff       	sbrs	r18, 2
 704:	17 c0       	rjmp	.+46     	; 0x734 <__stack+0x235>
 706:	21 ff       	sbrs	r18, 1
 708:	03 c0       	rjmp	.+6      	; 0x710 <__stack+0x211>
 70a:	88 e5       	ldi	r24, 0x58	; 88
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	02 c0       	rjmp	.+4      	; 0x714 <__stack+0x215>
 710:	88 e7       	ldi	r24, 0x78	; 120
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	b7 01       	movw	r22, r14
 716:	0c c0       	rjmp	.+24     	; 0x730 <__stack+0x231>
 718:	82 2f       	mov	r24, r18
 71a:	86 78       	andi	r24, 0x86	; 134
 71c:	59 f0       	breq	.+22     	; 0x734 <__stack+0x235>
 71e:	21 fd       	sbrc	r18, 1
 720:	02 c0       	rjmp	.+4      	; 0x726 <__stack+0x227>
 722:	80 e2       	ldi	r24, 0x20	; 32
 724:	01 c0       	rjmp	.+2      	; 0x728 <__stack+0x229>
 726:	8b e2       	ldi	r24, 0x2B	; 43
 728:	27 fd       	sbrc	r18, 7
 72a:	8d e2       	ldi	r24, 0x2D	; 45
 72c:	b7 01       	movw	r22, r14
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	0e 94 22 05 	call	0xa44	; 0xa44 <fputc>
 734:	a5 14       	cp	r10, r5
 736:	38 f4       	brcc	.+14     	; 0x746 <__stack+0x247>
 738:	b7 01       	movw	r22, r14
 73a:	80 e3       	ldi	r24, 0x30	; 48
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	0e 94 22 05 	call	0xa44	; 0xa44 <fputc>
 742:	5a 94       	dec	r5
 744:	f7 cf       	rjmp	.-18     	; 0x734 <__stack+0x235>
 746:	aa 94       	dec	r10
 748:	f4 01       	movw	r30, r8
 74a:	ea 0d       	add	r30, r10
 74c:	f1 1d       	adc	r31, r1
 74e:	80 81       	ld	r24, Z
 750:	b7 01       	movw	r22, r14
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	0e 94 22 05 	call	0xa44	; 0xa44 <fputc>
 758:	a1 10       	cpse	r10, r1
 75a:	f5 cf       	rjmp	.-22     	; 0x746 <__stack+0x247>
 75c:	33 20       	and	r3, r3
 75e:	09 f4       	brne	.+2      	; 0x762 <__stack+0x263>
 760:	51 ce       	rjmp	.-862    	; 0x404 <vfprintf+0x24>
 762:	b7 01       	movw	r22, r14
 764:	80 e2       	ldi	r24, 0x20	; 32
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	0e 94 22 05 	call	0xa44	; 0xa44 <fputc>
 76c:	3a 94       	dec	r3
 76e:	f6 cf       	rjmp	.-20     	; 0x75c <__stack+0x25d>
 770:	f7 01       	movw	r30, r14
 772:	86 81       	ldd	r24, Z+6	; 0x06
 774:	97 81       	ldd	r25, Z+7	; 0x07
 776:	02 c0       	rjmp	.+4      	; 0x77c <__stack+0x27d>
 778:	8f ef       	ldi	r24, 0xFF	; 255
 77a:	9f ef       	ldi	r25, 0xFF	; 255
 77c:	2c 96       	adiw	r28, 0x0c	; 12
 77e:	e2 e1       	ldi	r30, 0x12	; 18
 780:	0c 94 00 06 	jmp	0xc00	; 0xc00 <__epilogue_restores__>

00000784 <calloc>:
 784:	0f 93       	push	r16
 786:	1f 93       	push	r17
 788:	cf 93       	push	r28
 78a:	df 93       	push	r29
 78c:	86 9f       	mul	r24, r22
 78e:	80 01       	movw	r16, r0
 790:	87 9f       	mul	r24, r23
 792:	10 0d       	add	r17, r0
 794:	96 9f       	mul	r25, r22
 796:	10 0d       	add	r17, r0
 798:	11 24       	eor	r1, r1
 79a:	c8 01       	movw	r24, r16
 79c:	0e 94 de 03 	call	0x7bc	; 0x7bc <malloc>
 7a0:	ec 01       	movw	r28, r24
 7a2:	00 97       	sbiw	r24, 0x00	; 0
 7a4:	29 f0       	breq	.+10     	; 0x7b0 <calloc+0x2c>
 7a6:	a8 01       	movw	r20, r16
 7a8:	60 e0       	ldi	r22, 0x00	; 0
 7aa:	70 e0       	ldi	r23, 0x00	; 0
 7ac:	0e 94 10 05 	call	0xa20	; 0xa20 <memset>
 7b0:	ce 01       	movw	r24, r28
 7b2:	df 91       	pop	r29
 7b4:	cf 91       	pop	r28
 7b6:	1f 91       	pop	r17
 7b8:	0f 91       	pop	r16
 7ba:	08 95       	ret

000007bc <malloc>:
 7bc:	cf 93       	push	r28
 7be:	df 93       	push	r29
 7c0:	82 30       	cpi	r24, 0x02	; 2
 7c2:	91 05       	cpc	r25, r1
 7c4:	10 f4       	brcc	.+4      	; 0x7ca <malloc+0xe>
 7c6:	82 e0       	ldi	r24, 0x02	; 2
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	e0 91 fa 01 	lds	r30, 0x01FA
 7ce:	f0 91 fb 01 	lds	r31, 0x01FB
 7d2:	20 e0       	ldi	r18, 0x00	; 0
 7d4:	30 e0       	ldi	r19, 0x00	; 0
 7d6:	a0 e0       	ldi	r26, 0x00	; 0
 7d8:	b0 e0       	ldi	r27, 0x00	; 0
 7da:	30 97       	sbiw	r30, 0x00	; 0
 7dc:	39 f1       	breq	.+78     	; 0x82c <malloc+0x70>
 7de:	40 81       	ld	r20, Z
 7e0:	51 81       	ldd	r21, Z+1	; 0x01
 7e2:	48 17       	cp	r20, r24
 7e4:	59 07       	cpc	r21, r25
 7e6:	b8 f0       	brcs	.+46     	; 0x816 <malloc+0x5a>
 7e8:	48 17       	cp	r20, r24
 7ea:	59 07       	cpc	r21, r25
 7ec:	71 f4       	brne	.+28     	; 0x80a <malloc+0x4e>
 7ee:	82 81       	ldd	r24, Z+2	; 0x02
 7f0:	93 81       	ldd	r25, Z+3	; 0x03
 7f2:	10 97       	sbiw	r26, 0x00	; 0
 7f4:	29 f0       	breq	.+10     	; 0x800 <malloc+0x44>
 7f6:	13 96       	adiw	r26, 0x03	; 3
 7f8:	9c 93       	st	X, r25
 7fa:	8e 93       	st	-X, r24
 7fc:	12 97       	sbiw	r26, 0x02	; 2
 7fe:	2c c0       	rjmp	.+88     	; 0x858 <malloc+0x9c>
 800:	90 93 fb 01 	sts	0x01FB, r25
 804:	80 93 fa 01 	sts	0x01FA, r24
 808:	27 c0       	rjmp	.+78     	; 0x858 <malloc+0x9c>
 80a:	21 15       	cp	r18, r1
 80c:	31 05       	cpc	r19, r1
 80e:	31 f0       	breq	.+12     	; 0x81c <malloc+0x60>
 810:	42 17       	cp	r20, r18
 812:	53 07       	cpc	r21, r19
 814:	18 f0       	brcs	.+6      	; 0x81c <malloc+0x60>
 816:	a9 01       	movw	r20, r18
 818:	db 01       	movw	r26, r22
 81a:	01 c0       	rjmp	.+2      	; 0x81e <malloc+0x62>
 81c:	ef 01       	movw	r28, r30
 81e:	9a 01       	movw	r18, r20
 820:	bd 01       	movw	r22, r26
 822:	df 01       	movw	r26, r30
 824:	02 80       	ldd	r0, Z+2	; 0x02
 826:	f3 81       	ldd	r31, Z+3	; 0x03
 828:	e0 2d       	mov	r30, r0
 82a:	d7 cf       	rjmp	.-82     	; 0x7da <malloc+0x1e>
 82c:	21 15       	cp	r18, r1
 82e:	31 05       	cpc	r19, r1
 830:	f9 f0       	breq	.+62     	; 0x870 <malloc+0xb4>
 832:	28 1b       	sub	r18, r24
 834:	39 0b       	sbc	r19, r25
 836:	24 30       	cpi	r18, 0x04	; 4
 838:	31 05       	cpc	r19, r1
 83a:	80 f4       	brcc	.+32     	; 0x85c <malloc+0xa0>
 83c:	8a 81       	ldd	r24, Y+2	; 0x02
 83e:	9b 81       	ldd	r25, Y+3	; 0x03
 840:	61 15       	cp	r22, r1
 842:	71 05       	cpc	r23, r1
 844:	21 f0       	breq	.+8      	; 0x84e <malloc+0x92>
 846:	fb 01       	movw	r30, r22
 848:	93 83       	std	Z+3, r25	; 0x03
 84a:	82 83       	std	Z+2, r24	; 0x02
 84c:	04 c0       	rjmp	.+8      	; 0x856 <malloc+0x9a>
 84e:	90 93 fb 01 	sts	0x01FB, r25
 852:	80 93 fa 01 	sts	0x01FA, r24
 856:	fe 01       	movw	r30, r28
 858:	32 96       	adiw	r30, 0x02	; 2
 85a:	44 c0       	rjmp	.+136    	; 0x8e4 <malloc+0x128>
 85c:	fe 01       	movw	r30, r28
 85e:	e2 0f       	add	r30, r18
 860:	f3 1f       	adc	r31, r19
 862:	81 93       	st	Z+, r24
 864:	91 93       	st	Z+, r25
 866:	22 50       	subi	r18, 0x02	; 2
 868:	31 09       	sbc	r19, r1
 86a:	39 83       	std	Y+1, r19	; 0x01
 86c:	28 83       	st	Y, r18
 86e:	3a c0       	rjmp	.+116    	; 0x8e4 <malloc+0x128>
 870:	20 91 f8 01 	lds	r18, 0x01F8
 874:	30 91 f9 01 	lds	r19, 0x01F9
 878:	23 2b       	or	r18, r19
 87a:	41 f4       	brne	.+16     	; 0x88c <malloc+0xd0>
 87c:	20 91 06 01 	lds	r18, 0x0106
 880:	30 91 07 01 	lds	r19, 0x0107
 884:	30 93 f9 01 	sts	0x01F9, r19
 888:	20 93 f8 01 	sts	0x01F8, r18
 88c:	20 91 04 01 	lds	r18, 0x0104
 890:	30 91 05 01 	lds	r19, 0x0105
 894:	21 15       	cp	r18, r1
 896:	31 05       	cpc	r19, r1
 898:	41 f4       	brne	.+16     	; 0x8aa <malloc+0xee>
 89a:	2d b7       	in	r18, 0x3d	; 61
 89c:	3e b7       	in	r19, 0x3e	; 62
 89e:	40 91 08 01 	lds	r20, 0x0108
 8a2:	50 91 09 01 	lds	r21, 0x0109
 8a6:	24 1b       	sub	r18, r20
 8a8:	35 0b       	sbc	r19, r21
 8aa:	e0 91 f8 01 	lds	r30, 0x01F8
 8ae:	f0 91 f9 01 	lds	r31, 0x01F9
 8b2:	e2 17       	cp	r30, r18
 8b4:	f3 07       	cpc	r31, r19
 8b6:	a0 f4       	brcc	.+40     	; 0x8e0 <malloc+0x124>
 8b8:	2e 1b       	sub	r18, r30
 8ba:	3f 0b       	sbc	r19, r31
 8bc:	28 17       	cp	r18, r24
 8be:	39 07       	cpc	r19, r25
 8c0:	78 f0       	brcs	.+30     	; 0x8e0 <malloc+0x124>
 8c2:	ac 01       	movw	r20, r24
 8c4:	4e 5f       	subi	r20, 0xFE	; 254
 8c6:	5f 4f       	sbci	r21, 0xFF	; 255
 8c8:	24 17       	cp	r18, r20
 8ca:	35 07       	cpc	r19, r21
 8cc:	48 f0       	brcs	.+18     	; 0x8e0 <malloc+0x124>
 8ce:	4e 0f       	add	r20, r30
 8d0:	5f 1f       	adc	r21, r31
 8d2:	50 93 f9 01 	sts	0x01F9, r21
 8d6:	40 93 f8 01 	sts	0x01F8, r20
 8da:	81 93       	st	Z+, r24
 8dc:	91 93       	st	Z+, r25
 8de:	02 c0       	rjmp	.+4      	; 0x8e4 <malloc+0x128>
 8e0:	e0 e0       	ldi	r30, 0x00	; 0
 8e2:	f0 e0       	ldi	r31, 0x00	; 0
 8e4:	cf 01       	movw	r24, r30
 8e6:	df 91       	pop	r29
 8e8:	cf 91       	pop	r28
 8ea:	08 95       	ret

000008ec <free>:
 8ec:	cf 93       	push	r28
 8ee:	df 93       	push	r29
 8f0:	00 97       	sbiw	r24, 0x00	; 0
 8f2:	09 f4       	brne	.+2      	; 0x8f6 <free+0xa>
 8f4:	87 c0       	rjmp	.+270    	; 0xa04 <free+0x118>
 8f6:	fc 01       	movw	r30, r24
 8f8:	32 97       	sbiw	r30, 0x02	; 2
 8fa:	13 82       	std	Z+3, r1	; 0x03
 8fc:	12 82       	std	Z+2, r1	; 0x02
 8fe:	c0 91 fa 01 	lds	r28, 0x01FA
 902:	d0 91 fb 01 	lds	r29, 0x01FB
 906:	20 97       	sbiw	r28, 0x00	; 0
 908:	81 f4       	brne	.+32     	; 0x92a <free+0x3e>
 90a:	20 81       	ld	r18, Z
 90c:	31 81       	ldd	r19, Z+1	; 0x01
 90e:	28 0f       	add	r18, r24
 910:	39 1f       	adc	r19, r25
 912:	80 91 f8 01 	lds	r24, 0x01F8
 916:	90 91 f9 01 	lds	r25, 0x01F9
 91a:	82 17       	cp	r24, r18
 91c:	93 07       	cpc	r25, r19
 91e:	79 f5       	brne	.+94     	; 0x97e <free+0x92>
 920:	f0 93 f9 01 	sts	0x01F9, r31
 924:	e0 93 f8 01 	sts	0x01F8, r30
 928:	6d c0       	rjmp	.+218    	; 0xa04 <free+0x118>
 92a:	de 01       	movw	r26, r28
 92c:	20 e0       	ldi	r18, 0x00	; 0
 92e:	30 e0       	ldi	r19, 0x00	; 0
 930:	ae 17       	cp	r26, r30
 932:	bf 07       	cpc	r27, r31
 934:	50 f4       	brcc	.+20     	; 0x94a <free+0x5e>
 936:	12 96       	adiw	r26, 0x02	; 2
 938:	4d 91       	ld	r20, X+
 93a:	5c 91       	ld	r21, X
 93c:	13 97       	sbiw	r26, 0x03	; 3
 93e:	9d 01       	movw	r18, r26
 940:	41 15       	cp	r20, r1
 942:	51 05       	cpc	r21, r1
 944:	09 f1       	breq	.+66     	; 0x988 <free+0x9c>
 946:	da 01       	movw	r26, r20
 948:	f3 cf       	rjmp	.-26     	; 0x930 <free+0x44>
 94a:	b3 83       	std	Z+3, r27	; 0x03
 94c:	a2 83       	std	Z+2, r26	; 0x02
 94e:	40 81       	ld	r20, Z
 950:	51 81       	ldd	r21, Z+1	; 0x01
 952:	84 0f       	add	r24, r20
 954:	95 1f       	adc	r25, r21
 956:	8a 17       	cp	r24, r26
 958:	9b 07       	cpc	r25, r27
 95a:	71 f4       	brne	.+28     	; 0x978 <free+0x8c>
 95c:	8d 91       	ld	r24, X+
 95e:	9c 91       	ld	r25, X
 960:	11 97       	sbiw	r26, 0x01	; 1
 962:	84 0f       	add	r24, r20
 964:	95 1f       	adc	r25, r21
 966:	02 96       	adiw	r24, 0x02	; 2
 968:	91 83       	std	Z+1, r25	; 0x01
 96a:	80 83       	st	Z, r24
 96c:	12 96       	adiw	r26, 0x02	; 2
 96e:	8d 91       	ld	r24, X+
 970:	9c 91       	ld	r25, X
 972:	13 97       	sbiw	r26, 0x03	; 3
 974:	93 83       	std	Z+3, r25	; 0x03
 976:	82 83       	std	Z+2, r24	; 0x02
 978:	21 15       	cp	r18, r1
 97a:	31 05       	cpc	r19, r1
 97c:	29 f4       	brne	.+10     	; 0x988 <free+0x9c>
 97e:	f0 93 fb 01 	sts	0x01FB, r31
 982:	e0 93 fa 01 	sts	0x01FA, r30
 986:	3e c0       	rjmp	.+124    	; 0xa04 <free+0x118>
 988:	d9 01       	movw	r26, r18
 98a:	13 96       	adiw	r26, 0x03	; 3
 98c:	fc 93       	st	X, r31
 98e:	ee 93       	st	-X, r30
 990:	12 97       	sbiw	r26, 0x02	; 2
 992:	4d 91       	ld	r20, X+
 994:	5d 91       	ld	r21, X+
 996:	a4 0f       	add	r26, r20
 998:	b5 1f       	adc	r27, r21
 99a:	ea 17       	cp	r30, r26
 99c:	fb 07       	cpc	r31, r27
 99e:	79 f4       	brne	.+30     	; 0x9be <free+0xd2>
 9a0:	80 81       	ld	r24, Z
 9a2:	91 81       	ldd	r25, Z+1	; 0x01
 9a4:	84 0f       	add	r24, r20
 9a6:	95 1f       	adc	r25, r21
 9a8:	02 96       	adiw	r24, 0x02	; 2
 9aa:	d9 01       	movw	r26, r18
 9ac:	11 96       	adiw	r26, 0x01	; 1
 9ae:	9c 93       	st	X, r25
 9b0:	8e 93       	st	-X, r24
 9b2:	82 81       	ldd	r24, Z+2	; 0x02
 9b4:	93 81       	ldd	r25, Z+3	; 0x03
 9b6:	13 96       	adiw	r26, 0x03	; 3
 9b8:	9c 93       	st	X, r25
 9ba:	8e 93       	st	-X, r24
 9bc:	12 97       	sbiw	r26, 0x02	; 2
 9be:	e0 e0       	ldi	r30, 0x00	; 0
 9c0:	f0 e0       	ldi	r31, 0x00	; 0
 9c2:	8a 81       	ldd	r24, Y+2	; 0x02
 9c4:	9b 81       	ldd	r25, Y+3	; 0x03
 9c6:	00 97       	sbiw	r24, 0x00	; 0
 9c8:	19 f0       	breq	.+6      	; 0x9d0 <free+0xe4>
 9ca:	fe 01       	movw	r30, r28
 9cc:	ec 01       	movw	r28, r24
 9ce:	f9 cf       	rjmp	.-14     	; 0x9c2 <free+0xd6>
 9d0:	ce 01       	movw	r24, r28
 9d2:	02 96       	adiw	r24, 0x02	; 2
 9d4:	28 81       	ld	r18, Y
 9d6:	39 81       	ldd	r19, Y+1	; 0x01
 9d8:	82 0f       	add	r24, r18
 9da:	93 1f       	adc	r25, r19
 9dc:	20 91 f8 01 	lds	r18, 0x01F8
 9e0:	30 91 f9 01 	lds	r19, 0x01F9
 9e4:	28 17       	cp	r18, r24
 9e6:	39 07       	cpc	r19, r25
 9e8:	69 f4       	brne	.+26     	; 0xa04 <free+0x118>
 9ea:	30 97       	sbiw	r30, 0x00	; 0
 9ec:	29 f4       	brne	.+10     	; 0x9f8 <free+0x10c>
 9ee:	10 92 fb 01 	sts	0x01FB, r1
 9f2:	10 92 fa 01 	sts	0x01FA, r1
 9f6:	02 c0       	rjmp	.+4      	; 0x9fc <free+0x110>
 9f8:	13 82       	std	Z+3, r1	; 0x03
 9fa:	12 82       	std	Z+2, r1	; 0x02
 9fc:	d0 93 f9 01 	sts	0x01F9, r29
 a00:	c0 93 f8 01 	sts	0x01F8, r28
 a04:	df 91       	pop	r29
 a06:	cf 91       	pop	r28
 a08:	08 95       	ret

00000a0a <strnlen_P>:
 a0a:	fc 01       	movw	r30, r24
 a0c:	05 90       	lpm	r0, Z+
 a0e:	61 50       	subi	r22, 0x01	; 1
 a10:	70 40       	sbci	r23, 0x00	; 0
 a12:	01 10       	cpse	r0, r1
 a14:	d8 f7       	brcc	.-10     	; 0xa0c <strnlen_P+0x2>
 a16:	80 95       	com	r24
 a18:	90 95       	com	r25
 a1a:	8e 0f       	add	r24, r30
 a1c:	9f 1f       	adc	r25, r31
 a1e:	08 95       	ret

00000a20 <memset>:
 a20:	dc 01       	movw	r26, r24
 a22:	01 c0       	rjmp	.+2      	; 0xa26 <memset+0x6>
 a24:	6d 93       	st	X+, r22
 a26:	41 50       	subi	r20, 0x01	; 1
 a28:	50 40       	sbci	r21, 0x00	; 0
 a2a:	e0 f7       	brcc	.-8      	; 0xa24 <memset+0x4>
 a2c:	08 95       	ret

00000a2e <strnlen>:
 a2e:	fc 01       	movw	r30, r24
 a30:	61 50       	subi	r22, 0x01	; 1
 a32:	70 40       	sbci	r23, 0x00	; 0
 a34:	01 90       	ld	r0, Z+
 a36:	01 10       	cpse	r0, r1
 a38:	d8 f7       	brcc	.-10     	; 0xa30 <strnlen+0x2>
 a3a:	80 95       	com	r24
 a3c:	90 95       	com	r25
 a3e:	8e 0f       	add	r24, r30
 a40:	9f 1f       	adc	r25, r31
 a42:	08 95       	ret

00000a44 <fputc>:
 a44:	0f 93       	push	r16
 a46:	1f 93       	push	r17
 a48:	cf 93       	push	r28
 a4a:	df 93       	push	r29
 a4c:	18 2f       	mov	r17, r24
 a4e:	09 2f       	mov	r16, r25
 a50:	eb 01       	movw	r28, r22
 a52:	8b 81       	ldd	r24, Y+3	; 0x03
 a54:	81 fd       	sbrc	r24, 1
 a56:	03 c0       	rjmp	.+6      	; 0xa5e <fputc+0x1a>
 a58:	8f ef       	ldi	r24, 0xFF	; 255
 a5a:	9f ef       	ldi	r25, 0xFF	; 255
 a5c:	20 c0       	rjmp	.+64     	; 0xa9e <fputc+0x5a>
 a5e:	82 ff       	sbrs	r24, 2
 a60:	10 c0       	rjmp	.+32     	; 0xa82 <fputc+0x3e>
 a62:	4e 81       	ldd	r20, Y+6	; 0x06
 a64:	5f 81       	ldd	r21, Y+7	; 0x07
 a66:	2c 81       	ldd	r18, Y+4	; 0x04
 a68:	3d 81       	ldd	r19, Y+5	; 0x05
 a6a:	42 17       	cp	r20, r18
 a6c:	53 07       	cpc	r21, r19
 a6e:	7c f4       	brge	.+30     	; 0xa8e <fputc+0x4a>
 a70:	e8 81       	ld	r30, Y
 a72:	f9 81       	ldd	r31, Y+1	; 0x01
 a74:	9f 01       	movw	r18, r30
 a76:	2f 5f       	subi	r18, 0xFF	; 255
 a78:	3f 4f       	sbci	r19, 0xFF	; 255
 a7a:	39 83       	std	Y+1, r19	; 0x01
 a7c:	28 83       	st	Y, r18
 a7e:	10 83       	st	Z, r17
 a80:	06 c0       	rjmp	.+12     	; 0xa8e <fputc+0x4a>
 a82:	e8 85       	ldd	r30, Y+8	; 0x08
 a84:	f9 85       	ldd	r31, Y+9	; 0x09
 a86:	81 2f       	mov	r24, r17
 a88:	09 95       	icall
 a8a:	89 2b       	or	r24, r25
 a8c:	29 f7       	brne	.-54     	; 0xa58 <fputc+0x14>
 a8e:	2e 81       	ldd	r18, Y+6	; 0x06
 a90:	3f 81       	ldd	r19, Y+7	; 0x07
 a92:	2f 5f       	subi	r18, 0xFF	; 255
 a94:	3f 4f       	sbci	r19, 0xFF	; 255
 a96:	3f 83       	std	Y+7, r19	; 0x07
 a98:	2e 83       	std	Y+6, r18	; 0x06
 a9a:	81 2f       	mov	r24, r17
 a9c:	90 2f       	mov	r25, r16
 a9e:	df 91       	pop	r29
 aa0:	cf 91       	pop	r28
 aa2:	1f 91       	pop	r17
 aa4:	0f 91       	pop	r16
 aa6:	08 95       	ret

00000aa8 <__ultoa_invert>:
 aa8:	fa 01       	movw	r30, r20
 aaa:	aa 27       	eor	r26, r26
 aac:	28 30       	cpi	r18, 0x08	; 8
 aae:	51 f1       	breq	.+84     	; 0xb04 <__ultoa_invert+0x5c>
 ab0:	20 31       	cpi	r18, 0x10	; 16
 ab2:	81 f1       	breq	.+96     	; 0xb14 <__ultoa_invert+0x6c>
 ab4:	e8 94       	clt
 ab6:	6f 93       	push	r22
 ab8:	6e 7f       	andi	r22, 0xFE	; 254
 aba:	6e 5f       	subi	r22, 0xFE	; 254
 abc:	7f 4f       	sbci	r23, 0xFF	; 255
 abe:	8f 4f       	sbci	r24, 0xFF	; 255
 ac0:	9f 4f       	sbci	r25, 0xFF	; 255
 ac2:	af 4f       	sbci	r26, 0xFF	; 255
 ac4:	b1 e0       	ldi	r27, 0x01	; 1
 ac6:	3e d0       	rcall	.+124    	; 0xb44 <__ultoa_invert+0x9c>
 ac8:	b4 e0       	ldi	r27, 0x04	; 4
 aca:	3c d0       	rcall	.+120    	; 0xb44 <__ultoa_invert+0x9c>
 acc:	67 0f       	add	r22, r23
 ace:	78 1f       	adc	r23, r24
 ad0:	89 1f       	adc	r24, r25
 ad2:	9a 1f       	adc	r25, r26
 ad4:	a1 1d       	adc	r26, r1
 ad6:	68 0f       	add	r22, r24
 ad8:	79 1f       	adc	r23, r25
 ada:	8a 1f       	adc	r24, r26
 adc:	91 1d       	adc	r25, r1
 ade:	a1 1d       	adc	r26, r1
 ae0:	6a 0f       	add	r22, r26
 ae2:	71 1d       	adc	r23, r1
 ae4:	81 1d       	adc	r24, r1
 ae6:	91 1d       	adc	r25, r1
 ae8:	a1 1d       	adc	r26, r1
 aea:	20 d0       	rcall	.+64     	; 0xb2c <__ultoa_invert+0x84>
 aec:	09 f4       	brne	.+2      	; 0xaf0 <__ultoa_invert+0x48>
 aee:	68 94       	set
 af0:	3f 91       	pop	r19
 af2:	2a e0       	ldi	r18, 0x0A	; 10
 af4:	26 9f       	mul	r18, r22
 af6:	11 24       	eor	r1, r1
 af8:	30 19       	sub	r19, r0
 afa:	30 5d       	subi	r19, 0xD0	; 208
 afc:	31 93       	st	Z+, r19
 afe:	de f6       	brtc	.-74     	; 0xab6 <__ultoa_invert+0xe>
 b00:	cf 01       	movw	r24, r30
 b02:	08 95       	ret
 b04:	46 2f       	mov	r20, r22
 b06:	47 70       	andi	r20, 0x07	; 7
 b08:	40 5d       	subi	r20, 0xD0	; 208
 b0a:	41 93       	st	Z+, r20
 b0c:	b3 e0       	ldi	r27, 0x03	; 3
 b0e:	0f d0       	rcall	.+30     	; 0xb2e <__ultoa_invert+0x86>
 b10:	c9 f7       	brne	.-14     	; 0xb04 <__ultoa_invert+0x5c>
 b12:	f6 cf       	rjmp	.-20     	; 0xb00 <__ultoa_invert+0x58>
 b14:	46 2f       	mov	r20, r22
 b16:	4f 70       	andi	r20, 0x0F	; 15
 b18:	40 5d       	subi	r20, 0xD0	; 208
 b1a:	4a 33       	cpi	r20, 0x3A	; 58
 b1c:	18 f0       	brcs	.+6      	; 0xb24 <__ultoa_invert+0x7c>
 b1e:	49 5d       	subi	r20, 0xD9	; 217
 b20:	31 fd       	sbrc	r19, 1
 b22:	40 52       	subi	r20, 0x20	; 32
 b24:	41 93       	st	Z+, r20
 b26:	02 d0       	rcall	.+4      	; 0xb2c <__ultoa_invert+0x84>
 b28:	a9 f7       	brne	.-22     	; 0xb14 <__ultoa_invert+0x6c>
 b2a:	ea cf       	rjmp	.-44     	; 0xb00 <__ultoa_invert+0x58>
 b2c:	b4 e0       	ldi	r27, 0x04	; 4
 b2e:	a6 95       	lsr	r26
 b30:	97 95       	ror	r25
 b32:	87 95       	ror	r24
 b34:	77 95       	ror	r23
 b36:	67 95       	ror	r22
 b38:	ba 95       	dec	r27
 b3a:	c9 f7       	brne	.-14     	; 0xb2e <__ultoa_invert+0x86>
 b3c:	00 97       	sbiw	r24, 0x00	; 0
 b3e:	61 05       	cpc	r22, r1
 b40:	71 05       	cpc	r23, r1
 b42:	08 95       	ret
 b44:	9b 01       	movw	r18, r22
 b46:	ac 01       	movw	r20, r24
 b48:	0a 2e       	mov	r0, r26
 b4a:	06 94       	lsr	r0
 b4c:	57 95       	ror	r21
 b4e:	47 95       	ror	r20
 b50:	37 95       	ror	r19
 b52:	27 95       	ror	r18
 b54:	ba 95       	dec	r27
 b56:	c9 f7       	brne	.-14     	; 0xb4a <__ultoa_invert+0xa2>
 b58:	62 0f       	add	r22, r18
 b5a:	73 1f       	adc	r23, r19
 b5c:	84 1f       	adc	r24, r20
 b5e:	95 1f       	adc	r25, r21
 b60:	a0 1d       	adc	r26, r0
 b62:	08 95       	ret

00000b64 <__divmodsi4>:
 b64:	05 2e       	mov	r0, r21
 b66:	97 fb       	bst	r25, 7
 b68:	1e f4       	brtc	.+6      	; 0xb70 <__divmodsi4+0xc>
 b6a:	00 94       	com	r0
 b6c:	0e 94 c9 05 	call	0xb92	; 0xb92 <__negsi2>
 b70:	57 fd       	sbrc	r21, 7
 b72:	07 d0       	rcall	.+14     	; 0xb82 <__divmodsi4_neg2>
 b74:	0e 94 1b 06 	call	0xc36	; 0xc36 <__udivmodsi4>
 b78:	07 fc       	sbrc	r0, 7
 b7a:	03 d0       	rcall	.+6      	; 0xb82 <__divmodsi4_neg2>
 b7c:	4e f4       	brtc	.+18     	; 0xb90 <__divmodsi4_exit>
 b7e:	0c 94 c9 05 	jmp	0xb92	; 0xb92 <__negsi2>

00000b82 <__divmodsi4_neg2>:
 b82:	50 95       	com	r21
 b84:	40 95       	com	r20
 b86:	30 95       	com	r19
 b88:	21 95       	neg	r18
 b8a:	3f 4f       	sbci	r19, 0xFF	; 255
 b8c:	4f 4f       	sbci	r20, 0xFF	; 255
 b8e:	5f 4f       	sbci	r21, 0xFF	; 255

00000b90 <__divmodsi4_exit>:
 b90:	08 95       	ret

00000b92 <__negsi2>:
 b92:	90 95       	com	r25
 b94:	80 95       	com	r24
 b96:	70 95       	com	r23
 b98:	61 95       	neg	r22
 b9a:	7f 4f       	sbci	r23, 0xFF	; 255
 b9c:	8f 4f       	sbci	r24, 0xFF	; 255
 b9e:	9f 4f       	sbci	r25, 0xFF	; 255
 ba0:	08 95       	ret

00000ba2 <__muluhisi3>:
 ba2:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__umulhisi3>
 ba6:	a5 9f       	mul	r26, r21
 ba8:	90 0d       	add	r25, r0
 baa:	b4 9f       	mul	r27, r20
 bac:	90 0d       	add	r25, r0
 bae:	a4 9f       	mul	r26, r20
 bb0:	80 0d       	add	r24, r0
 bb2:	91 1d       	adc	r25, r1
 bb4:	11 24       	eor	r1, r1
 bb6:	08 95       	ret

00000bb8 <__mulshisi3>:
 bb8:	b7 ff       	sbrs	r27, 7
 bba:	0c 94 d1 05 	jmp	0xba2	; 0xba2 <__muluhisi3>

00000bbe <__mulohisi3>:
 bbe:	0e 94 d1 05 	call	0xba2	; 0xba2 <__muluhisi3>
 bc2:	82 1b       	sub	r24, r18
 bc4:	93 0b       	sbc	r25, r19
 bc6:	08 95       	ret

00000bc8 <__prologue_saves__>:
 bc8:	2f 92       	push	r2
 bca:	3f 92       	push	r3
 bcc:	4f 92       	push	r4
 bce:	5f 92       	push	r5
 bd0:	6f 92       	push	r6
 bd2:	7f 92       	push	r7
 bd4:	8f 92       	push	r8
 bd6:	9f 92       	push	r9
 bd8:	af 92       	push	r10
 bda:	bf 92       	push	r11
 bdc:	cf 92       	push	r12
 bde:	df 92       	push	r13
 be0:	ef 92       	push	r14
 be2:	ff 92       	push	r15
 be4:	0f 93       	push	r16
 be6:	1f 93       	push	r17
 be8:	cf 93       	push	r28
 bea:	df 93       	push	r29
 bec:	cd b7       	in	r28, 0x3d	; 61
 bee:	de b7       	in	r29, 0x3e	; 62
 bf0:	ca 1b       	sub	r28, r26
 bf2:	db 0b       	sbc	r29, r27
 bf4:	0f b6       	in	r0, 0x3f	; 63
 bf6:	f8 94       	cli
 bf8:	de bf       	out	0x3e, r29	; 62
 bfa:	0f be       	out	0x3f, r0	; 63
 bfc:	cd bf       	out	0x3d, r28	; 61
 bfe:	09 94       	ijmp

00000c00 <__epilogue_restores__>:
 c00:	2a 88       	ldd	r2, Y+18	; 0x12
 c02:	39 88       	ldd	r3, Y+17	; 0x11
 c04:	48 88       	ldd	r4, Y+16	; 0x10
 c06:	5f 84       	ldd	r5, Y+15	; 0x0f
 c08:	6e 84       	ldd	r6, Y+14	; 0x0e
 c0a:	7d 84       	ldd	r7, Y+13	; 0x0d
 c0c:	8c 84       	ldd	r8, Y+12	; 0x0c
 c0e:	9b 84       	ldd	r9, Y+11	; 0x0b
 c10:	aa 84       	ldd	r10, Y+10	; 0x0a
 c12:	b9 84       	ldd	r11, Y+9	; 0x09
 c14:	c8 84       	ldd	r12, Y+8	; 0x08
 c16:	df 80       	ldd	r13, Y+7	; 0x07
 c18:	ee 80       	ldd	r14, Y+6	; 0x06
 c1a:	fd 80       	ldd	r15, Y+5	; 0x05
 c1c:	0c 81       	ldd	r16, Y+4	; 0x04
 c1e:	1b 81       	ldd	r17, Y+3	; 0x03
 c20:	aa 81       	ldd	r26, Y+2	; 0x02
 c22:	b9 81       	ldd	r27, Y+1	; 0x01
 c24:	ce 0f       	add	r28, r30
 c26:	d1 1d       	adc	r29, r1
 c28:	0f b6       	in	r0, 0x3f	; 63
 c2a:	f8 94       	cli
 c2c:	de bf       	out	0x3e, r29	; 62
 c2e:	0f be       	out	0x3f, r0	; 63
 c30:	cd bf       	out	0x3d, r28	; 61
 c32:	ed 01       	movw	r28, r26
 c34:	08 95       	ret

00000c36 <__udivmodsi4>:
 c36:	a1 e2       	ldi	r26, 0x21	; 33
 c38:	1a 2e       	mov	r1, r26
 c3a:	aa 1b       	sub	r26, r26
 c3c:	bb 1b       	sub	r27, r27
 c3e:	fd 01       	movw	r30, r26
 c40:	0d c0       	rjmp	.+26     	; 0xc5c <__udivmodsi4_ep>

00000c42 <__udivmodsi4_loop>:
 c42:	aa 1f       	adc	r26, r26
 c44:	bb 1f       	adc	r27, r27
 c46:	ee 1f       	adc	r30, r30
 c48:	ff 1f       	adc	r31, r31
 c4a:	a2 17       	cp	r26, r18
 c4c:	b3 07       	cpc	r27, r19
 c4e:	e4 07       	cpc	r30, r20
 c50:	f5 07       	cpc	r31, r21
 c52:	20 f0       	brcs	.+8      	; 0xc5c <__udivmodsi4_ep>
 c54:	a2 1b       	sub	r26, r18
 c56:	b3 0b       	sbc	r27, r19
 c58:	e4 0b       	sbc	r30, r20
 c5a:	f5 0b       	sbc	r31, r21

00000c5c <__udivmodsi4_ep>:
 c5c:	66 1f       	adc	r22, r22
 c5e:	77 1f       	adc	r23, r23
 c60:	88 1f       	adc	r24, r24
 c62:	99 1f       	adc	r25, r25
 c64:	1a 94       	dec	r1
 c66:	69 f7       	brne	.-38     	; 0xc42 <__udivmodsi4_loop>
 c68:	60 95       	com	r22
 c6a:	70 95       	com	r23
 c6c:	80 95       	com	r24
 c6e:	90 95       	com	r25
 c70:	9b 01       	movw	r18, r22
 c72:	ac 01       	movw	r20, r24
 c74:	bd 01       	movw	r22, r26
 c76:	cf 01       	movw	r24, r30
 c78:	08 95       	ret

00000c7a <__umulhisi3>:
 c7a:	a2 9f       	mul	r26, r18
 c7c:	b0 01       	movw	r22, r0
 c7e:	b3 9f       	mul	r27, r19
 c80:	c0 01       	movw	r24, r0
 c82:	a3 9f       	mul	r26, r19
 c84:	70 0d       	add	r23, r0
 c86:	81 1d       	adc	r24, r1
 c88:	11 24       	eor	r1, r1
 c8a:	91 1d       	adc	r25, r1
 c8c:	b2 9f       	mul	r27, r18
 c8e:	70 0d       	add	r23, r0
 c90:	81 1d       	adc	r24, r1
 c92:	11 24       	eor	r1, r1
 c94:	91 1d       	adc	r25, r1
 c96:	08 95       	ret

00000c98 <_exit>:
 c98:	f8 94       	cli

00000c9a <__stop_program>:
 c9a:	ff cf       	rjmp	.-2      	; 0xc9a <__stop_program>
